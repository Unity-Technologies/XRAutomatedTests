2019.4_RunAllTests:
  name: 2019.4_RunAllTests
  variables:
    unityVERSION: "2019.4/staging"
  dependencies:
    - path: .yamato/2019.4-FunctionalTests.yml#2019.4_FunctionalTests
      rerun: always
    - path: .yamato/2019.4-GraphicsTests.yml#2019.4_GraphicsTests
      rerun: always
    - path: .yamato/2019.4-RunAllTests.yml#2019.4_RunAllTests_OnJenkins
      rerun: always

2019.4_RunAllTests_OnJenkins:
  name: 2019.4_RunAllTests_OnJenkins
  agent:
    type: Unity::VM
    image: sdet/gamecode_win10:latest
    flavor: b1.large
  interpreter: python
  variables:
    unityVERSION: "2019.4/staging"
  commands:
    - |

      import os

      #switch to our yamato directory
      dirname = os.path.dirname(__file__)
      filename = os.path.join(dirname, '.yamato')
      os.chdir(path)

      import utility.JenkinsJob as JenkinsJob
      import sys

      project_name = "2019.4-Run_All_Tests"

      #Retrieve the UnityVERSION, and then determine what type of version it is. (IE: BranchName, UnityVersion, or UnityRevision)
      version = os.getenv("unityVERSION")
      versionType = JenkinsJob.parse_version_for_jenkins(version)
      #Set the versionType and Version for passing to the Jenkins job.
      params = { versionType : version }

      #Invoke the Jenkins Job, and wait for it to complete before returning.
      result = JenkinsJob.start_jenkins_job(project_name,params,True,True)
      print("result:" + result)

      #check to see if we were successful, otherwise exit out with an error.
      if result != "SUCCESS":
        sys.exit("Jenkins Job: " + project_name +" has failed!")