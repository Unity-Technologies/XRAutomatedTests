// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: arcore_clearcut.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GoogleARCoreInternal.Proto {

  /// <summary>Holder for reflection information generated from arcore_clearcut.proto</summary>
  public static partial class ArcoreClearcutReflection {

    #region Descriptor
    /// <summary>File descriptor for arcore_clearcut.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ArcoreClearcutReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVhcmNvcmVfY2xlYXJjdXQucHJvdG8SEWNvbS5nb29nbGUuYXJjb3JlIo4C",
            "CghMb2dFdmVudBIVCg1ldmVudF90aW1lX21zGAEgASgDEhcKD2V2ZW50X3Vw",
            "dGltZV9tcxgRIAEoAxIYChBzb3VyY2VfZXh0ZW5zaW9uGAYgASgMEiUKG3Rp",
            "bWV6b25lX29mZnNldF9zZWNvbmRzX3ZhbBgPIAEoEkgAQhkKF3RpbWV6b25l",
            "X29mZnNldF9zZWNvbmRzSgQIFRAWSgQIAhADSgQICxAMSgQIDBANSgQIChAL",
            "SgQIAxAESgQIBBAFSgQICRAKSgQICBAJSgQIDRAOSgQIBxAISgQIDhAPSgQI",
            "EBARSgQIEhATSgQIGBAZSgQIExAUSgQIFBAVSgQIFhAXSgQIFxAYSgQIGRAa",
            "ItSDAQoKTG9nUmVxdWVzdBIXCg9yZXF1ZXN0X3RpbWVfbXMYBCABKAMSGQoR",
            "cmVxdWVzdF91cHRpbWVfbXMYCCABKAMSQQoObG9nX3NvdXJjZV92YWwYAiAB",
            "KA4yJy5jb20uZ29vZ2xlLmFyY29yZS5Mb2dSZXF1ZXN0LkxvZ1NvdXJjZUgA",
            "Ei4KCWxvZ19ldmVudBgDIAMoCzIbLmNvbS5nb29nbGUuYXJjb3JlLkxvZ0V2",
            "ZW50Is2BAQoJTG9nU291cmNlEgkKBVNUT1JFEAASFAoHVU5LTk9XThD/////",
            "//////8BEhgKE0JBVENIRURfTE9HX1JFUVVFU1QQ5QISDQoJV0VCX1NUT1JF",
            "EEESDwoKV09SS19TVE9SRRCEARITCg5XT1JLX1NUT1JFX0FQUBCFAhINCglF",
            "RFVfU1RPUkUQDxIJCgVNVVNJQxABEgkKBUJPT0tTEAISCQoFVklERU8QAxIK",
            "CgZNT1ZJRVMQShINCglNQUdBWklORVMQBBIJCgVHQU1FUxAFEggKBExCX0EQ",
            "BhITCgtBTkRST0lEX0lERRAHGgIIARIICgRMQl9QEAgSCAoETEJfUxAJEgwK",
            "CEdNU19DT1JFEAoSEAoMQVBQX1VTQUdFXzFQEAsSCQoFSUNJTkcQDBIMCghI",
            "RVJSRVZBRBANEg0KCUdPT0dMRV9UVhAOEhMKD0dNU19DT1JFX1BFT1BMRRAQ",
            "EgYKAkxFEBESFAoQR09PR0xFX0FOQUxZVElDUxASEggKBExCX0QQExIPCgtB",
            "TkRST0lEX0dTQRAUEggKBExCX1QQFRIXCg9QRVJTT05BTF9MT0dHRVIQFhoC",
            "CAESHwoXUEVSU09OQUxfQlJPV1NFUl9MT0dHRVIQJRoCCAESIgoeR01TX0NP",
            "UkVfV0FMTEVUX01FUkNIQU5UX0VSUk9SEBcSCAoETEJfQxAYEgkKBUxCX0lB",
            "EDQSDgoFTEJfQ0IQ7QEaAggBEg4KBUxCX0RNEIwCGgIIARIJCgRDTF9DEO0D",
            "EgoKBUNMX0RNEO4DEhAKDEFORFJPSURfQVVUSBAZEhIKDkFORFJPSURfQ0FN",
            "RVJBEBoSBgoCQ1cQGxIQCgtDV19DT1VOVEVSUxDzARIHCgNHRUwQHBIOCgpE",
            "TkFfUFJPQkVSEB0SCwoDVURSEB4aAggBEhMKD0dNU19DT1JFX1dBTExFVBAf",
            "EgoKBlNPQ0lBTBAgEhIKDklOU1RPUkVfV0FMTEVUECESCAoETk9WQRAiEg0K",
            "BUxCX0NBECMaAggBEg0KCUxBVElOX0lNRRAkEhAKDE5FV1NfV0VBVEhFUhAm",
            "EiAKG05FV1NfV0VBVEhFUl9BTkRST0lEX1BSSU1FUxDKAxIcChdORVdTX1dF",
            "QVRIRVJfSU9TX1BSSU1FUxDLAxILCgdIQU5HT1VUECcSFwoTSEFOR09VVF9M",
            "T0dfUkVRVUVTVBAyEg4KCkNPUFJFU0VOQ0UQKBITCg9TT0NJQUxfQUZGSU5J",
            "VFkQKRIbChZTT0NJQUxfQUZGSU5JVFlfUEhPVE9TENEDEhoKFVNPQ0lBTF9B",
            "RkZJTklUWV9HTUFJTBCDBBIaChVTT0NJQUxfQUZGSU5JVFlfSU5CT1gQhAQS",
            "GQoUU09DSUFMX0FGRklOSVRZX0FQREwQwwUSGAoTUEVPUExFX0FVVE9DT01Q",
            "TEVURRC+BBIMCgdTRU5ES0lUEPAEEh8KGlBFT1BMRV9BVVRPQ09NUExFVEVf",
            "Q0xJRU5UEPEEEgoKBlBIT1RPUxAqEgcKA0dDTRArEgoKBkdPS0FSVBAsEgkK",
            "BUZJTkRSEC0SFQoRQU5EUk9JRF9NRVNTQUdJTkcQLhITCg5CVUdMRV9DT1VO",
            "VEVSUxDDAhIOCgpTT0NJQUxfV0VCEC8SDAoIQkFDS0RST1AQMBIOCgpURUxF",
            "TUFUSUNTEDESEQoNR1ZDX0hBUlZFU1RFUhAzEgcKA0NBUhA1EhEKDVBJWEVM",
            "X1BFUkZFQ1QQNhIJCgVEUklWRRA3EggKBERPQ1MQOBIKCgZTSEVFVFMQORIK",
            "CgZTTElERVMQOhIHCgNJTUUQOxIICgRXQVJQEDwSEgoOTkZDX1BST0dSQU1N",
            "RVIQPRIMCghORVRTVEFUUxA+Eg0KCU5FV1NTVEFORBA/EhUKEUtJRFNfQ09N",
            "TVVOSUNBVE9SEEASEgoOV0lGSV9BU1NJU1RBTlQQQhIaChVXSUZJX0FTU0lT",
            "VEFOVF9QUklNRVMQxgISHAoXV0lGSV9BU1NJU1RBTlRfQ09VTlRFUlMQxQUS",
            "EwoPQ0FTVF9TRU5ERVJfU0RLEEMSEQoNQ1JPTkVUX1NPQ0lBTBBEEg0KCVBI",
            "RU5PVFlQRRBFEhYKElBIRU5PVFlQRV9DT1VOVEVSUxBGEhAKDENIUk9NRV9J",
            "TkZSQRBHEg0KCUpVU1RTUEVBSxBIEhAKDFBFUkZfUFJPRklMRRBJEgsKB0tB",
            "VE5JU1MQSxIUChBTT0NJQUxfQVBQSU5WSVRFEEwSEAoMR01NX0NPVU5URVJT",
            "EE0SEgoOQk9ORF9PTkVHT09HTEUQThIMCghNQVBTX0FQSRBPEhYKEUNST05F",
            "VF9BTkRST0lEX1lUEMQBEhYKEkNST05FVF9BTkRST0lEX0dTQRBQEhcKE0dP",
            "T0dMRV9GSVRfV0VBUkFCTEUQURIUCg9GSVRORVNTX0FORFJPSUQQqQESFQoQ",
            "RklUTkVTU19HTVNfQ09SRRCqARISCg5HT09HTEVfRVhQUkVTUxBSEhwKF0dP",
            "T0dMRV9FWFBSRVNTX0NPVU5URVJTEJ8FEhcKEkdPT0dMRV9FWFBSRVNTX0RF",
            "VhDXARIqCiVHT09HTEVfRVhQUkVTU19DT1VSSUVSX0FORFJPSURfUFJJTUVT",
            "EOQBEiIKHUdPT0dMRV9FWFBSRVNTX0FORFJPSURfUFJJTUVTEOUBEh4KGUdP",
            "T0dMRV9FWFBSRVNTX0lPU19QUklNRVMQ9gISKwomR09PR0xFX0VYUFJFU1Nf",
            "U1RPUkVPTVNfQU5EUk9JRF9QUklNRVMQ8AESCQoFU0VOU0UQUxISCg5BTkRS",
            "T0lEX0JBQ0tVUBBUEgYKAlZSEFUSEAoMSU1FX0NPVU5URVJTEFYSEAoMU0VU",
            "VVBfV0laQVJEEFcSFAoQRU1FUkdFTkNZX0FTU0lTVBBYEggKBFRST04QWRIR",
            "Cg1UUk9OX0NPVU5URVJTEFoSEQoNQkFUVEVSWV9TVEFUUxBbEg4KCkRJU0tf",
            "U1RBVFMQXBISCg5HUkFQSElDU19TVEFUUxBrEg4KClBST0NfU1RBVFMQXRIN",
            "CghEUk9QX0JPWBCDARIWChFGSU5HRVJQUklOVF9TVEFUUxC1ARIXChJOT1RJ",
            "RklDQVRJT05fU1RBVFMQtgESEwoOU0VUVElOR1NfU1RBVFMQhgMSDQoIU1RP",
            "UkFHRUQQmwQSFQoRVEFQX0FORF9QQVlfR0NPUkUQXhIOCgpBMTFZTE9HR0VS",
            "EF8SEAoMR0NNX0NPVU5URVJTEGASGQoVUExBQ0VTX05PX0dMU19DT05TRU5U",
            "EGESFwoTVEFDSFlPTl9MT0dfUkVRVUVTVBBiEhQKEFRBQ0hZT05fQ09VTlRF",
            "UlMQYxIPCgpEVU9fQ1JPTkVUEIwDEgoKBlZJU0lPThBkEhgKFFNPQ0lBTF9V",
            "U0VSX0xPQ0FUSU9OEGUSEgoOTEFVTkNIUEFEX1RPWVMQZhIUChBNRVRBTE9H",
            "X0NPVU5URVJTEGcSFAoQTU9CSUxFU0RLX0NMSUVOVBBoEhcKE0FORFJPSURf",
            "VkVSSUZZX0FQUFMQaRIMCghBRFNISUVMRBBqEgsKB1NIRVJMT0cQbBITCg9M",
            "RV9VTFJfQ09VTlRFUlMQbRILCgdHTU1fVUUzEG4SDAoIQ0FMRU5EQVIQbxIN",
            "CgVFTkRFUhBwGgIIARISCg5GQU1JTFlfQ09NUEFTUxBxEg8KB1RSQU5TT00Q",
            "choCCAESGAoQVFJBTlNPTV9DT1VOVEVSUxBzGgIIARIJCgVMQl9BUxB0EgoK",
            "BkxCX0NGRxB1EgsKB0lPU19HU0EQdhITCg9UQVBfQU5EX1BBWV9BUFAQdxId",
            "ChhUQVBfQU5EX1BBWV9BUFBfQ09VTlRFUlMQiQISEAoIRkxZRFJPSUQQeBoC",
            "CAESDgoKQ1BBTkVMX0FQUBB5EhYKEkFORFJPSURfU05FVF9HQ09SRRB6EhUK",
            "EUFORFJPSURfU05FVF9JRExFEHsSFAoQQU5EUk9JRF9TTkVUX0pBUhB8EhMK",
            "D0NPTlRFWFRfTUFOQUdFUhB9Eg0KCUNMQVNTUk9PTRB+Eg4KClRBSUxPUk1B",
            "REUQfxIJCgRLRUVQEIABEhcKEkdNTV9CUklJTV9DT1VOVEVSUxCBARIXChJD",
            "SFJPTUVDQVNUX0FQUF9MT0cQggESEwoOQURXT1JEU19NT0JJTEUQhQESIgod",
            "QURXT1JEU19NT0JJTEVfQU5EUk9JRF9QUklNRVMQ4AESHgoZQURXT1JEU19N",
            "T0JJTEVfSU9TX1BSSU1FUxCiBBITCg5MRUFOQkFDS19FVkVOVBCGARISCg1B",
            "TkRST0lEX0dNQUlMEIcBEg8KClNBTVBMRV9TSE0QiAESGQoUR1BMVVNfQU5E",
            "Uk9JRF9QUklNRVMQjAESJAobR1BMVVNfQU5EUk9JRF9TWVNURU1fSEVBTFRI",
            "EIwBGgIIARIZChRHTUFJTF9BTkRST0lEX1BSSU1FUxCWARIkChtHTUFJTF9B",
            "TkRST0lEX1NZU1RFTV9IRUFMVEgQlgEaAggBEhwKF0NBTEVOREFSX0FORFJP",
            "SURfUFJJTUVTEJcBEicKHkNBTEVOREFSX0FORFJPSURfU1lTVEVNX0hFQUxU",
            "SBCXARoCCAESGAoTRE9DU19BTkRST0lEX1BSSU1FUxCYARIjChpET0NTX0FO",
            "RFJPSURfU1lTVEVNX0hFQUxUSBCYARoCCAESHwoaWVRfTUFJTl9BUFBfQU5E",
            "Uk9JRF9QUklNRVMQmgESGwoWWVRfS0lEU19BTkRST0lEX1BSSU1FUxCbARId",
            "ChhZVF9HQU1JTkdfQU5EUk9JRF9QUklNRVMQnAESHAoXWVRfTVVTSUNfQU5E",
            "Uk9JRF9QUklNRVMQnQESGwoWWVRfTElURV9BTkRST0lEX1BSSU1FUxCeARIe",
            "ChlZVF9DUkVBVE9SX0FORFJPSURfUFJJTUVTEKsBEiAKG1lUX1VOUExVR0dF",
            "RF9BTkRST0lEX1BSSU1FUxDNBBIXChJKQU1fQU5EUk9JRF9QUklNRVMQnwES",
            "HQoYSkFNX0tJT1NLX0FORFJPSURfUFJJTUVTEKABEhoKFVBIT1RPU19BTkRS",
            "T0lEX1BSSU1FUxClARIZChREUklWRV9BTkRST0lEX1BSSU1FUxCmARIaChVT",
            "SEVFVFNfQU5EUk9JRF9QUklNRVMQpwESGgoVU0xJREVTX0FORFJPSURfUFJJ",
            "TUVTEKgBEhwKF1NOQVBTRUVEX0FORFJPSURfUFJJTUVTELIBEhwKF0hBTkdP",
            "VVRTX0FORFJPSURfUFJJTUVTELMBEhkKFElOQk9YX0FORFJPSURfUFJJTUVT",
            "ELQBEhUKEElOQk9YX0lPU19QUklNRVMQhgISEwoOU0RQX0lPU19QUklNRVMQ",
            "nwISGwoWR01TQ09SRV9BTkRST0lEX1BSSU1FUxDBARIjCh5QTEFZX01VU0lD",
            "X0FORFJPSURfV0VBUl9QUklNRVMQyAESLgopUExBWV9NVVNJQ19BTkRST0lE",
            "X1dFQVJfU1RBTkRBTE9ORV9QUklNRVMQowMSHAoXR0VBUkhFQURfQU5EUk9J",
            "RF9QUklNRVMQyQESHAoXSU5TVE9SRV9DT05TVU1FUl9QUklNRVMQzwESFgoR",
            "U0FNUExFX0lPU19QUklNRVMQygESGgoVQ1BBTkVMX0FORFJPSURfUFJJTUVT",
            "ENUBEhoKFUhVRERMRV9BTkRST0lEX1BSSU1FUxDWARIXChJBV1hfQU5EUk9J",
            "RF9QUklNRVMQ3gESFwoSR0hTX0FORFJPSURfUFJJTUVTEN8BEh8KGlRBUF9B",
            "TkRfUEFZX0FORFJPSURfUFJJTUVTEOMBEh4KGVdBTExFVF9BUFBfQU5EUk9J",
            "RF9QUklNRVMQ6AESGgoVV0FMTEVUX0FQUF9JT1NfUFJJTUVTEOkBEh0KGEFO",
            "QUxZVElDU19BTkRST0lEX1BSSU1FUxDrARIZChRBTkFMWVRJQ1NfSU9TX1BS",
            "SU1FUxCaBBIaChVTUEFDRVNfQU5EUk9JRF9QUklNRVMQ7AESFgoRU1BBQ0VT",
            "X0lPU19QUklNRVMQlAISGwoWU09DSUVUWV9BTkRST0lEX1BSSU1FUxDuARIZ",
            "ChBHTU1fQlJJSU1fUFJJTUVTEO8BGgIIARIOCglDV19QUklNRVMQ8gESEgoN",
            "Q1dfSU9TX1BSSU1FUxC7BRIeChlGQU1JTFlMSU5LX0FORFJPSURfUFJJTUVT",
            "EPQBEhoKFUZBTUlMWUxJTktfSU9TX1BSSU1FUxCjAhIOCglXSF9QUklNRVMQ",
            "+AESGAoTTk9WQV9BTkRST0lEX1BSSU1FUxD5ARIhChxQSE9UT1NfRFJBUEVS",
            "X0FORFJPSURfUFJJTUVTEP0BEg8KCkdNTV9QUklNRVMQ/gESHQoYVFJBTlNM",
            "QVRFX0FORFJPSURfUFJJTUVTEP8BEhkKFFRSQU5TTEFURV9JT1NfUFJJTUVT",
            "EIACEh0KGEZSRUlHSFRFUl9BTkRST0lEX1BSSU1FUxCDAhIgChdGTFlEUk9J",
            "RF9BTkRST0lEX1BSSU1FUxCDAhoCCAESFgoRQ09OU1VNRVJJUV9QUklNRVMQ",
            "hAISFwoSR01CX0FORFJPSURfUFJJTUVTEIcCEhQKD0NMT1VERFBDX1BSSU1F",
            "UxCwAhIYChNDTE9VRERQQ19BUkNfUFJJTUVTELECEgoKBUlDT1JFEIkBEhkK",
            "FFBBTkNFVFRBX01PQklMRV9IT1NUEIoBEiIKHVBBTkNFVFRBX01PQklMRV9I",
            "T1NUX0NPVU5URVJTEIsBEiAKF0NST1NTREVWSUNFTk9USUZJQ0FUSU9OEI0B",
            "GgIIARIkChtDUk9TU0RFVklDRU5PVElGSUNBVElPTl9ERVYQjgEaAggBEhYK",
            "EU1BUFNfQVBJX0NPVU5URVJTEI8BEggKA0dQVRCQARIOCglPTl9USEVfR08Q",
            "kQESFwoST05fVEhFX0dPX0NPVU5URVJTEJIBEh0KGE9OX1RIRV9HT19BTkRS",
            "T0lEX1BSSU1FUxDKAhIZChRPTl9USEVfR09fSU9TX1BSSU1FUxDwAhIhChxH",
            "TVNfQ09SRV9QRU9QTEVfQVVUT0NPTVBMRVRFEJMBEhoKEUZMWURST0lEX0NP",
            "VU5URVJTEJQBGgIIARINCghGSVJFQkFMTBCVARIWChFGSVJFQkFMTF9DT1VO",
            "VEVSUxCBAhIUCg9DUk9ORVRfRklSRUJBTEwQrwISFAoPRklSRUJBTExfUFJJ",
            "TUVTEIoCEhgKE0ZJUkVCQUxMX0lPU19QUklNRVMQuQISLAonR09PR0xFX0hB",
            "TkRXUklUSU5HX0lOUFVUX0FORFJPSURfUFJJTUVTELoCEhIKCVBZUk9DTEFT",
            "TRCZARoCCAESGQoUQU5EUk9JRF9HU0FfQ09VTlRFUlMQoQESFAoPSkFNX0lN",
            "UFJFU1NJT05TEKIBEhoKFUpBTV9LSU9TS19JTVBSRVNTSU9OUxCjARIRCgxQ",
            "QVlNRU5UU19PQ1IQpAESHgoZVU5JQ09STl9GQU1JTFlfTUFOQUdFTUVOVBCs",
            "ARIMCgdBVURJVE9SEK0BEg0KCE5RTE9PS1VQEK4BEiUKIEFORFJPSURfR1NB",
            "X0hJR0hfUFJJT1JJVFlfRVZFTlRTEK8BEhMKDkFORFJPSURfRElBTEVSELAB",
            "EhIKDUNMRUFSQ1VUX0RFTU8QsQESDwoKQVBQTUFOQUdFUhC3ARIXChJTTUFS",
            "VExPQ0tfQ09VTlRFUlMQuAESFgoRRVhQRURJVElPTlNfR1VJREUQuQESCQoE",
            "RlVTRRC6ARIqCiFQSVhFTF9QRVJGRUNUX0NMSUVOVF9TVEFURV9MT0dHRVIQ",
            "uwEaAggBEhwKF1BMQVRGT1JNX1NUQVRTX0NPVU5URVJTELwBEhEKDERSSVZF",
            "X1ZJRVdFUhC9ARIPCgpQREZfVklFV0VSEL4BEgsKBkJJR1RPUBC/ARIKCgVW",
            "T0lDRRDAARIMCgdNWUZJQkVSEMIBEhMKDlJFQ09SREVEX1BBR0VTEMMBEgwK",
            "B01PQl9ET0cQxQESDwoKV0FMTEVUX0FQUBDGARILCgZHQk9BUkQQxwESDwoK",
            "Q1JPTkVUX0dNTRDLARIRCgxUUlVTVEVEX0ZBQ0UQzAESDwoKTUFUQ0hTVElD",
            "SxDNARIYChNNQVRDSFNUSUNLX0NPVU5URVJTEPQCEhAKC0FQUF9DQVRBTE9H",
            "EM4BEg4KCUJMVUVUT09USBDQARIJCgRXSUZJENEBEgwKB1RFTEVDT00Q0gES",
            "DgoJVEVMRVBIT05ZENMBEhYKEUlERU5USVRZX0ZST05URU5EENQBEh8KGklE",
            "RU5USVRZX0ZST05URU5EX0VYVEVOREVEEK4EEgsKBlNFU0FNRRDYARIcChdH",
            "T09HTEVfS0VZQk9BUkRfQ09OVEVOVBDZARILCgZNQURERU4Q2gESCAoDSU5L",
            "ENsBEhUKEEFORFJPSURfQ09OVEFDVFMQ3AESHQoYR09PR0xFX0tFWUJPQVJE",
            "X0NPVU5URVJTEN0BEhQKD0NMRUFSQ1VUX1BST0JFUhDhARIVChBQTEFZX0NP",
            "TlNPTEVfQVBQEOIBEhwKF1BMQVlfQ09OU09MRV9BUFBfUFJJTUVTEIgCEicK",
            "IlBMQVlfQ09OU09MRV9BUFBfRkVBVFVSRV9BTkFMWVRJQ1MQ+wMSDQoIU1BF",
            "Q1RSVU0Q5gESFgoRU1BFQ1RSVU1fQ09VTlRFUlMQ5wESHAoXU1BFQ1RSVU1f",
            "QU5EUk9JRF9QUklNRVMQiwISIQocSU9TX1NQT1RMSUdIVF9TRUFSQ0hfTElC",
            "UkFSWRDqARIMCgdCT1FfV0VCEPEBEhkKFE9SQ0hFU1RSQVRJT05fQ0xJRU5U",
            "EPUBEh0KGE9SQ0hFU1RSQVRJT05fQ0xJRU5UX0RFVhD2ARIYChNHT09HTEVf",
            "Tk9XX0xBVU5DSEVSEPcBEhsKFlNDT09CWV9TUEFNX1JFUE9SVF9MT0cQ+gES",
            "DwoKSU9TX0dST1dUSBD7ARIQCgtBUFBTX05PVElGWRD8ARIRCgxTTUFSVEtF",
            "WV9BUFAQjQISFQoQQ0xJTklDQUxfU1RVRElFUxCOAhIbChZGSVRORVNTX0FO",
            "RFJPSURfUFJJTUVTEI8CEhQKC0lNUFJPVl9BUFBTEJACGgIIARIPCgpGQU1J",
            "TFlMSU5LEJECEhgKE0ZBTUlMWUxJTktfQ09VTlRFUlMQkgISDAoHU09DSUVU",
            "WRCTAhIaChVESUFMRVJfQU5EUk9JRF9QUklNRVMQlQISGQoUWU9VVFVCRV9E",
            "SVJFQ1RPUl9BUFAQlgISGwoWVEFDSFlPTl9BTkRST0lEX1BSSU1FUxCXAhIX",
            "ChJUQUNIWU9OX0lPU19QUklNRVMQhQUSDQoIRFJJVkVfRlMQmAISDAoHWVRf",
            "TUFJThCZAhIkCh9XSU5HX01BUktFVFBMQUNFX0FORFJPSURfUFJJTUVTEJoC",
            "Eg0KCERZTkFNSVRFEJsCEhYKEUNPUlBfQU5EUk9JRF9GT09EEJwCEh0KGEFO",
            "RFJPSURfTUVTU0FHSU5HX1BSSU1FUxCdAhIVChBHUExVU19JT1NfUFJJTUVT",
            "EJ4CEiIKHUNIUk9NRUNBU1RfQU5EUk9JRF9BUFBfUFJJTUVTEKACEhQKD0NB",
            "U1RfSU9TX1BSSU1FUxDYAhIRCgxBUFBTVFJFQU1JTkcQoQISEAoLR01CX0FO",
            "RFJPSUQQogISFQoQVk9JQ0VfSU9TX1BSSU1FUxCkAhIZChRWT0lDRV9BTkRS",
            "T0lEX1BSSU1FUxClAhIKCgVQQUlTQRCmAhIgChtOQVpERUVLX1VTRVJfQU5E",
            "Uk9JRF9QUklNRVMQuwISHwoaTkFaREVFS19DQUJfQU5EUk9JRF9QUklNRVMQ",
            "vAISIAobTkFaREVFS19DQUZFX0FORFJPSURfUFJJTUVTEL0CEgwKB0dNQl9J",
            "T1MQpwISEwoOR01CX0lPU19QUklNRVMQxQISEgoNU0NPT0JZX0VWRU5UUxCo",
            "AhIYChNTTkFQU0VFRF9JT1NfUFJJTUVTEKkCEiAKG1lPVVRVQkVfRElSRUNU",
            "T1JfSU9TX1BSSU1FUxCqAhIVChBXQUxMUEFQRVJfUElDS0VSEKsCEiQKH1dB",
            "TExQQVBFUl9QSUNLRVJfQU5EUk9JRF9QUklNRVMQ0gMSCgoFQ0hJTUUQrAIS",
            "EQoMQkVBQ09OX0dDT1JFEK0CEhMKDkFORFJPSURfU1RVRElPEK4CEhEKDERP",
            "Q1NfT0ZGTElORRCyAhIOCglGUkVJR0hURVIQswISFAoPRE9DU19JT1NfUFJJ",
            "TUVTELQCEhYKEVNMSURFU19JT1NfUFJJTUVTELUCEhYKEVNIRUVUU19JT1Nf",
            "UFJJTUVTELYCEhMKDklQQ09OTkVDVElWSVRZELcCEgwKB0NVUkFUT1IQuAIS",
            "GwoWQ1VSQVRPUl9BTkRST0lEX1BSSU1FUxC+AhIgChtGSVRORVNTX0FORFJP",
            "SURfV0VBUl9QUklNRVMQvwISFAoPQU5EUk9JRF9NSUdSQVRFEMACEh4KGVBB",
            "SVNBX1VTRVJfQU5EUk9JRF9QUklNRVMQwQISIgodUEFJU0FfTUVSQ0hBTlRf",
            "QU5EUk9JRF9QUklNRVMQwgISGAoTQ0xJRU5UX0xPR0dJTkdfUFJPRBDHAhIc",
            "ChNDTElFTlRfTE9HR0lOR19ERU1PEMcCGgIIARIhChxMSVZFX0NIQU5ORUxT",
            "X0FORFJPSURfUFJJTUVTEMgCEhoKFVBBSVNBX1VTRVJfSU9TX1BSSU1FUxDJ",
            "AhIVChBWRVNQQV9JT1NfUFJJTUVTEMsCEhYKEVBMQVlfR0FNRVNfUFJJTUVT",
            "EMwCEhkKFEdNU0NPUkVfQVBJX0NPVU5URVJTEM0CEgoKBUVBUlRIEM4CEhMK",
            "DkVBUlRIX0NPVU5URVJTEJUDEhQKD0NBTEVOREFSX0NMSUVOVBDPAhIWChFT",
            "Vl9BTkRST0lEX1BSSU1FUxDQAhIWChFQSE9UT1NfSU9TX1BSSU1FUxDRAhIa",
            "ChVHQVJBR0VfQU5EUk9JRF9QUklNRVMQ0gISFgoRR0FSQUdFX0lPU19QUklN",
            "RVMQ0wISIAobU09DSUFMX0dPT0RfRE9OQVRJT05fV0lER0VUENQCEg4KCVNB",
            "TkRDTE9DSxDVAhITCg5JTUFHRVJZX1ZJRVdFUhDWAhIjCh5BRFdPUkRTX0VY",
            "UFJFU1NfQU5EUk9JRF9QUklNRVMQ1wISEgoNSU1QUk9WX1BPU1RJVBDZAhIT",
            "Cg5JTVBST1ZfU0hBUlBJRRDaAhIWChFEUkFQRVJfSU9TX1BSSU1FUxDbAhIN",
            "CghTTUFSVENBTRDcAhITCg5EQVNIRVJfVVNFUkhVQhDdAhIcChdBTkRST0lE",
            "X0NPTlRBQ1RTX1BSSU1FUxDeAhIeChlaQUdBVF9CVVJHVU5EWV9JT1NfUFJJ",
            "TUVTEN8CEiIKHVpBR0FUX0JVUkdVTkRZX0FORFJPSURfUFJJTUVTEOACEhgK",
            "E0NBTEVOREFSX0lPU19QUklNRVMQ4QISEgoNU1ZfSU9TX1BSSU1FUxDiAhIQ",
            "CgtTTUFSVF9TRVRVUBDjAhIZChRCT09ORF9BTkRST0lEX1BSSU1FUxDkAhIY",
            "ChNLT05HX0FORFJPSURfUFJJTUVTEOYCEhkKFENMQVNTUk9PTV9JT1NfUFJJ",
            "TUVTEOcCEhoKFVdFU1RJTkdIT1VTRV9DT1VOVEVSUxDoAhIVChBXQUxMRVRf",
            "U0RLX0dDT1JFEOkCEh8KGkFORFJPSURfSU1FX0FORFJPSURfUFJJTUVTEOoC",
            "EhwKF01FRVRJTkdTX0FORFJPSURfUFJJTUVTEOsCEhgKE01FRVRJTkdTX0lP",
            "U19QUklNRVMQ7AISEQoMV0VCX0NPTlRBQ1RTEO0CEhYKEUFEU19JTlRFR1JJ",
            "VFlfT1BTEO4CEgoKBVRPUEFaEO8CEh0KGENMQVNTUk9PTV9BTkRST0lEX1BS",
            "SU1FUxDxAhIQCgtUSFVOREVSQklSRBDyAhIQCgtQVUxQRklDVElPThDzAhIO",
            "CglPTkVHT09HTEUQ9QISDgoJVFJBTlNMQVRFEPcCEhoKFUxJRkVTQ0lFTkNF",
            "X0ZST05URU5EUxD4AhIeChlXQUxMUEFQRVJfUElDS0VSX0NPVU5URVJTEPkC",
            "EhkKFE1BR0lDVEVUSEVSX0NPVU5URVJTEPoCEhUKEFNPQ0lFVFlfQ09VTlRF",
            "UlMQ+wISDgoJVU5JQ09NTV9QEPwCEg4KCVVOSUNPTU1fUxD9AhIMCgdIQUxM",
            "V0FZEP4CEgsKBlNQQUNFUxD/AhIXChJUT09MS0lUX1FVSUNLU1RBUlQQgAMS",
            "HQoYQ0hBVUZGRVVSX0FORFJPSURfUFJJTUVTEIEDEhkKFENIQVVGRkVVUl9J",
            "T1NfUFJJTUVTEIIDEgkKBEZJRE8QgwMSGgoVTU9CRE9HX0FORFJPSURfUFJJ",
            "TUVTEIQDEhYKEU1PQkRPR19JT1NfUFJJTUVTEIUDEhMKDkFXWF9JT1NfUFJJ",
            "TUVTEIcDEhMKDkdIU19JT1NfUFJJTUVTEIgDEhUKEEJPT0tTX0lPU19QUklN",
            "RVMQiQMSCgoFTElOS1MQigMSFgoRS0FUTklQX0lPU19QUklNRVMQiwMSGQoU",
            "Qk9PS1NfQU5EUk9JRF9QUklNRVMQjQMSHAoXRFlOQU1JVEVfQU5EUk9JRF9Q",
            "UklNRVMQjgMSGAoTRFlOQU1JVEVfSU9TX1BSSU1FUxCPAxIVChBTSURFTE9B",
            "REVEX01VU0lDEJADEhYKEUNPUlBfQU5EUk9JRF9ET1JZEJEDEhgKE0NPUlBf",
            "QU5EUk9JRF9KRVRTRVQQkgMSFgoRVlJfU0RLX0lPU19QUklNRVMQkwMSGgoV",
            "VlJfU0RLX0FORFJPSURfUFJJTUVTEJQDEhMKDlBIT1RPU19TQ0FOTkVSEJYD",
            "Eg4KCUJHX0lOX09HQhCXAxIMCgdCTE9HR0VSEJgDEhIKDUNPUlBfSU9TX0ZP",
            "T0QQmQMSFgoRQkVBQ09OX0dDT1JFX1RFU1QQmgMSFQoQTElOS1NfSU9TX1BS",
            "SU1FUxCbAxIOCglDSEFVRkZFVVIQnAMSDQoIU05BUFNFRUQQnQMSGQoURUFS",
            "VEhfQU5EUk9JRF9QUklNRVMQngMSFwoSQ09SUF9BTkRST0lEX0FJVVRPEJ8D",
            "EhcKEkdGVFZfTU9CSUxFX1BSSU1FUxCgAxIOCglHTUFJTF9JT1MQoQMSGQoU",
            "VE9QQVpfQU5EUk9JRF9QUklNRVMQogMSFAoPU09DSUFMX0NPVU5URVJTEKQD",
            "EhYKEUNPUlBfQU5EUk9JRF9NT01BEKUDEhkKFE1FRVRJTkdTX0xPR19SRVFV",
            "RVNUEKYDEgoKBUdERUFMEKcDEg4KCUdPT0dMRVRUUxCoAxIeChlTRUFSQ0hM",
            "SVRFX0FORFJPSURfUFJJTUVTEKkDEhAKC05FQVJCWV9BVVRIEKoDEhsKFkNP",
            "UlBfQU5EUk9JRF9BU1NJU1RBTlQQqwMSGwoWRE1BR0VOVF9BTkRST0lEX1BS",
            "SU1FUxCsAxIWChFDT1JQX0FORFJPSURfR0JVUxCtAxIhChxZT1VUVUJFX1VO",
            "UExVR0dFRF9JT1NfUFJJTUVTEK4DEh0KGExFQU5CQUNLX0xBVU5DSEVSX1BS",
            "SU1FUxCvAxIPCgpEUk9JREdVQVJEELADEhIKDUNPUlBfSU9TX0RPUlkQsQMS",
            "IgodUExBWV9NVVNJQ19BTkRST0lEX0FQUF9QUklNRVMQsgMSHQoUR1BPU1Rf",
            "QU5EUk9JRF9QUklNRVMQtAMaAggBEhoKEUdQT1NUX0NMSUVOVF9MT0dTELUD",
            "GgIIARILCgZEUEFORUwQtgMSGwoWQURTRU5TRV9BTkRST0lEX1BSSU1FUxC3",
            "AxIRCgxQRE1fQ09VTlRFUlMQuAMSHAoXRU1FUkdFTkNZX0FTU0lTVF9QUklN",
            "RVMQuQMSEgoNQVBQU19URUxFUEFUSBC6AxIMCgdNRVRBTE9HELsDEhsKFlRF",
            "TEVDT01fUExBVEZPUk1fU1RBVFMQvAMSGAoTV0lGSV9QTEFURk9STV9TVEFU",
            "UxC9AxIMCgdHTUFfU0RLEL4DEhUKEEdNQV9TREtfQ09VTlRFUlMQvwMSJAof",
            "QU5EUk9JRF9DUkVBVElWRV9QUkVWSUVXX1BSSU1FUxDAAxIdChhURUxFUEhP",
            "TllfUExBVEZPUk1fU1RBVFMQwQMSFQoQVEVTVERSSVZFX1BSSU1FUxDCAxIV",
            "ChBDQVJSSUVSX1NFUlZJQ0VTEMMDEiEKHENMT1VEX0NPTlNPTEVfQU5EUk9J",
            "RF9QUklNRVMQxAMSEAoLU1RSRUVUX1ZJRVcQxQMSCQoEU1RBWBDGAxIdChhO",
            "RVdTU1RBTkRfQU5EUk9JRF9QUklNRVMQxwMSGQoUTkVXU1NUQU5EX0lPU19Q",
            "UklNRVMQiwUSDwoKUEFJU0FfVVNFUhDIAxIkCh9DQVJSSUVSX1NFUlZJQ0VT",
            "X0FORFJPSURfUFJJTUVTEMkDEiIKHUlQQ09OTkVDVElWSVRZX1BMQVRGT1JN",
            "X1NUQVRTEMwDEhYKEUZJUkVQRVJGX0FVVE9QVVNIEM0DEg0KCEZJUkVQRVJG",
            "EM4DEhwKF1pBR0FUX0lPU19BVVRIRU5USUNBVEVEEM8DEggKA1VMUhDQAxIf",
            "ChpQTEFZX01PVklFU19BTkRST0lEX1BSSU1FUxDTAxITCg5TTUFSVF9MT0NL",
            "X0lPUxDUAxIbChZaQUdBVF9JT1NfUFNFVURPTllNT1VTENUDEhMKDlRSQVZF",
            "TF9CT09LSU5HENYDEhkKFFdFU1RJTkdIT1VTRV9PRFlTU0VZENcDEhgKE0dN",
            "TV9XRUFSQUJMRV9QUklNRVMQ2AMSEwoOSFVERExFX0FORFJPSUQQ2QMSDQoI",
            "RExfRk9OVFMQ2gMSGAoTS0VFUF9BTkRST0lEX1BSSU1FUxDbAxIYChNDT1JQ",
            "X0FORFJPSURfQ0FNUFVTENwDEg8KClRBTkdPX0NPUkUQ3QMSFAoPUk9NQU5F",
            "U0NPX0dDT1JFEN4DEiEKHEFQUFNfVEVMRVBBVEhfQU5EUk9JRF9QUklNRVMQ",
            "3wMSGAoTUElHRU9OX0VYUEVSSU1FTlRBTBDgAxIdChhTUEVBS0VBU1lfQkFS",
            "S0VFUF9DTElFTlQQ4QMSHAoXQkFTRUxJTkVfQU5EUk9JRF9QUklNRVMQ4gMS",
            "GAoTVEFOR09fQ09SRV9DT1VOVEVSUxDjAxITCg5QSEVOT1RZUEVfREVNTxDk",
            "AxIJCgRZRVRJEOUDEhEKDFlFVElfU1RSRUFNWhCCBRIeChlUVlBSRVNFTkNF",
            "X0FORFJPSURfUFJJTUVTEOYDEhkKFExJTktTX0FORFJPSURfUFJJTUVTEOcD",
            "EgsKBkFMQkVSVBDoAxIOCglUT1BBWl9BUFAQ6QMSHAoXSUNFTlRSQUxfQU5E",
            "Uk9JRF9QUklNRVMQ6gMSGQoUQklTVE9fQU5EUk9JRF9QUklNRVMQ6wMSDQoI",
            "R0RFQUxfUUEQ7AMSFgoRQVRWX1JFTU9URV9QUklNRVMQ7wMSHgoZQVRWX1JF",
            "TU9URV9TRVJWSUNFX1BSSU1FUxDwAxILCgZCUkVMTEEQ8QMSEwoOQU5EUk9J",
            "RF9HUk9XVEgQ8gMSFAoPR0hTX0NMSUVOVF9MT0dTEPMDEhcKEkdPUl9BTkRS",
            "T0lEX1BSSU1FUxD0AxILCgZORVRSRUMQ9QMSFAoPTkVUUkVDX0NPVU5URVJT",
            "EPYDEhgKE0RBU0hFUl9BRE1JTkNPTlNPTEUQ9wMSGQoUU0VTQU1FX0NBTUVS",
            "QV9MQVVOQ0gQ+AMSHgoZR09PR0xFX1JFRF9BTkRST0lEX1BSSU1FUxD5AxIP",
            "CgpTRUFSQ0hMSVRFEPoDEhgKE0NPTlRBQ1RTX0FTU0lTVEFOVFMQ/AMSDAoH",
            "Q09OQ09SRBD9AxIaChVDQUxFTkRBUl9JT1NfQ09VTlRFUlMQ/gMSJAofUE9D",
            "S0VUV0FUQ0hfQU5EUk9JRF9XRUFSX1BSSU1FUxD/AxIZChRNWUFMT19BTkRS",
            "T0lEX1BSSU1FUxCABBIZChRBQ1RJVklUWV9SRUNPR05JVElPThCBBBIaChVW",
            "Ul9TVFJFQU1JTkdfQ09VTlRFUlMQggQSFQoQVE9QQVpfSU9TX1BSSU1FUxCF",
            "BBIPCgpORVdTX0VWRU5UEIYEEg8KCkNIUk9NT1RJTkcQhwQSGAoTQ0hST01P",
            "VElOR19DT1VOVEVSUxCIBBIaChVHTU1fV0VBUkFCTEVfQ09VTlRFUlMQiQQS",
            "IAobVlJfU1RSRUFNSU5HX0FORFJPSURfUFJJTUVTEIoEEhcKElJFQUNIQUJJ",
            "TElUWV9HQ09SRRCLBBIQCgtETUFHRU5UX0lPUxCMBBIXChJETUFHRU5UX0lP",
            "U19QUklNRVMQjQQSGQoUU0VTQU1FX1VOTE9DS19QUklNRVMQjgQSHAoXU0VT",
            "QU1FX1RSVVNUX0FQSV9QUklNRVMQjwQSCwoGR1NUT1JFEJAEEgwKB09QQV9J",
            "T1MQkQQSGgoVVlJDT1JFX0FORFJPSURfUFJJTUVTEJIEEgkKBE1PTUEQkwQS",
            "GwoWU0VTQU1FX1VOTE9DS19DT1VOVEVSUxCUBBIQCgtMQl9DT1VOVEVSUxCV",
            "BBISCg1EQVlEUkVBTV9IT01FEJYEEhcKEklOS19BTkRST0lEX1BSSU1FUxCX",
            "BBITCg5JTktfSU9TX1BSSU1FUxCYBBIVChBBU1NJU1RBTlRLSVRfSU9TEJkE",
            "EhsKFkNPUlBfSU9TX0xBVElPU19QUklNRVMQnAQSEAoLTUVESUFfU1RBVFMQ",
            "nQQSGgoVQ1JPTkVUX0FORFJPSURfUEhPVE9TEJ8EEgsKBkdXU19KUxCgBBIb",
            "ChZHV1NfSlNfQVVUSF9FWFBFUklNRU5UEOsEEh4KGUNBTENVTEFUT1JfQU5E",
            "Uk9JRF9QUklNRVMQoQQSEQoMR09PR0xFX01FRVRTEKMEEiMKHkVOVEVSUFJJ",
            "U0VfRU5ST0xMTUVOVF9DT1VOVEVSUxCkBBIJCgRHTlNTEKUEEgoKBVZJTUVT",
            "EKYEEhoKFUNBTUVSQV9BTkRST0lEX1BSSU1FUxCnBBIUCg9BTkRST0lEX1dF",
            "QlZJRVcQqAQSCwoGTkVBUkJZEKkEEhYKEVBSRURJQ1RfT05fREVWSUNFEKoE",
            "EhcKEk9BVVRIX0lOVEVHUkFUSU9OUxCrBBIaChVJTVBST1ZfQU5EUk9JRF9Q",
            "UklNRVMQrAQSHQoYR09PR0xFVFRTX0FORFJPSURfUFJJTUVTEK0EEhgKE0dO",
            "U1NfUExBVEZPUk1fU1RBVFMQrwQSFgoRQUNUSU9OU19PTl9HT09HTEUQsAQS",
            "GgoVR0JPQVJEX0FORFJPSURfUFJJTUVTELEEEhoKFU5BS1NIQV9BTkRST0lE",
            "X1BSSU1FUxCyBBITCg5QQUlTQV9DT1VOVEVSUxCzBBISCg1DT05TVEVMTEFU",
            "SU9OELQEEgwKB1pBTkRSSUEQtQQSFAoPQ09SUF9JT1NfTEFUSU9TELYEEiEK",
            "HERBWURSRUFNX0hPTUVfQU5EUk9JRF9QUklNRVMQtwQSGQoUVklTVUFMX1NF",
            "TUFOVElDX0xJRlQQuAQSFQoQVFJBVkVMX1ZBQ0FUSU9OUxC5BBIlCiBEQVlE",
            "UkVBTV9LRVlCT0FSRF9BTkRST0lEX1BSSU1FUxC6BBIWChFTTVNfU1lOQ19D",
            "T1VOVEVSUxC7BBIZChRDT1JQX0lPU19GT09EX1BSSU1FUxC8BBISCg1NT01B",
            "X0NPVU5URVJTEL0EEhgKE0JBU0VMSU5FX0lPU19QUklNRVMQvwQSFgoRQ0xF",
            "QVJDVVRfTE9HX0xPU1MQwAQSDQoIQklSRFNPTkcQwQQSEwoOT1BBX0lPU19Q",
            "UklNRVMQwgQSHQoYUFNFVURPTllNT1VTX0lEX0NPVU5URVJTEMMEEiMKHlBS",
            "T1hZX0NPTVBBTklPTl9BTkRST0lEX1BSSU1FUxDEBBILCgZJTUFHRVMQxQQS",
            "DQoIR1JFRU5URUEQxgQSGQoUQVVUT0ZJTExfV0lUSF9HT09HTEUQxwQSGwoW",
            "WkVCRURFRV9BTkRST0lEX1BSSU1FUxDIBBIWChFHQk9BUkRfSU9TX1BSSU1F",
            "UxDJBBIUCg9LRUVQX0lPU19QUklNRVMQygQSHQoYUk9ZQUxNSU5UX0FORFJP",
            "SURfUFJJTUVTEMsEEhUKEERSSVZFX0lPU19QUklNRVMQzAQSCwoGUkVWRUFM",
            "EM4EEhIKDVRSRU5EU19DTElFTlQQzwQSGwoWRklMRVNHT19BTkRST0lEX1BS",
            "SU1FUxDRBBISCg1QSVhFTF9IV19JTkZPENIEEhQKD0hFQUxUSF9DT1VOVEVS",
            "UxDTBBIPCgpXRUJfU0VBUkNIENQEEhUKEExJVFRMRUhVR19QRU9QTEUQ1QQS",
            "GwoWTVlHTEFTU19BTkRST0lEX1BSSU1FUxDWBBIKCgVUVVJCTxDXBBIQCgtB",
            "TkRST0lEX09UQRDYBBIXChJTRU5TRV9BTUJJRU5UTVVTSUMQ2QQSDgoJU0VO",
            "U0VfRE5EENoEEhEKDExJQkFTU0lTVEFOVBDbBBIMCgdTVFJFQU1aENwEEgoK",
            "BUVVSUNDEN0EEhMKDk1FRElDQUxfU0NSSUJFEN4EEhEKDENBTEVOREFSX0lP",
            "UxDfBBIKCgVBVURJVBDgBBIhChxFQVNFTF9TRVJWSUNFX0FORFJPSURfUFJJ",
            "TUVTEOEEEh8KGldISVNUTEVQVU5LX0FORFJPSURfUFJJTUVTEOIEEhsKFldI",
            "SVNUTEVQVU5LX0lPU19QUklNRVMQ4wQSDgoJRURHRV9QQ0FQEOQEEhMKDklD",
            "SU5HX0NPVU5URVJTEOUEEiAKG0JFQUNPTl9UT09MU19BTkRST0lEX1BSSU1F",
            "UxDmBBIcChdCRUFDT05fVE9PTFNfSU9TX1BSSU1FUxDnBBIVChBTQ09PQllf",
            "RVZFTlRfTE9HEOgEEhUKEEVBUlRIX0lPU19QUklNRVMQ6QQSEAoLWUVUSV9D",
            "TElFTlQQ6gQSHgoZR1JPV1RIX0NBVEFMT0dfSU9TX1BSSU1FUxDtBBIcChdB",
            "TkRST0lEX1NQRUVDSF9TRVJWSUNFUxDuBBIVChBLSURTX1NVUEVSVklTSU9O",
            "EO8EEiMKHkFEV09SRFNfRkxVVFRFUl9BTkRST0lEX1BSSU1FUxDyBBIfChpB",
            "RFdPUkRTX0ZMVVRURVJfSU9TX1BSSU1FUxDzBBIUCg9ISVJFX0lPU19QUklN",
            "RVMQ9AQSCwoGUlVOV0FZEPUEEg4KCVZSX1NPQ0lBTBD2BBIZChRUQVNLU19B",
            "TkRST0lEX1BSSU1FUxD3BBITCg5XRUFSX0NIQU1FTEVPThD4BBIVChBaRUJF",
            "REVFX0NPVU5URVJTEPkEEhUKEENBUlJJRVJfU0VUVElOR1MQ+gQSFQoQT05F",
            "R09PR0xFX01PQklMRRD7BBIYChNBTkRST0lEX1NNQVJUX1NIQVJFEPwEEhgK",
            "E0hJUkVfQU5EUk9JRF9QUklNRVMQ/QQSDQoIVlJfQ09NTVMQ/gQSFgoRR19T",
            "VUlURV9DT01QQU5JT04Q/wQSHQoYR01TQ09SRV9CQUNLRU5EX0NPVU5URVJT",
            "EIAFEhsKFk1VU1RBUkRfQU5EUk9JRF9QUklNRVMQgQUSHwoaVFZfTEFVTkNI",
            "RVJfQU5EUk9JRF9QUklNRVMQgwUSJgohVFZfUkVDT01NRU5EQVRJT05TX0FO",
            "RFJPSURfUFJJTUVTEIQFEhMKDkFQUFNfQVNTSVNUQU5UEIYFEhUKEENIUk9N",
            "RV9XRUJfU1RPUkUQhwUSEwoOU0VBUkNIX0NPTlNPTEUQiAUSDAoHWkVCRURF",
            "RRCJBRILCgZPUEFfVFYQigUSCgoFVEFTS1MQjAUSEAoLQVBQU19TRUFSQ0gQ",
            "jQUSEgoNQ0xFQVJDVVRfVEVTVBCOBRISCg1BU1NJU1RBTlRMSVRFEI8FEiEK",
            "HEFTU0lTVEFOVExJVEVfQU5EUk9JRF9QUklNRVMQkAUSCQoETVVTSxCRBRIQ",
            "CgtUVl9MQVVOQ0hFUhCSBRISCg1GT09EX09SREVSSU5HEJMFEg0KCFRBTEtC",
            "QUNLEJQFEhsKFkxPTkdGRUlfQU5EUk9JRF9QUklNRVMQlQUSIgodR01TQ09S",
            "RV9OT1RJRklDQVRJT05fQ09VTlRFUlMQlgUSCQoEU0FWRRCXBRIcChdNRUNI",
            "QUhBTVNURVJfSU9TX1BSSU1FUxCYBRIgChtHUlBDX0lOVEVST1BfQU5EUk9J",
            "RF9QUklNRVMQmQUSDwoKS0xPUEZLTE9QRhCaBRIcChdHUlBDX0lOVEVST1Bf",
            "SU9TX1BSSU1FUxCbBRIYChNDUk9ORVRfV0VTVElOR0hPVVNFEJwFEg8KCkNI",
            "Uk9NRVNZTkMQnQUSGAoTTkVUU1RBVFNfR01TX1BSRVYxNBCeBRIfChpDT1JQ",
            "X0FORFJPSURfTU9NQV9DTEVBUkNVVBCgBRIiCh1QSVhFTF9BTUJJRU5UX1NF",
            "UlZJQ0VTX1BSSU1FUxChBRIaChVTRVRUSU5HU19JTlRFTExJR0VOQ0UQogUS",
            "GgoVRklSRVBFUkZfSU5URVJOQUxfTE9XEKMFEhsKFkZJUkVQRVJGX0lOVEVS",
            "TkFMX0hJR0gQpAUSHwoaRVhQRURJVElPTlNfQU5EUk9JRF9QUklNRVMQpQUS",
            "EwoOTEFVTkNIRVJfU1RBVFMQpgUSEgoNWUVUSV9HVUVTVE9SQxCnBRISCg1N",
            "T1RJT05fU1RJTExTEKgFEh4KGUFTU0lTVEFOVF9DTElFTlRfQ09VTlRFUlMQ",
            "qQUSGwoWRVhQRURJVElPTlNfSU9TX1BSSU1FUxCqBRIjCh5HT09HTEVBU1NJ",
            "U1RBTlRfQU5EUk9JRF9QUklNRVMQqwUSDgoJQ0FNRVJBS0lUEKwFEhgKE0FO",
            "RFJPSURfT05CT0FSRF9XRUIQrQUSFQoQR0NPTk5FQ1RfVFVSTk9VVBCuBRIZ",
            "ChRWUjE4MF9BTkRST0lEX1BSSU1FUxCvBRIVChBWUjE4MF9JT1NfUFJJTUVT",
            "ELAFEhUKEExPTkdGRUlfQ09VTlRFUlMQsQUSKAojQ09OTkVDVElWSVRZX01P",
            "TklUT1JfQU5EUk9JRF9QUklNRVMQsgUSCwoGR1BQX1VJELMFEiMKHlBSSU1F",
            "U19JTlRFUk5BTF9BTkRST0lEX1BSSU1FUxC0BRINCghZRVRJX1BUUxC1BRIY",
            "ChNGQUNUX0NIRUNLX0VYUExPUkVSELYFEhUKEEFTU0lTVEFOVF9IUV9XRUIQ",
            "twUSEwoOWUVUSV9UTFNfUFJPWFkQuAUSDQoIR01BSUxfREQQuQUSGwoWS0hB",
            "WkFOQV9BTkRST0lEX1BSSU1FUxC6BRILCgZBUkNPUkUQvAUSHwoaR09PR0xF",
            "X1dJRklfQU5EUk9JRF9QUklNRVMQvQUSHAoXUFJPWElNSVRZX0FVVEhfQ09V",
            "TlRFUlMQvgUSIQocV0VBUl9LRVlCT0FSRF9BTkRST0lEX1BSSU1FUxC/BRIS",
            "Cg1TRUFSQ0hfT05fQk9REMAFEhkKFFNDT05FX0FORFJPSURfUFJJTUVTEMEF",
            "EhUKEE1PQklMRV9EQVRBX1BMQU4QwgUSCgoFVkVOVVMQxAUSDgoJSVBBX0dD",
            "T1JFEMYFEhoKFVRFVEhFUklOR19FTlRJVExFTUVOVBDHBRIfChpTRU1BTlRJ",
            "Q19MT0NBVElPTl9DT1VOVEVSUxDIBRIZChRUVVJCT19BTkRST0lEX1BSSU1F",
            "UxDJBRIcChdVU0VSX0xPQ0FUSU9OX1JFUE9SVElORxDKBRIUCg9GSVJFQkFT",
            "RV9NTF9TREsQywUSEQoMR09SX0NMRUFSQ1VUEMwFEhMKDldGQ19BQ1RJVkFU",
            "SU9OEM0FEhUKEFRBU0tTX0lPU19QUklNRVMQzgUSIAobV0lOR19PUEVOU0tZ",
            "X0FORFJPSURfUFJJTUVTEM8FEhIKDUNBUlJJRVJfU0VUVVAQ0AUSFAoPQVNT",
            "SVNUQU5UX1NIRUxMENEFEg8KCkFSQ09SRV9TREsQiggaAhABQgwKCmxvZ19z",
            "b3VyY2VKBAgBEAJKBAgPEBBKBAgGEAdKBAgHEAhKBAgFEAZKBAgOEA9KBAgJ",
            "EApKBAgKEAtKBAgLEAxKBAgMEA1KBAgNEA4iaQoLTG9nUmVzcG9uc2USJgoc",
            "bmV4dF9yZXF1ZXN0X3dhaXRfbWlsbGlzX3ZhbBgBIAEoA0gAQhoKGG5leHRf",
            "cmVxdWVzdF93YWl0X21pbGxpc0oECAIQA0oECAMQBEoECAQQBUoECAUQBkId",
            "qgIaR29vZ2xlQVJDb3JlSW50ZXJuYWwuUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GoogleARCoreInternal.Proto.LogEvent), global::GoogleARCoreInternal.Proto.LogEvent.Parser, new[]{ "EventTimeMs", "EventUptimeMs", "SourceExtension", "TimezoneOffsetSecondsVal" }, new[]{ "TimezoneOffsetSeconds" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GoogleARCoreInternal.Proto.LogRequest), global::GoogleARCoreInternal.Proto.LogRequest.Parser, new[]{ "RequestTimeMs", "RequestUptimeMs", "LogSourceVal", "LogEvent" }, new[]{ "LogSource" }, new[]{ typeof(global::GoogleARCoreInternal.Proto.LogRequest.Types.LogSource) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GoogleARCoreInternal.Proto.LogResponse), global::GoogleARCoreInternal.Proto.LogResponse.Parser, new[]{ "NextRequestWaitMillisVal" }, new[]{ "NextRequestWaitMillis" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Next tag: 26
  /// </summary>
  public sealed partial class LogEvent : pb::IMessage<LogEvent> {
    private static readonly pb::MessageParser<LogEvent> _parser = new pb::MessageParser<LogEvent>(() => new LogEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GoogleARCoreInternal.Proto.ArcoreClearcutReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent(LogEvent other) : this() {
      eventTimeMs_ = other.eventTimeMs_;
      eventUptimeMs_ = other.eventUptimeMs_;
      sourceExtension_ = other.sourceExtension_;
      switch (other.TimezoneOffsetSecondsCase) {
        case TimezoneOffsetSecondsOneofCase.TimezoneOffsetSecondsVal:
          TimezoneOffsetSecondsVal = other.TimezoneOffsetSecondsVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEvent Clone() {
      return new LogEvent(this);
    }

    /// <summary>Field number for the "event_time_ms" field.</summary>
    public const int EventTimeMsFieldNumber = 1;
    private long eventTimeMs_;
    /// <summary>
    /// Epoch time in milliseconds, according to the wall clock.
    /// See http://go/clearcut-timestamps for details on how this value is used.
    /// This field is required for Odyssey. Otherwise, events will be silently
    /// dropped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventTimeMs {
      get { return eventTimeMs_; }
      set {
        eventTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "event_uptime_ms" field.</summary>
    public const int EventUptimeMsFieldNumber = 17;
    private long eventUptimeMs_;
    /// <summary>
    /// Time in milliseconds since the device was booted.  (On Android this
    /// is the result of SystemClock.elapsedRealtime(), not
    /// SystemClock.uptimeMillis() which does not increment when the device is in
    /// deep sleep.)
    ///
    /// See http://go/clearcut-timestamps for details on how this value is used for
    /// timestamp corrections.  It is also copied to
    /// PlayExtension.client_elapsed_realtime_millis if the routing option
    /// "client_elapsed_realtime_millis" is set to true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventUptimeMs {
      get { return eventUptimeMs_; }
      set {
        eventUptimeMs_ = value;
      }
    }

    /// <summary>Field number for the "source_extension" field.</summary>
    public const int SourceExtensionFieldNumber = 6;
    private pb::ByteString sourceExtension_ = pb::ByteString.Empty;
    /// <summary>
    /// A source specific extension (typically a serialized proto). The type of
    /// this data is determined by the log_source of the enclosing LogRequest.
    /// The proto is derived by calling ParseFromString method in
    /// net/proto2/public/message_lite.h.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SourceExtension {
      get { return sourceExtension_; }
      set {
        sourceExtension_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timezone_offset_seconds_val" field.</summary>
    public const int TimezoneOffsetSecondsValFieldNumber = 15;
    /// <summary>
    /// [default = 180000];
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimezoneOffsetSecondsVal {
      get { return timezoneOffsetSecondsCase_ == TimezoneOffsetSecondsOneofCase.TimezoneOffsetSecondsVal ? (long) timezoneOffsetSeconds_ : 0L; }
      set {
        timezoneOffsetSeconds_ = value;
        timezoneOffsetSecondsCase_ = TimezoneOffsetSecondsOneofCase.TimezoneOffsetSecondsVal;
      }
    }

    private object timezoneOffsetSeconds_;
    /// <summary>Enum of possible cases for the "timezone_offset_seconds" oneof.</summary>
    public enum TimezoneOffsetSecondsOneofCase {
      None = 0,
      TimezoneOffsetSecondsVal = 15,
    }
    private TimezoneOffsetSecondsOneofCase timezoneOffsetSecondsCase_ = TimezoneOffsetSecondsOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimezoneOffsetSecondsOneofCase TimezoneOffsetSecondsCase {
      get { return timezoneOffsetSecondsCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimezoneOffsetSeconds() {
      timezoneOffsetSecondsCase_ = TimezoneOffsetSecondsOneofCase.None;
      timezoneOffsetSeconds_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventTimeMs != other.EventTimeMs) return false;
      if (EventUptimeMs != other.EventUptimeMs) return false;
      if (SourceExtension != other.SourceExtension) return false;
      if (TimezoneOffsetSecondsVal != other.TimezoneOffsetSecondsVal) return false;
      if (TimezoneOffsetSecondsCase != other.TimezoneOffsetSecondsCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventTimeMs != 0L) hash ^= EventTimeMs.GetHashCode();
      if (EventUptimeMs != 0L) hash ^= EventUptimeMs.GetHashCode();
      if (SourceExtension.Length != 0) hash ^= SourceExtension.GetHashCode();
      if (timezoneOffsetSecondsCase_ == TimezoneOffsetSecondsOneofCase.TimezoneOffsetSecondsVal) hash ^= TimezoneOffsetSecondsVal.GetHashCode();
      hash ^= (int) timezoneOffsetSecondsCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventTimeMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EventTimeMs);
      }
      if (SourceExtension.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(SourceExtension);
      }
      if (timezoneOffsetSecondsCase_ == TimezoneOffsetSecondsOneofCase.TimezoneOffsetSecondsVal) {
        output.WriteRawTag(120);
        output.WriteSInt64(TimezoneOffsetSecondsVal);
      }
      if (EventUptimeMs != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(EventUptimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EventTimeMs);
      }
      if (EventUptimeMs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EventUptimeMs);
      }
      if (SourceExtension.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SourceExtension);
      }
      if (timezoneOffsetSecondsCase_ == TimezoneOffsetSecondsOneofCase.TimezoneOffsetSecondsVal) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(TimezoneOffsetSecondsVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventTimeMs != 0L) {
        EventTimeMs = other.EventTimeMs;
      }
      if (other.EventUptimeMs != 0L) {
        EventUptimeMs = other.EventUptimeMs;
      }
      if (other.SourceExtension.Length != 0) {
        SourceExtension = other.SourceExtension;
      }
      switch (other.TimezoneOffsetSecondsCase) {
        case TimezoneOffsetSecondsOneofCase.TimezoneOffsetSecondsVal:
          TimezoneOffsetSecondsVal = other.TimezoneOffsetSecondsVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventTimeMs = input.ReadInt64();
            break;
          }
          case 50: {
            SourceExtension = input.ReadBytes();
            break;
          }
          case 120: {
            TimezoneOffsetSecondsVal = input.ReadSInt64();
            break;
          }
          case 136: {
            EventUptimeMs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A LogRequest represents a batched collection of loggable events, each event
  /// to be processed and sent to zero or more destinations (e.g. Sawmill log types
  /// or Footprints) by the Clearcut server.
  ///
  /// Next tag: 16
  /// </summary>
  public sealed partial class LogRequest : pb::IMessage<LogRequest> {
    private static readonly pb::MessageParser<LogRequest> _parser = new pb::MessageParser<LogRequest>(() => new LogRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GoogleARCoreInternal.Proto.ArcoreClearcutReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest(LogRequest other) : this() {
      requestTimeMs_ = other.requestTimeMs_;
      requestUptimeMs_ = other.requestUptimeMs_;
      logEvent_ = other.logEvent_.Clone();
      switch (other.LogSourceCase) {
        case LogSourceOneofCase.LogSourceVal:
          LogSourceVal = other.LogSourceVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRequest Clone() {
      return new LogRequest(this);
    }

    /// <summary>Field number for the "request_time_ms" field.</summary>
    public const int RequestTimeMsFieldNumber = 4;
    private long requestTimeMs_;
    /// <summary>
    /// "Now", in milliseconds, according to the same clock as the one used to set
    /// the 'event_time_ms' values in the LogEvent protos above.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestTimeMs {
      get { return requestTimeMs_; }
      set {
        requestTimeMs_ = value;
      }
    }

    /// <summary>Field number for the "request_uptime_ms" field.</summary>
    public const int RequestUptimeMsFieldNumber = 8;
    private long requestUptimeMs_;
    /// <summary>
    /// Current time since boot in milliseconds, including time spent in sleep,
    /// according to the same clock as the one used to set
    /// the 'event_uptime_ms' values in the LogEvent protos above.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequestUptimeMs {
      get { return requestUptimeMs_; }
      set {
        requestUptimeMs_ = value;
      }
    }

    /// <summary>Field number for the "log_source_val" field.</summary>
    public const int LogSourceValFieldNumber = 2;
    /// <summary>
    /// [default = UNKNOWN];
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GoogleARCoreInternal.Proto.LogRequest.Types.LogSource LogSourceVal {
      get { return logSourceCase_ == LogSourceOneofCase.LogSourceVal ? (global::GoogleARCoreInternal.Proto.LogRequest.Types.LogSource) logSource_ : 0; }
      set {
        logSource_ = value;
        logSourceCase_ = LogSourceOneofCase.LogSourceVal;
      }
    }

    /// <summary>Field number for the "log_event" field.</summary>
    public const int LogEventFieldNumber = 3;
    private static readonly pb::FieldCodec<global::GoogleARCoreInternal.Proto.LogEvent> _repeated_logEvent_codec
        = pb::FieldCodec.ForMessage(26, global::GoogleARCoreInternal.Proto.LogEvent.Parser);
    private readonly pbc::RepeatedField<global::GoogleARCoreInternal.Proto.LogEvent> logEvent_ = new pbc::RepeatedField<global::GoogleARCoreInternal.Proto.LogEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GoogleARCoreInternal.Proto.LogEvent> LogEvent {
      get { return logEvent_; }
    }

    private object logSource_;
    /// <summary>Enum of possible cases for the "log_source" oneof.</summary>
    public enum LogSourceOneofCase {
      None = 0,
      LogSourceVal = 2,
    }
    private LogSourceOneofCase logSourceCase_ = LogSourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogSourceOneofCase LogSourceCase {
      get { return logSourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLogSource() {
      logSourceCase_ = LogSourceOneofCase.None;
      logSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestTimeMs != other.RequestTimeMs) return false;
      if (RequestUptimeMs != other.RequestUptimeMs) return false;
      if (LogSourceVal != other.LogSourceVal) return false;
      if(!logEvent_.Equals(other.logEvent_)) return false;
      if (LogSourceCase != other.LogSourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestTimeMs != 0L) hash ^= RequestTimeMs.GetHashCode();
      if (RequestUptimeMs != 0L) hash ^= RequestUptimeMs.GetHashCode();
      if (logSourceCase_ == LogSourceOneofCase.LogSourceVal) hash ^= LogSourceVal.GetHashCode();
      hash ^= logEvent_.GetHashCode();
      hash ^= (int) logSourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (logSourceCase_ == LogSourceOneofCase.LogSourceVal) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LogSourceVal);
      }
      logEvent_.WriteTo(output, _repeated_logEvent_codec);
      if (RequestTimeMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RequestTimeMs);
      }
      if (RequestUptimeMs != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(RequestUptimeMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestTimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestTimeMs);
      }
      if (RequestUptimeMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequestUptimeMs);
      }
      if (logSourceCase_ == LogSourceOneofCase.LogSourceVal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogSourceVal);
      }
      size += logEvent_.CalculateSize(_repeated_logEvent_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogRequest other) {
      if (other == null) {
        return;
      }
      if (other.RequestTimeMs != 0L) {
        RequestTimeMs = other.RequestTimeMs;
      }
      if (other.RequestUptimeMs != 0L) {
        RequestUptimeMs = other.RequestUptimeMs;
      }
      logEvent_.Add(other.logEvent_);
      switch (other.LogSourceCase) {
        case LogSourceOneofCase.LogSourceVal:
          LogSourceVal = other.LogSourceVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            logSource_ = input.ReadEnum();
            logSourceCase_ = LogSourceOneofCase.LogSourceVal;
            break;
          }
          case 26: {
            logEvent_.AddEntriesFrom(input, _repeated_logEvent_codec);
            break;
          }
          case 32: {
            RequestTimeMs = input.ReadInt64();
            break;
          }
          case 64: {
            RequestUptimeMs = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the LogRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LogSource {
        /// <summary>
        /// Google Play Store Android App
        /// </summary>
        [pbr::OriginalName("STORE")] Store = 0,
        [pbr::OriginalName("UNKNOWN")] Unknown = -1,
        /// <summary>
        /// Log source for Clearcut's batched log request endpoint. This is not a
        /// real log source, but is a placeholder for some legacy streamz that have
        /// log_source fields.
        /// </summary>
        [pbr::OriginalName("BATCHED_LOG_REQUEST")] BatchedLogRequest = 357,
        /// <summary>
        /// Google Play Web Store (https://play.google.com/store)
        /// </summary>
        [pbr::OriginalName("WEB_STORE")] WebStore = 65,
        /// <summary>
        /// Play for Work on the web client (Worksky)
        /// </summary>
        [pbr::OriginalName("WORK_STORE")] WorkStore = 132,
        /// <summary>
        /// Play for Work on the Google Play Store Android App
        /// </summary>
        [pbr::OriginalName("WORK_STORE_APP")] WorkStoreApp = 261,
        /// <summary>
        /// for collecting stats on Play for Education
        /// </summary>
        [pbr::OriginalName("EDU_STORE")] EduStore = 15,
        [pbr::OriginalName("MUSIC")] Music = 1,
        [pbr::OriginalName("BOOKS")] Books = 2,
        /// <summary>
        /// Android Video (go/avi, android-video-oncall@)
        /// </summary>
        [pbr::OriginalName("VIDEO")] Video = 3,
        [pbr::OriginalName("MOVIES")] Movies = 74,
        [pbr::OriginalName("MAGAZINES")] Magazines = 4,
        [pbr::OriginalName("GAMES")] Games = 5,
        /// <summary>
        /// for collecting app usage stats (Lockbox project)
        /// </summary>
        [pbr::OriginalName("LB_A")] LbA = 6,
        /// <summary>
        /// Android IDE (deprecated, see ANDROID_STUDIO below)
        /// </summary>
        [pbr::OriginalName("ANDROID_IDE")] AndroidIde = 7,
        /// <summary>
        /// for collecting phone call events and stats (Lockbox project)
        /// </summary>
        [pbr::OriginalName("LB_P")] LbP = 8,
        /// <summary>
        /// for collecting SMS events and stats (Lockbox project)
        /// </summary>
        [pbr::OriginalName("LB_S")] LbS = 9,
        /// <summary>
        /// Usage of GMS Core itself and its internal stats
        /// </summary>
        [pbr::OriginalName("GMS_CORE")] GmsCore = 10,
        /// <summary>
        /// First-party app usage tracking.
        /// </summary>
        [pbr::OriginalName("APP_USAGE_1P")] AppUsage1P = 11,
        /// <summary>
        /// Icing stats (AppDataSearch go/icing)
        /// </summary>
        [pbr::OriginalName("ICING")] Icing = 12,
        /// <summary>
        /// for collecting Nova Network quality data
        /// </summary>
        [pbr::OriginalName("HERREVAD")] Herrevad = 13,
        /// <summary>
        /// Google TV, not Eureka.
        /// </summary>
        [pbr::OriginalName("GOOGLE_TV")] GoogleTv = 14,
        /// <summary>
        /// GMS core people (aka menagerie, zhengfu@, android-contacts@)
        /// </summary>
        [pbr::OriginalName("GMS_CORE_PEOPLE")] GmsCorePeople = 16,
        /// <summary>
        /// Location Engine statistics
        /// </summary>
        [pbr::OriginalName("LE")] Le = 17,
        /// <summary>
        /// Google Analytics SDK health monitoring
        /// </summary>
        [pbr::OriginalName("GOOGLE_ANALYTICS")] GoogleAnalytics = 18,
        /// <summary>
        /// for collecting device state changes (Lockbox project)
        /// </summary>
        [pbr::OriginalName("LB_D")] LbD = 19,
        /// <summary>
        /// Android GSA (Google Search App) stats
        /// </summary>
        [pbr::OriginalName("ANDROID_GSA")] AndroidGsa = 20,
        /// <summary>
        /// for collecting Android RunningTaskInfo (Lockbox project)
        /// </summary>
        [pbr::OriginalName("LB_T")] LbT = 21,
        /// <summary>
        /// PixelPerfect activity logger
        /// </summary>
        [pbr::OriginalName("PERSONAL_LOGGER")] PersonalLogger = 22,
        /// <summary>
        /// PixelPerfect Chrome extension logger
        /// </summary>
        [pbr::OriginalName("PERSONAL_BROWSER_LOGGER")] PersonalBrowserLogger = 37,
        /// <summary>
        /// GMS core wallet merchant errors
        /// </summary>
        [pbr::OriginalName("GMS_CORE_WALLET_MERCHANT_ERROR")] GmsCoreWalletMerchantError = 23,
        /// <summary>
        /// Android contacts going from Now to HappyHour.log_event_extension_test
        /// </summary>
        [pbr::OriginalName("LB_C")] LbC = 24,
        /// <summary>
        /// Android installed apps going from Now to HappyHour.
        /// </summary>
        [pbr::OriginalName("LB_IA")] LbIa = 52,
        /// <summary>
        /// Android contacts for backup/restore purpose.
        /// </summary>
        [pbr::OriginalName("LB_CB")] LbCb = 237,
        /// <summary>
        /// Android device metadata used for contacts backup/restore purpose.
        /// </summary>
        [pbr::OriginalName("LB_DM")] LbDm = 268,
        /// <summary>
        /// Android contact logs from contactsLogger for backup.
        /// </summary>
        [pbr::OriginalName("CL_C")] ClC = 493,
        /// <summary>
        /// Android device metadata logs for contacts upload from contactsLogger.
        /// </summary>
        [pbr::OriginalName("CL_DM")] ClDm = 494,
        /// <summary>
        /// for collecting GMS core android auth data
        /// </summary>
        [pbr::OriginalName("ANDROID_AUTH")] AndroidAuth = 25,
        /// <summary>
        /// Android camera usage statistics
        /// </summary>
        [pbr::OriginalName("ANDROID_CAMERA")] AndroidCamera = 26,
        /// <summary>
        /// Clockwork interaction logs
        /// </summary>
        [pbr::OriginalName("CW")] Cw = 27,
        /// <summary>
        /// Clockwork counters
        /// </summary>
        [pbr::OriginalName("CW_COUNTERS")] CwCounters = 243,
        /// <summary>
        /// Google experience launcher logs (http://go/signac).
        /// </summary>
        [pbr::OriginalName("GEL")] Gel = 28,
        /// <summary>
        /// DNA logger (for internal research), go/dna2014.
        /// </summary>
        [pbr::OriginalName("DNA_PROBER")] DnaProber = 29,
        /// <summary>
        /// For collecting Android app usage data.
        /// </summary>
        [pbr::OriginalName("UDR")] Udr = 30,
        /// <summary>
        /// GMS core wallet analytics
        /// </summary>
        [pbr::OriginalName("GMS_CORE_WALLET")] GmsCoreWallet = 31,
        /// <summary>
        /// Traffic from Social clients: gplus-log-quality@
        /// </summary>
        [pbr::OriginalName("SOCIAL")] Social = 32,
        /// <summary>
        /// Instore play payments
        /// </summary>
        [pbr::OriginalName("INSTORE_WALLET")] InstoreWallet = 33,
        /// <summary>
        /// Nova client logs.
        /// </summary>
        [pbr::OriginalName("NOVA")] Nova = 34,
        /// <summary>
        /// Android contact account data going from Now to Footprints.
        /// </summary>
        [pbr::OriginalName("LB_CA")] LbCa = 35,
        /// <summary>
        /// Google Keyboard (http://go/google-keyboard)
        /// </summary>
        [pbr::OriginalName("LATIN_IME")] LatinIme = 36,
        /// <summary>
        /// News &amp; Weather Android/iOS apps
        /// </summary>
        [pbr::OriginalName("NEWS_WEATHER")] NewsWeather = 38,
        /// <summary>
        /// News &amp; Weather Android (go/newsandroid) App metric logging (go/primes)
        /// </summary>
        [pbr::OriginalName("NEWS_WEATHER_ANDROID_PRIMES")] NewsWeatherAndroidPrimes = 458,
        /// <summary>
        /// News &amp; Weather iOS (go/newsios) App metric logging (go/primes-ios)
        /// </summary>
        [pbr::OriginalName("NEWS_WEATHER_IOS_PRIMES")] NewsWeatherIosPrimes = 459,
        /// <summary>
        /// Deprecated source for HangoutLogEntry (rtc-analytics-eng@)
        /// </summary>
        [pbr::OriginalName("HANGOUT")] Hangout = 39,
        /// <summary>
        /// Hangouts data using HangoutLogRequest (rtc-analytics-eng@)
        /// </summary>
        [pbr::OriginalName("HANGOUT_LOG_REQUEST")] HangoutLogRequest = 50,
        /// <summary>
        /// Copresence (http://go/whisper)
        /// </summary>
        [pbr::OriginalName("COPRESENCE")] Copresence = 40,
        /// <summary>
        /// Social Affinity logs (go/affinity-logging).
        /// </summary>
        [pbr::OriginalName("SOCIAL_AFFINITY")] SocialAffinity = 41,
        /// <summary>
        /// Social Affinity logs for Photos (go/affinity-logging).
        /// </summary>
        [pbr::OriginalName("SOCIAL_AFFINITY_PHOTOS")] SocialAffinityPhotos = 465,
        /// <summary>
        /// Social Affinity logs for Gmail (go/affinity-logging).
        /// </summary>
        [pbr::OriginalName("SOCIAL_AFFINITY_GMAIL")] SocialAffinityGmail = 515,
        /// <summary>
        /// Social Affinity logs for Inbox (go/affinity-logging).
        /// </summary>
        [pbr::OriginalName("SOCIAL_AFFINITY_INBOX")] SocialAffinityInbox = 516,
        /// <summary>
        /// Social Affinity logs for APDL (go/affinity-logging).
        /// </summary>
        [pbr::OriginalName("SOCIAL_AFFINITY_APDL")] SocialAffinityApdl = 707,
        /// <summary>
        /// Monitoring for Populous (go/populous-eng-logging)
        /// </summary>
        [pbr::OriginalName("PEOPLE_AUTOCOMPLETE")] PeopleAutocomplete = 574,
        /// <summary>
        /// Monitoring for SendKit (go/sendkit)
        /// </summary>
        [pbr::OriginalName("SENDKIT")] Sendkit = 624,
        /// <summary>
        /// Monitoring data for Populous clients (go/pb-logging)
        /// </summary>
        [pbr::OriginalName("PEOPLE_AUTOCOMPLETE_CLIENT")] PeopleAutocompleteClient = 625,
        /// <summary>
        /// Google Photos (go/photos).
        /// </summary>
        [pbr::OriginalName("PHOTOS")] Photos = 42,
        /// <summary>
        /// Google Cloud Messaging logs (go/gcm).
        /// </summary>
        [pbr::OriginalName("GCM")] Gcm = 43,
        /// <summary>
        /// GoKart (go/gokart, Drive Android API)
        /// </summary>
        [pbr::OriginalName("GOKART")] Gokart = 44,
        /// <summary>
        /// Findr app (go/findr).
        /// </summary>
        [pbr::OriginalName("FINDR")] Findr = 45,
        /// <summary>
        /// Android messenger(Bugle) (go/bugledev).
        /// </summary>
        [pbr::OriginalName("ANDROID_MESSAGING")] AndroidMessaging = 46,
        /// <summary>
        /// Bugle counters (go/bugledev)
        /// </summary>
        [pbr::OriginalName("BUGLE_COUNTERS")] BugleCounters = 323,
        /// <summary>
        /// Traffic from Social clients: gplus-log-quality@.
        /// </summary>
        [pbr::OriginalName("SOCIAL_WEB")] SocialWeb = 47,
        /// <summary>
        /// Backdrop device logs (go/tv-imax).
        /// </summary>
        [pbr::OriginalName("BACKDROP")] Backdrop = 48,
        /// <summary>
        /// Telematics app (go/telematics).
        /// </summary>
        [pbr::OriginalName("TELEMATICS")] Telematics = 49,
        /// <summary>
        /// GVC Harvester (go/harvesterdesigndoc)
        /// </summary>
        [pbr::OriginalName("GVC_HARVESTER")] GvcHarvester = 51,
        /// <summary>
        /// Android Automotive (go/gearhead).
        /// </summary>
        [pbr::OriginalName("CAR")] Car = 53,
        /// <summary>
        /// PixelPerfect app client log (go/pixelperfect-analytics)
        /// </summary>
        [pbr::OriginalName("PIXEL_PERFECT")] PixelPerfect = 54,
        /// <summary>
        /// Google Drive (go/cakemix, nickread@, cakemix-drive@)
        /// </summary>
        [pbr::OriginalName("DRIVE")] Drive = 55,
        /// <summary>
        /// Google Docs (go/cakemix, haluk@, bulach@, tstrauss@)
        /// </summary>
        [pbr::OriginalName("DOCS")] Docs = 56,
        /// <summary>
        /// Google Sheets (go/cakemix, tgleason@, bulach@, tstrauss@)
        /// </summary>
        [pbr::OriginalName("SHEETS")] Sheets = 57,
        /// <summary>
        /// Google Slides (go/cakemix, yugacohler@, bulach@, tstrauss@)
        /// </summary>
        [pbr::OriginalName("SLIDES")] Slides = 58,
        /// <summary>
        /// Google Android IME logs (go/goopy).
        /// </summary>
        [pbr::OriginalName("IME")] Ime = 59,
        /// <summary>
        /// Warp (go/warp-project)
        /// </summary>
        [pbr::OriginalName("WARP")] Warp = 60,
        /// <summary>
        /// NfcProgrammer (go/aedu-platform-overview)
        /// </summary>
        [pbr::OriginalName("NFC_PROGRAMMER")] NfcProgrammer = 61,
        /// <summary>
        /// Collection of Network Statistics (go/n-s).
        /// </summary>
        [pbr::OriginalName("NETSTATS")] Netstats = 62,
        /// <summary>
        /// Google Play Newsstand.
        /// </summary>
        [pbr::OriginalName("NEWSSTAND")] Newsstand = 63,
        /// <summary>
        /// Kids Communicator (http://goto/kidscommunicator_dd)
        /// </summary>
        [pbr::OriginalName("KIDS_COMMUNICATOR")] KidsCommunicator = 64,
        /// <summary>
        /// WiFi Assistant client logs.
        /// </summary>
        [pbr::OriginalName("WIFI_ASSISTANT")] WifiAssistant = 66,
        /// <summary>
        /// WiFi Assistant client logs, primes.
        /// </summary>
        [pbr::OriginalName("WIFI_ASSISTANT_PRIMES")] WifiAssistantPrimes = 326,
        /// <summary>
        /// Wifi Assistant client (GCS) counters.
        /// </summary>
        [pbr::OriginalName("WIFI_ASSISTANT_COUNTERS")] WifiAssistantCounters = 709,
        /// <summary>
        /// Cast Sender SDK (go/dongle)
        /// </summary>
        [pbr::OriginalName("CAST_SENDER_SDK")] CastSenderSdk = 67,
        /// <summary>
        /// Social cronet metrics.
        /// </summary>
        [pbr::OriginalName("CRONET_SOCIAL")] CronetSocial = 68,
        /// <summary>
        /// The client side of experiment framework (go/ph, peiling@, phenotype-eng@).
        /// </summary>
        [pbr::OriginalName("PHENOTYPE")] Phenotype = 69,
        /// <summary>
        /// The counters for Phenotype (go/ph, peiling@, phenotype-eng@).
        /// </summary>
        [pbr::OriginalName("PHENOTYPE_COUNTERS")] PhenotypeCounters = 70,
        /// <summary>
        /// Chrome Infrastructure events
        /// </summary>
        [pbr::OriginalName("CHROME_INFRA")] ChromeInfra = 71,
        /// <summary>
        /// JustSpeak (go/justspeak)
        /// </summary>
        [pbr::OriginalName("JUSTSPEAK")] Justspeak = 72,
        /// <summary>
        /// Android Wide Profiling (go/android-wide-profiling)
        /// </summary>
        [pbr::OriginalName("PERF_PROFILE")] PerfProfile = 73,
        /// <summary>
        /// Android TV search (go/atv-search)
        /// </summary>
        [pbr::OriginalName("KATNISS")] Katniss = 75,
        /// <summary>
        /// Google Plus Platform App Invite (go/appinvite)
        /// </summary>
        [pbr::OriginalName("SOCIAL_APPINVITE")] SocialAppinvite = 76,
        /// <summary>
        /// Google Maps Mobile (go/gmm).
        /// </summary>
        [pbr::OriginalName("GMM_COUNTERS")] GmmCounters = 77,
        /// <summary>
        /// Bond OneGoogleBar integration (go/bond-ogb)
        /// </summary>
        [pbr::OriginalName("BOND_ONEGOOGLE")] BondOnegoogle = 78,
        /// <summary>
        /// Android and iOS Maps API (go/mapview &amp; go/meridian)
        /// </summary>
        [pbr::OriginalName("MAPS_API")] MapsApi = 79,
        /// <summary>
        /// Cronet UMA logs from Android YT (go/cronet-uma)
        /// </summary>
        [pbr::OriginalName("CRONET_ANDROID_YT")] CronetAndroidYt = 196,
        /// <summary>
        /// Cronet UMA logs from Android GSA (go/cronet-uma)
        /// </summary>
        [pbr::OriginalName("CRONET_ANDROID_GSA")] CronetAndroidGsa = 80,
        /// <summary>
        /// Google Fit Wearable App (go/heart)
        /// </summary>
        [pbr::OriginalName("GOOGLE_FIT_WEARABLE")] GoogleFitWearable = 81,
        /// <summary>
        /// Google Fit Android App (go/heart)
        /// </summary>
        [pbr::OriginalName("FITNESS_ANDROID")] FitnessAndroid = 169,
        /// <summary>
        /// Google Fit GMSCore (go/heart)
        /// </summary>
        [pbr::OriginalName("FITNESS_GMS_CORE")] FitnessGmsCore = 170,
        /// <summary>
        /// Google Express (go/gsx)
        /// </summary>
        [pbr::OriginalName("GOOGLE_EXPRESS")] GoogleExpress = 82,
        /// <summary>
        /// Google Express Counters (go/gsx-web-monitoring)
        /// </summary>
        [pbr::OriginalName("GOOGLE_EXPRESS_COUNTERS")] GoogleExpressCounters = 671,
        /// <summary>
        /// Google Express (go/gsx) For DEV mall server
        /// </summary>
        [pbr::OriginalName("GOOGLE_EXPRESS_DEV")] GoogleExpressDev = 215,
        /// <summary>
        /// Google Express (go/gsx) Courier App metric logging (go/primes)
        /// </summary>
        [pbr::OriginalName("GOOGLE_EXPRESS_COURIER_ANDROID_PRIMES")] GoogleExpressCourierAndroidPrimes = 228,
        /// <summary>
        /// Google Express (go/gsx) App metric logging (go/primes)
        /// </summary>
        [pbr::OriginalName("GOOGLE_EXPRESS_ANDROID_PRIMES")] GoogleExpressAndroidPrimes = 229,
        /// <summary>
        /// Google Express (go/gsx) App metric logging (go/primes-ios)
        /// </summary>
        [pbr::OriginalName("GOOGLE_EXPRESS_IOS_PRIMES")] GoogleExpressIosPrimes = 374,
        /// <summary>
        /// Google Express (go/gsx) Store OMS App metric logging (go/primes)
        /// </summary>
        [pbr::OriginalName("GOOGLE_EXPRESS_STOREOMS_ANDROID_PRIMES")] GoogleExpressStoreomsAndroidPrimes = 240,
        /// <summary>
        /// Sense (go/sense)
        /// </summary>
        [pbr::OriginalName("SENSE")] Sense = 83,
        /// <summary>
        /// Android Backup Service.
        /// </summary>
        [pbr::OriginalName("ANDROID_BACKUP")] AndroidBackup = 84,
        /// <summary>
        /// Virtual Reality and Google Cardboard (go/vr-team)
        /// </summary>
        [pbr::OriginalName("VR")] Vr = 85,
        /// <summary>
        /// The counters for Google Android IME (go/goopy).
        /// </summary>
        [pbr::OriginalName("IME_COUNTERS")] ImeCounters = 86,
        /// <summary>
        /// Setup Wizard (go/suw)
        /// </summary>
        [pbr::OriginalName("SETUP_WIZARD")] SetupWizard = 87,
        /// <summary>
        /// Pomeroy (go/pomeroy)
        /// </summary>
        [pbr::OriginalName("EMERGENCY_ASSIST")] EmergencyAssist = 88,
        /// <summary>
        /// The event logs for Android Framework (go/tron, cwren@, khigaki@, tron-eng@).
        /// </summary>
        [pbr::OriginalName("TRON")] Tron = 89,
        /// <summary>
        /// The counters for Android Framework (go/tron, cwren@, khigaki@, tron-eng@).
        /// </summary>
        [pbr::OriginalName("TRON_COUNTERS")] TronCounters = 90,
        /// <summary>
        /// For collecting battery performance data from Android clients. (go/androidplatformstats, belland@, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("BATTERY_STATS")] BatteryStats = 91,
        /// <summary>
        /// For collecting disk utilization stats from Android clients. (go/androidplatformstats, belland@, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("DISK_STATS")] DiskStats = 92,
        /// <summary>
        /// For collecting rendering performance stats from Android clients. (go/androidplatformstats, belland@, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("GRAPHICS_STATS")] GraphicsStats = 107,
        /// <summary>
        /// For collecting memory utilization stats from Android clients. (go/androidplatformstats, belland@, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("PROC_STATS")] ProcStats = 93,
        /// <summary>
        /// For collecting DropBox logs from Android clients.
        /// </summary>
        [pbr::OriginalName("DROP_BOX")] DropBox = 131,
        /// <summary>
        /// For collecting fingerprint stats from Android clients. (go/android-fingerprintstats)
        /// </summary>
        [pbr::OriginalName("FINGERPRINT_STATS")] FingerprintStats = 181,
        /// <summary>
        /// For collecting notification stats from Android clients. (go/android-notificationstats)
        /// </summary>
        [pbr::OriginalName("NOTIFICATION_STATS")] NotificationStats = 182,
        /// <summary>
        /// For collecting settings stats from Android clients. (go/android-settingsstats)
        /// </summary>
        [pbr::OriginalName("SETTINGS_STATS")] SettingsStats = 390,
        /// <summary>
        /// For collecting storage IO data from Android clients.
        /// </summary>
        [pbr::OriginalName("STORAGED")] Storaged = 539,
        /// <summary>
        /// (go/storaged-readme)
        /// </summary>
        [pbr::OriginalName("TAP_AND_PAY_GCORE")] TapAndPayGcore = 94,
        /// <summary>
        /// Accessibility Settings Logger (go/a11ylogger)
        /// </summary>
        [pbr::OriginalName("A11YLOGGER")] A11Ylogger = 95,
        /// <summary>
        /// Google Cloud Messaging counters (go/gcm).
        /// </summary>
        [pbr::OriginalName("GCM_COUNTERS")] GcmCounters = 96,
        /// <summary>
        /// Mobile Places API logs without GLS consent (go/ios-places-api).
        /// </summary>
        [pbr::OriginalName("PLACES_NO_GLS_CONSENT")] PlacesNoGlsConsent = 97,
        /// <summary>
        /// WebRTC Tachyon (go/tachyon)
        /// </summary>
        [pbr::OriginalName("TACHYON_LOG_REQUEST")] TachyonLogRequest = 98,
        /// <summary>
        /// WebRTC Tachyon (go/tachyon)
        /// </summary>
        [pbr::OriginalName("TACHYON_COUNTERS")] TachyonCounters = 99,
        /// <summary>
        /// Duo (go/tachyon)
        /// </summary>
        [pbr::OriginalName("DUO_CRONET")] DuoCronet = 396,
        /// <summary>
        /// Vision (go/mobile-vision)
        /// </summary>
        [pbr::OriginalName("VISION")] Vision = 100,
        /// <summary>
        /// Location Sharing (go/location-sharing)
        /// </summary>
        [pbr::OriginalName("SOCIAL_USER_LOCATION")] SocialUserLocation = 101,
        /// <summary>
        /// Launchpad Toys (go/launchpadtoys)
        /// </summary>
        [pbr::OriginalName("LAUNCHPAD_TOYS")] LaunchpadToys = 102,
        /// <summary>
        /// Counters for metalog (go/clearcut-metalog, iamawong@, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("METALOG_COUNTERS")] MetalogCounters = 103,
        /// <summary>
        /// go/firedata
        /// </summary>
        [pbr::OriginalName("MOBILESDK_CLIENT")] MobilesdkClient = 104,
        /// <summary>
        /// go/safety-net
        /// </summary>
        [pbr::OriginalName("ANDROID_VERIFY_APPS")] AndroidVerifyApps = 105,
        /// <summary>
        /// go/adshield
        /// </summary>
        [pbr::OriginalName("ADSHIELD")] Adshield = 106,
        /// <summary>
        /// Sherlog data (go/sherlog)
        /// </summary>
        [pbr::OriginalName("SHERLOG")] Sherlog = 108,
        /// <summary>
        /// Counters for ULR (go/gcore-ulr). Location custom events use LE.
        /// </summary>
        [pbr::OriginalName("LE_ULR_COUNTERS")] LeUlrCounters = 109,
        /// <summary>
        /// Logs for GMM analytics and sessions (go/gca-analytics)
        /// </summary>
        [pbr::OriginalName("GMM_UE3")] GmmUe3 = 110,
        /// <summary>
        /// Google Android Calendar
        /// </summary>
        [pbr::OriginalName("CALENDAR")] Calendar = 111,
        /// <summary>
        /// Logs for Ender (go/ender)
        /// </summary>
        [pbr::OriginalName("ENDER")] Ender = 112,
        /// <summary>
        /// go/familycompass
        /// </summary>
        [pbr::OriginalName("FAMILY_COMPASS")] FamilyCompass = 113,
        /// <summary>
        /// Transom client-side metrics (go/transom)
        /// </summary>
        [pbr::OriginalName("TRANSOM")] Transom = 114,
        /// <summary>
        /// Counters for transom metrics
        /// </summary>
        [pbr::OriginalName("TRANSOM_COUNTERS")] TransomCounters = 115,
        /// <summary>
        /// App usage collected by the new UsageStats API (Lockbox project).
        /// </summary>
        [pbr::OriginalName("LB_AS")] LbAs = 116,
        /// <summary>
        /// Device config collected by the new UsageStats API (Lockbox project).
        /// </summary>
        [pbr::OriginalName("LB_CFG")] LbCfg = 117,
        /// <summary>
        /// iOS GSA (Google Search App) stats
        /// </summary>
        [pbr::OriginalName("IOS_GSA")] IosGsa = 118,
        /// <summary>
        /// Tap and Pay android app, aka Android pay app (go/tp2)
        /// </summary>
        [pbr::OriginalName("TAP_AND_PAY_APP")] TapAndPayApp = 119,
        /// <summary>
        /// Tap and Pay android app counters
        /// </summary>
        [pbr::OriginalName("TAP_AND_PAY_APP_COUNTERS")] TapAndPayAppCounters = 265,
        /// <summary>
        /// Logs for Flydroid (go/flydroid).
        /// </summary>
        [pbr::OriginalName("FLYDROID")] Flydroid = 120,
        /// <summary>
        /// CPanel latency on mobile.
        /// </summary>
        [pbr::OriginalName("CPANEL_APP")] CpanelApp = 121,
        /// <summary>
        /// go/safety-net
        /// </summary>
        [pbr::OriginalName("ANDROID_SNET_GCORE")] AndroidSnetGcore = 122,
        /// <summary>
        /// go/safety-net
        /// </summary>
        [pbr::OriginalName("ANDROID_SNET_IDLE")] AndroidSnetIdle = 123,
        /// <summary>
        /// go/safety-net
        /// </summary>
        [pbr::OriginalName("ANDROID_SNET_JAR")] AndroidSnetJar = 124,
        /// <summary>
        /// Logs for Context Manager (go/context-manager)
        /// </summary>
        [pbr::OriginalName("CONTEXT_MANAGER")] ContextManager = 125,
        /// <summary>
        /// App usage of the go/classroom app.
        /// </summary>
        [pbr::OriginalName("CLASSROOM")] Classroom = 126,
        /// <summary>
        /// Logs for Tailormade app (go/a1-tm)
        /// </summary>
        [pbr::OriginalName("TAILORMADE")] Tailormade = 127,
        /// <summary>
        /// Logs for Keep (go/keep).
        /// </summary>
        [pbr::OriginalName("KEEP")] Keep = 128,
        /// <summary>
        /// GMM BRIIM counters (go/gmm-briim)
        /// </summary>
        [pbr::OriginalName("GMM_BRIIM_COUNTERS")] GmmBriimCounters = 129,
        /// <summary>
        /// Logs for chromecast app (go/chromecastapplogs)
        /// </summary>
        [pbr::OriginalName("CHROMECAST_APP_LOG")] ChromecastAppLog = 130,
        /// <summary>
        /// Logs for AdWords mobile app (go/awm)
        /// </summary>
        [pbr::OriginalName("ADWORDS_MOBILE")] AdwordsMobile = 133,
        /// <summary>
        /// AdWords system health (go/awm, go/primes)
        /// </summary>
        [pbr::OriginalName("ADWORDS_MOBILE_ANDROID_PRIMES")] AdwordsMobileAndroidPrimes = 224,
        /// <summary>
        /// AdWords mobile app Primes logging (go/awm, go/primes-ios)
        /// </summary>
        [pbr::OriginalName("ADWORDS_MOBILE_IOS_PRIMES")] AdwordsMobileIosPrimes = 546,
        /// <summary>
        /// Logs for Android TV Leanback Launcher (go/android-tv)
        /// </summary>
        [pbr::OriginalName("LEANBACK_EVENT")] LeanbackEvent = 134,
        /// <summary>
        /// Logs for Android Gmail (go/ag-clearcut, shahrk@, gmail-android-eng@)
        /// </summary>
        [pbr::OriginalName("ANDROID_GMAIL")] AndroidGmail = 135,
        /// <summary>
        /// Logs for system health metric and memory metric sample app (go/primes)
        /// </summary>
        [pbr::OriginalName("SAMPLE_SHM")] SampleShm = 136,
        /// <summary>
        /// Logs for system health metric for Gplus (go/primes)
        /// </summary>
        [pbr::OriginalName("GPLUS_ANDROID_PRIMES")] GplusAndroidPrimes = 140,
        [pbr::OriginalName("GPLUS_ANDROID_SYSTEM_HEALTH", PreferredAlias = false)] GplusAndroidSystemHealth = 140,
        /// <summary>
        /// Logs for system health metric for GMail (go/primes)
        /// </summary>
        [pbr::OriginalName("GMAIL_ANDROID_PRIMES")] GmailAndroidPrimes = 150,
        [pbr::OriginalName("GMAIL_ANDROID_SYSTEM_HEALTH", PreferredAlias = false)] GmailAndroidSystemHealth = 150,
        /// <summary>
        /// Logs for system health metric for Calendar Android (go/primes)
        /// </summary>
        [pbr::OriginalName("CALENDAR_ANDROID_PRIMES")] CalendarAndroidPrimes = 151,
        [pbr::OriginalName("CALENDAR_ANDROID_SYSTEM_HEALTH", PreferredAlias = false)] CalendarAndroidSystemHealth = 151,
        /// <summary>
        /// Logs for system health metric for Docs (go/primes)
        /// </summary>
        [pbr::OriginalName("DOCS_ANDROID_PRIMES")] DocsAndroidPrimes = 152,
        [pbr::OriginalName("DOCS_ANDROID_SYSTEM_HEALTH", PreferredAlias = false)] DocsAndroidSystemHealth = 152,
        /// <summary>
        /// Logs for system health metric for the YouTube main app (go/primes)
        /// </summary>
        [pbr::OriginalName("YT_MAIN_APP_ANDROID_PRIMES")] YtMainAppAndroidPrimes = 154,
        /// <summary>
        /// Logs for system health metric for the YouTube kids app (go/primes)
        /// </summary>
        [pbr::OriginalName("YT_KIDS_ANDROID_PRIMES")] YtKidsAndroidPrimes = 155,
        /// <summary>
        /// Logs for system health metric for the YouTube gaming app (go/primes)
        /// </summary>
        [pbr::OriginalName("YT_GAMING_ANDROID_PRIMES")] YtGamingAndroidPrimes = 156,
        /// <summary>
        /// Logs for system health metric for the YouTube music app (go/primes)
        /// </summary>
        [pbr::OriginalName("YT_MUSIC_ANDROID_PRIMES")] YtMusicAndroidPrimes = 157,
        /// <summary>
        /// Logs for system health metric for the YouTube lite app (go/primes)
        /// </summary>
        [pbr::OriginalName("YT_LITE_ANDROID_PRIMES")] YtLiteAndroidPrimes = 158,
        /// <summary>
        /// Logs for system health metric for the YouTube Creator Studio app (go/primes)
        /// </summary>
        [pbr::OriginalName("YT_CREATOR_ANDROID_PRIMES")] YtCreatorAndroidPrimes = 171,
        /// <summary>
        /// Logs for system health metric for YouTube TV app (go/primes)
        /// </summary>
        [pbr::OriginalName("YT_UNPLUGGED_ANDROID_PRIMES")] YtUnpluggedAndroidPrimes = 589,
        /// <summary>
        /// Logs for system health metric for Jam (go/jam, go/primes)
        /// </summary>
        [pbr::OriginalName("JAM_ANDROID_PRIMES")] JamAndroidPrimes = 159,
        /// <summary>
        /// Logs for system health metric for Jam Kiosk (go/jam, go/primes)
        /// </summary>
        [pbr::OriginalName("JAM_KIOSK_ANDROID_PRIMES")] JamKioskAndroidPrimes = 160,
        /// <summary>
        /// Logs for system health metric for Photos (go/primes)
        /// </summary>
        [pbr::OriginalName("PHOTOS_ANDROID_PRIMES")] PhotosAndroidPrimes = 165,
        /// <summary>
        /// Logs for system health metric for Drive (go/primes)
        /// </summary>
        [pbr::OriginalName("DRIVE_ANDROID_PRIMES")] DriveAndroidPrimes = 166,
        /// <summary>
        /// Logs for system health metric for Sheets (go/primes)
        /// </summary>
        [pbr::OriginalName("SHEETS_ANDROID_PRIMES")] SheetsAndroidPrimes = 167,
        /// <summary>
        /// Logs for system health metric for Slides (go/primes)
        /// </summary>
        [pbr::OriginalName("SLIDES_ANDROID_PRIMES")] SlidesAndroidPrimes = 168,
        /// <summary>
        /// Logs for system health metric for Snapseed (go/primes, go/snapseed).
        /// </summary>
        [pbr::OriginalName("SNAPSEED_ANDROID_PRIMES")] SnapseedAndroidPrimes = 178,
        /// <summary>
        /// Logs for system health metric for Shem (go/primes, go/rtc-shem).
        /// </summary>
        [pbr::OriginalName("HANGOUTS_ANDROID_PRIMES")] HangoutsAndroidPrimes = 179,
        /// <summary>
        /// Logs for system health metric for Inbox (go/primes, go/bt-speed)
        /// </summary>
        [pbr::OriginalName("INBOX_ANDROID_PRIMES")] InboxAndroidPrimes = 180,
        /// <summary>
        /// Logs for ios system health metric for Inbox (go/primes-ios, go/bt-speed)
        /// </summary>
        [pbr::OriginalName("INBOX_IOS_PRIMES")] InboxIosPrimes = 262,
        /// <summary>
        /// Logs for ios system health metric for sdp (go/primes-ios, go/bt-speed)
        /// </summary>
        [pbr::OriginalName("SDP_IOS_PRIMES")] SdpIosPrimes = 287,
        /// <summary>
        /// Logs for system health metric for GmsCore (go/primes)
        /// </summary>
        [pbr::OriginalName("GMSCORE_ANDROID_PRIMES")] GmscoreAndroidPrimes = 193,
        /// <summary>
        /// Logs for system health metric for Play Music for Android Wear (music-android-wear@, go/wear-play-music, go/primes)
        /// </summary>
        [pbr::OriginalName("PLAY_MUSIC_ANDROID_WEAR_PRIMES")] PlayMusicAndroidWearPrimes = 200,
        /// <summary>
        /// Logs for system health metric for Play Music for Android Wear Standalone (music-android-wear@, go/music-wear-standalone-prd, go/primes)
        /// </summary>
        [pbr::OriginalName("PLAY_MUSIC_ANDROID_WEAR_STANDALONE_PRIMES")] PlayMusicAndroidWearStandalonePrimes = 419,
        /// <summary>
        /// Logs for system health metric for the Android Auto (GearHead) app (go/primes, go/gearhead)
        /// </summary>
        [pbr::OriginalName("GEARHEAD_ANDROID_PRIMES")] GearheadAndroidPrimes = 201,
        /// <summary>
        /// Logs for system health metric for Hands Free (go/primes, go/instore-wallet)
        /// </summary>
        [pbr::OriginalName("INSTORE_CONSUMER_PRIMES")] InstoreConsumerPrimes = 207,
        /// <summary>
        /// Logs for ios system health metric and memory metric sample app (go/primes-ios)
        /// </summary>
        [pbr::OriginalName("SAMPLE_IOS_PRIMES")] SampleIosPrimes = 202,
        /// <summary>
        /// Logs for android system health metric (go/cpanel-mobile)
        /// </summary>
        [pbr::OriginalName("CPANEL_ANDROID_PRIMES")] CpanelAndroidPrimes = 213,
        /// <summary>
        /// Primes for Huddle (go/huddle)
        /// </summary>
        [pbr::OriginalName("HUDDLE_ANDROID_PRIMES")] HuddleAndroidPrimes = 214,
        /// <summary>
        /// Primes for Google AdWords Express android app (go/primes, go/awx-android)
        /// </summary>
        [pbr::OriginalName("AWX_ANDROID_PRIMES")] AwxAndroidPrimes = 222,
        /// <summary>
        /// Primes for Google Home Services android app (go/primes, go/sab-awx-android)
        /// </summary>
        [pbr::OriginalName("GHS_ANDROID_PRIMES")] GhsAndroidPrimes = 223,
        /// <summary>
        /// Primes for Tap and Pay android app, aka Android pay app (go/tp2)
        /// </summary>
        [pbr::OriginalName("TAP_AND_PAY_ANDROID_PRIMES")] TapAndPayAndroidPrimes = 227,
        /// <summary>
        /// Primes for Wallet android app (go/gmoney)
        /// </summary>
        [pbr::OriginalName("WALLET_APP_ANDROID_PRIMES")] WalletAppAndroidPrimes = 232,
        /// <summary>
        /// Primes for Wallet iOS app (go/gmoney)
        /// </summary>
        [pbr::OriginalName("WALLET_APP_IOS_PRIMES")] WalletAppIosPrimes = 233,
        /// <summary>
        /// Logs for system health metric for Analytics Android app (go/primes)
        /// </summary>
        [pbr::OriginalName("ANALYTICS_ANDROID_PRIMES")] AnalyticsAndroidPrimes = 235,
        /// <summary>
        /// Primes for Analytics iOS app (go/primes)
        /// </summary>
        [pbr::OriginalName("ANALYTICS_IOS_PRIMES")] AnalyticsIosPrimes = 538,
        /// <summary>
        /// Logs for the Spaces Android App (go/spaces)
        /// </summary>
        [pbr::OriginalName("SPACES_ANDROID_PRIMES")] SpacesAndroidPrimes = 236,
        /// <summary>
        /// Logs for the Spaces iOS App (go/spaces)
        /// </summary>
        [pbr::OriginalName("SPACES_IOS_PRIMES")] SpacesIosPrimes = 276,
        /// <summary>
        /// Logs for system health metric for Society (go/primes, go/society)
        /// </summary>
        [pbr::OriginalName("SOCIETY_ANDROID_PRIMES")] SocietyAndroidPrimes = 238,
        /// <summary>
        /// Logs for system health metric for GMM BRIIM (go/gmm-briim)
        /// </summary>
        [pbr::OriginalName("GMM_BRIIM_PRIMES")] GmmBriimPrimes = 239,
        /// <summary>
        /// Clockwork go/primes logs
        /// </summary>
        [pbr::OriginalName("CW_PRIMES")] CwPrimes = 242,
        /// <summary>
        /// Clockwork iOS companion go/primes logs
        /// </summary>
        [pbr::OriginalName("CW_IOS_PRIMES")] CwIosPrimes = 699,
        /// <summary>
        /// Logs for system health metric for FamilyLink (go/primes)
        /// </summary>
        [pbr::OriginalName("FAMILYLINK_ANDROID_PRIMES")] FamilylinkAndroidPrimes = 244,
        /// <summary>
        /// Logs for ios system health metric for FamilyLink (go/primes-ios, go/familylink-ios-app)
        /// </summary>
        [pbr::OriginalName("FAMILYLINK_IOS_PRIMES")] FamilylinkIosPrimes = 291,
        /// <summary>
        /// Primes for Westinghouse (go/westinghouse, go/primes)
        /// </summary>
        [pbr::OriginalName("WH_PRIMES")] WhPrimes = 248,
        /// <summary>
        /// Nova client app system health metrics (go/primes)
        /// </summary>
        [pbr::OriginalName("NOVA_ANDROID_PRIMES")] NovaAndroidPrimes = 249,
        /// <summary>
        /// Logs for system health metric for Photos Draper (go/primes, go/photos-draper)
        /// </summary>
        [pbr::OriginalName("PHOTOS_DRAPER_ANDROID_PRIMES")] PhotosDraperAndroidPrimes = 253,
        /// <summary>
        /// Logs for system health metric for aGMM (go/gmm)
        /// </summary>
        [pbr::OriginalName("GMM_PRIMES")] GmmPrimes = 254,
        /// <summary>
        /// Logs for system health metric for Translate on Android (go/primes)
        /// </summary>
        [pbr::OriginalName("TRANSLATE_ANDROID_PRIMES")] TranslateAndroidPrimes = 255,
        /// <summary>
        /// Logs for system health metric for Translate on iOS (go/primes)
        /// </summary>
        [pbr::OriginalName("TRANSLATE_IOS_PRIMES")] TranslateIosPrimes = 256,
        /// <summary>
        /// Log for system health metric for Freighter (go/freighter)
        /// </summary>
        [pbr::OriginalName("FREIGHTER_ANDROID_PRIMES")] FreighterAndroidPrimes = 259,
        [pbr::OriginalName("FLYDROID_ANDROID_PRIMES", PreferredAlias = false)] FlydroidAndroidPrimes = 259,
        /// <summary>
        /// Log for system health metric for Consumer IQ (go/primes)
        /// </summary>
        [pbr::OriginalName("CONSUMERIQ_PRIMES")] ConsumeriqPrimes = 260,
        /// <summary>
        /// Primes for Google My Business android app (go/gmb-android, go/primes).
        /// </summary>
        [pbr::OriginalName("GMB_ANDROID_PRIMES")] GmbAndroidPrimes = 263,
        /// <summary>
        /// Primes for CloudDpc (go/clouddpc)
        /// </summary>
        [pbr::OriginalName("CLOUDDPC_PRIMES")] ClouddpcPrimes = 304,
        /// <summary>
        /// Primes for CloudDpc for ARC (go/clouddpc)
        /// </summary>
        [pbr::OriginalName("CLOUDDPC_ARC_PRIMES")] ClouddpcArcPrimes = 305,
        /// <summary>
        /// iOS logging (go/ios-logging)
        /// </summary>
        [pbr::OriginalName("ICORE")] Icore = 137,
        /// <summary>
        /// Logs for Pancetta mobile hosts (go/pancetta)
        /// </summary>
        [pbr::OriginalName("PANCETTA_MOBILE_HOST")] PancettaMobileHost = 138,
        /// <summary>
        /// Counters for Pancetta mobile hosts (go/pancetta)
        /// </summary>
        [pbr::OriginalName("PANCETTA_MOBILE_HOST_COUNTERS")] PancettaMobileHostCounters = 139,
        /// <summary>
        /// Logs for cross device notification service (go/hotpocket)
        /// </summary>
        [pbr::OriginalName("CROSSDEVICENOTIFICATION")] Crossdevicenotification = 141,
        /// <summary>
        /// Dev logs for cross device notification service (go/hotpocket)
        /// </summary>
        [pbr::OriginalName("CROSSDEVICENOTIFICATION_DEV")] CrossdevicenotificationDev = 142,
        /// <summary>
        /// Android and iOS Maps API (go/mapview &amp; go/meridian)
        /// </summary>
        [pbr::OriginalName("MAPS_API_COUNTERS")] MapsApiCounters = 143,
        /// <summary>
        /// Logs for Geo Photo Uploader (go/gpu-site)
        /// </summary>
        [pbr::OriginalName("GPU")] Gpu = 144,
        /// <summary>
        /// Logs for OnTheGo (go/onthego)
        /// </summary>
        [pbr::OriginalName("ON_THE_GO")] OnTheGo = 145,
        /// <summary>
        /// Counters for OnTheGo (go/onthego)
        /// </summary>
        [pbr::OriginalName("ON_THE_GO_COUNTERS")] OnTheGoCounters = 146,
        /// <summary>
        /// OnTheGo (go/onthego) Android app metric logging (go/primes)
        /// </summary>
        [pbr::OriginalName("ON_THE_GO_ANDROID_PRIMES")] OnTheGoAndroidPrimes = 330,
        /// <summary>
        /// OnTheGo (go/onthego) iOS app metric logging (go/primes)
        /// </summary>
        [pbr::OriginalName("ON_THE_GO_IOS_PRIMES")] OnTheGoIosPrimes = 368,
        /// <summary>
        /// Logs for Gcore People Autocomplete (go/yenta)
        /// </summary>
        [pbr::OriginalName("GMS_CORE_PEOPLE_AUTOCOMPLETE")] GmsCorePeopleAutocomplete = 147,
        /// <summary>
        /// Logs for Flydroid (go/flydroid).
        /// </summary>
        [pbr::OriginalName("FLYDROID_COUNTERS")] FlydroidCounters = 148,
        /// <summary>
        /// Logs for Fireball (go/fireballdev)
        /// </summary>
        [pbr::OriginalName("FIREBALL")] Fireball = 149,
        /// <summary>
        /// Fireball counters (go/fireballdev)
        /// </summary>
        [pbr::OriginalName("FIREBALL_COUNTERS")] FireballCounters = 257,
        /// <summary>
        /// Fireball cronet (go/fireballdev)
        /// </summary>
        [pbr::OriginalName("CRONET_FIREBALL")] CronetFireball = 303,
        /// <summary>
        /// Logs for system health for Fireball (go/fireball-systemhealth-plan)
        /// </summary>
        [pbr::OriginalName("FIREBALL_PRIMES")] FireballPrimes = 266,
        /// <summary>
        /// Logs for system health for Fireball iOS (go/fireball-systemhealth-plan)
        /// </summary>
        [pbr::OriginalName("FIREBALL_IOS_PRIMES")] FireballIosPrimes = 313,
        /// <summary>
        /// Primes for Google Handwriting Input (go/hwrime)
        /// </summary>
        [pbr::OriginalName("GOOGLE_HANDWRITING_INPUT_ANDROID_PRIMES")] GoogleHandwritingInputAndroidPrimes = 314,
        /// <summary>
        /// Logs for Pyroclasm (go/pyroclasm)
        /// </summary>
        [pbr::OriginalName("PYROCLASM")] Pyroclasm = 153,
        /// <summary>
        /// Logs for AGSA counters.
        /// </summary>
        [pbr::OriginalName("ANDROID_GSA_COUNTERS")] AndroidGsaCounters = 161,
        /// <summary>
        /// Impressions logs for Jam (go/jam).
        /// </summary>
        [pbr::OriginalName("JAM_IMPRESSIONS")] JamImpressions = 162,
        /// <summary>
        /// Impressions logs for Jam Kiosk (go/jam).
        /// </summary>
        [pbr::OriginalName("JAM_KIOSK_IMPRESSIONS")] JamKioskImpressions = 163,
        /// <summary>
        /// Logs for payments ocr (go/cc-ocr-metrics).
        /// </summary>
        [pbr::OriginalName("PAYMENTS_OCR")] PaymentsOcr = 164,
        /// <summary>
        /// Logs for Family management (and onboarding) go/familymanagement
        /// </summary>
        [pbr::OriginalName("UNICORN_FAMILY_MANAGEMENT")] UnicornFamilyManagement = 172,
        /// <summary>
        /// Logs for Accesssibility Auditor (go/a11y-checker)
        /// </summary>
        [pbr::OriginalName("AUDITOR")] Auditor = 173,
        /// <summary>
        /// Logs for NQLookup (go/nqlookup, contact herrevad@google.com)
        /// </summary>
        [pbr::OriginalName("NQLOOKUP")] Nqlookup = 174,
        /// <summary>
        /// Logs for high priority events in AGSA (go/click-tracking-agsa).
        /// </summary>
        [pbr::OriginalName("ANDROID_GSA_HIGH_PRIORITY_EVENTS")] AndroidGsaHighPriorityEvents = 175,
        /// <summary>
        /// Logs for Android Dialer (go/android-dialer)
        /// </summary>
        [pbr::OriginalName("ANDROID_DIALER")] AndroidDialer = 176,
        /// <summary>
        /// Logs for Clearcut's demo application
        /// </summary>
        [pbr::OriginalName("CLEARCUT_DEMO")] ClearcutDemo = 177,
        /// <summary>
        /// Logs for Firebase App Manager (go/appmanager)
        /// </summary>
        [pbr::OriginalName("APPMANAGER")] Appmanager = 183,
        /// <summary>
        /// Counters for Smart Lock (go/smartlock)
        /// </summary>
        [pbr::OriginalName("SMARTLOCK_COUNTERS")] SmartlockCounters = 184,
        /// <summary>
        /// Guide-aggregated logs for go/expeditions .
        /// </summary>
        [pbr::OriginalName("EXPEDITIONS_GUIDE")] ExpeditionsGuide = 185,
        /// <summary>
        /// Logs for Fuse (go/fuse).
        /// </summary>
        [pbr::OriginalName("FUSE")] Fuse = 186,
        /// <summary>
        /// Logs for PixelPerfect client app (go/pxp-client)
        /// </summary>
        [pbr::OriginalName("PIXEL_PERFECT_CLIENT_STATE_LOGGER")] PixelPerfectClientStateLogger = 187,
        /// <summary>
        /// Counters for platform stats.(go/androidplatformstats, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("PLATFORM_STATS_COUNTERS")] PlatformStatsCounters = 188,
        /// <summary>
        /// Google Drive Viewer Android and iOS apps (go/picoprojector)
        /// </summary>
        [pbr::OriginalName("DRIVE_VIEWER")] DriveViewer = 189,
        /// <summary>
        /// Google PDF Viewer Android app (go/picoprojector)
        /// </summary>
        [pbr::OriginalName("PDF_VIEWER")] PdfViewer = 190,
        /// <summary>
        /// Logs for Bigtop (externally known as Inbox, go/bigtop).
        /// </summary>
        [pbr::OriginalName("BIGTOP")] Bigtop = 191,
        /// <summary>
        /// Logs for Google Voice (go/googlevoice).
        /// </summary>
        [pbr::OriginalName("VOICE")] Voice = 192,
        /// <summary>
        /// Logs for My Fiber mobile applications (go/myfibernative)
        /// </summary>
        [pbr::OriginalName("MYFIBER")] Myfiber = 194,
        /// <summary>
        /// Logs for RecordedPages (go/recorded-pages)
        /// </summary>
        [pbr::OriginalName("RECORDED_PAGES")] RecordedPages = 195,
        /// <summary>
        /// Logs for MobDog (go/mobdog)
        /// </summary>
        [pbr::OriginalName("MOB_DOG")] MobDog = 197,
        /// <summary>
        /// Logs for the Wallet app (go/gmoney)
        /// </summary>
        [pbr::OriginalName("WALLET_APP")] WalletApp = 198,
        /// <summary>
        /// Logs for GBoard (go/gboard)
        /// </summary>
        [pbr::OriginalName("GBOARD")] Gboard = 199,
        /// <summary>
        /// Cronet UMA logs from GMM (go/cronet-uma)
        /// </summary>
        [pbr::OriginalName("CRONET_GMM")] CronetGmm = 203,
        /// <summary>
        /// Logs for Trusted Face (go/smartlock)
        /// </summary>
        [pbr::OriginalName("TRUSTED_FACE")] TrustedFace = 204,
        /// <summary>
        /// Logs for Matchstick library (go/matchstick)
        /// </summary>
        [pbr::OriginalName("MATCHSTICK")] Matchstick = 205,
        /// <summary>
        /// Logs for Matchstick counters (go/matchstick)
        /// </summary>
        [pbr::OriginalName("MATCHSTICK_COUNTERS")] MatchstickCounters = 372,
        /// <summary>
        /// Logs for AppCatalog aka "Get My Google Apps" (go/growth)
        /// </summary>
        [pbr::OriginalName("APP_CATALOG")] AppCatalog = 206,
        /// <summary>
        /// Logs for Bluetooth (go/fluoride)
        /// </summary>
        [pbr::OriginalName("BLUETOOTH")] Bluetooth = 208,
        /// <summary>
        /// Logs for WiFi (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("WIFI")] Wifi = 209,
        /// <summary>
        /// Logs for Telcom (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("TELECOM")] Telecom = 210,
        /// <summary>
        /// Logs for Telephony (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("TELEPHONY")] Telephony = 211,
        /// <summary>
        /// Logs for the Identity frontend (go/ifus-readme)
        /// </summary>
        [pbr::OriginalName("IDENTITY_FRONTEND")] IdentityFrontend = 212,
        /// <summary>
        /// Logs for the Identity frontend (go/ifus-readme)
        /// </summary>
        [pbr::OriginalName("IDENTITY_FRONTEND_EXTENDED")] IdentityFrontendExtended = 558,
        /// <summary>
        /// Logs for Sesame (go/sesame-logging)
        /// </summary>
        [pbr::OriginalName("SESAME")] Sesame = 216,
        /// <summary>
        /// Google Keyboard's Latin IME content logs (go/google-keyboard)
        /// </summary>
        [pbr::OriginalName("GOOGLE_KEYBOARD_CONTENT")] GoogleKeyboardContent = 217,
        /// <summary>
        /// Logs for Madden (go/madden)
        /// </summary>
        [pbr::OriginalName("MADDEN")] Madden = 218,
        /// <summary>
        /// Logs for Ink (go/ink)
        /// </summary>
        [pbr::OriginalName("INK")] Ink = 219,
        /// <summary>
        /// Logs for Android Contacts (go/android-contacts)
        /// </summary>
        [pbr::OriginalName("ANDROID_CONTACTS")] AndroidContacts = 220,
        /// <summary>
        /// Google Keyboard histogram counters (go/google-keyboard)
        /// </summary>
        [pbr::OriginalName("GOOGLE_KEYBOARD_COUNTERS")] GoogleKeyboardCounters = 221,
        /// <summary>
        /// Clearcut prober (go/clearcut-prober)
        /// </summary>
        [pbr::OriginalName("CLEARCUT_PROBER")] ClearcutProber = 225,
        /// <summary>
        /// Logs for the Google Play Developer Console app
        /// </summary>
        [pbr::OriginalName("PLAY_CONSOLE_APP")] PlayConsoleApp = 226,
        /// <summary>
        /// Log for system health metrics for the Google Play Developer Console app
        /// </summary>
        [pbr::OriginalName("PLAY_CONSOLE_APP_PRIMES")] PlayConsoleAppPrimes = 264,
        /// <summary>
        /// Feature analytics for the
        /// </summary>
        [pbr::OriginalName("PLAY_CONSOLE_APP_FEATURE_ANALYTICS")] PlayConsoleAppFeatureAnalytics = 507,
        /// <summary>
        /// Google Play Developer Console
        /// app (go/clog)
        /// </summary>
        [pbr::OriginalName("SPECTRUM")] Spectrum = 230,
        /// <summary>
        /// Spectrum (go/spectrum-site)
        /// </summary>
        [pbr::OriginalName("SPECTRUM_COUNTERS")] SpectrumCounters = 231,
        /// <summary>
        /// Spectrum (go/spectrum-site)
        /// </summary>
        [pbr::OriginalName("SPECTRUM_ANDROID_PRIMES")] SpectrumAndroidPrimes = 267,
        /// <summary>
        /// Logs for the iOS Spotlight Search Library (go/tempeh-dd)
        /// </summary>
        [pbr::OriginalName("IOS_SPOTLIGHT_SEARCH_LIBRARY")] IosSpotlightSearchLibrary = 234,
        /// <summary>
        /// Logs for client-side analytics of Boq Web (go/boq-web)
        /// </summary>
        [pbr::OriginalName("BOQ_WEB")] BoqWeb = 241,
        /// <summary>
        /// Orchestration client logs for prod environment (go/megalogs-design)
        /// </summary>
        [pbr::OriginalName("ORCHESTRATION_CLIENT")] OrchestrationClient = 245,
        /// <summary>
        /// Orchestration client logs for dev environment (go/megalogs-design)
        /// </summary>
        [pbr::OriginalName("ORCHESTRATION_CLIENT_DEV")] OrchestrationClientDev = 246,
        /// <summary>
        /// Logs for Google Now Launcher (go/gnl-logging)
        /// </summary>
        [pbr::OriginalName("GOOGLE_NOW_LAUNCHER")] GoogleNowLauncher = 247,
        /// <summary>
        /// Logs of spam reports by scooby clients. (go/scooby)
        /// </summary>
        [pbr::OriginalName("SCOOBY_SPAM_REPORT_LOG")] ScoobySpamReportLog = 250,
        /// <summary>
        /// go/growthkit-metrics
        /// </summary>
        [pbr::OriginalName("IOS_GROWTH")] IosGrowth = 251,
        /// <summary>
        /// Drive web push notifications (go/apps-notify)
        /// </summary>
        [pbr::OriginalName("APPS_NOTIFY")] AppsNotify = 252,
        /// <summary>
        /// Smart Key App for project Bolt (go/smartlock)
        /// </summary>
        [pbr::OriginalName("SMARTKEY_APP")] SmartkeyApp = 269,
        /// <summary>
        /// Lifescience Clinical Studies logs (go/apollox)
        /// </summary>
        [pbr::OriginalName("CLINICAL_STUDIES")] ClinicalStudies = 270,
        /// <summary>
        /// System health metric for Google Fit Android App (go/heart, go/primes)
        /// </summary>
        [pbr::OriginalName("FITNESS_ANDROID_PRIMES")] FitnessAndroidPrimes = 271,
        /// <summary>
        /// Deprecated in favor of IMPROV_POSTIT and IMPROV_SHARPIE.
        /// </summary>
        [pbr::OriginalName("IMPROV_APPS")] ImprovApps = 272,
        /// <summary>
        /// Family Link (go/familylink-dd)
        /// </summary>
        [pbr::OriginalName("FAMILYLINK")] Familylink = 273,
        /// <summary>
        /// Family Link counters (go/familylink-dd)
        /// </summary>
        [pbr::OriginalName("FAMILYLINK_COUNTERS")] FamilylinkCounters = 274,
        /// <summary>
        /// NBU Society app (go/society)
        /// </summary>
        [pbr::OriginalName("SOCIETY")] Society = 275,
        /// <summary>
        /// Android Dialer Primes (go/dialer)
        /// </summary>
        [pbr::OriginalName("DIALER_ANDROID_PRIMES")] DialerAndroidPrimes = 277,
        /// <summary>
        /// YouTube Director App (go/youtube-director)
        /// </summary>
        [pbr::OriginalName("YOUTUBE_DIRECTOR_APP")] YoutubeDirectorApp = 278,
        /// <summary>
        /// Android Tachyon Client
        /// </summary>
        [pbr::OriginalName("TACHYON_ANDROID_PRIMES")] TachyonAndroidPrimes = 279,
        /// <summary>
        /// iOS Tachyon Client
        /// </summary>
        [pbr::OriginalName("TACHYON_IOS_PRIMES")] TachyonIosPrimes = 645,
        /// <summary>
        /// DriveFS (go/drive-fs)
        /// </summary>
        [pbr::OriginalName("DRIVE_FS")] DriveFs = 280,
        /// <summary>
        /// Logs for YT's main application
        /// </summary>
        [pbr::OriginalName("YT_MAIN")] YtMain = 281,
        /// <summary>
        /// Primes for Wing Marketplace Android app (go/wing-marketplace-android, go/primes)
        /// </summary>
        [pbr::OriginalName("WING_MARKETPLACE_ANDROID_PRIMES")] WingMarketplaceAndroidPrimes = 282,
        /// <summary>
        /// Logs for Dynamite Web app (go/dynamite)
        /// </summary>
        [pbr::OriginalName("DYNAMITE")] Dynamite = 283,
        /// <summary>
        /// Logs for the internal Android Food app (g3doc/java/com/google/corp/bizapps/rews/food/android)
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_FOOD")] CorpAndroidFood = 284,
        /// <summary>
        /// Primes for Android Messenger (go/bugledev, go/primes)
        /// </summary>
        [pbr::OriginalName("ANDROID_MESSAGING_PRIMES")] AndroidMessagingPrimes = 285,
        /// <summary>
        /// Primes for Google+ iOS app (go/gplus-ios, go/primes)
        /// </summary>
        [pbr::OriginalName("GPLUS_IOS_PRIMES")] GplusIosPrimes = 286,
        /// <summary>
        /// Primes for Chromecast Android app (go/cast-apps)
        /// </summary>
        [pbr::OriginalName("CHROMECAST_ANDROID_APP_PRIMES")] ChromecastAndroidAppPrimes = 288,
        /// <summary>
        /// Primes for Cast iOS app (go/cast-apps)
        /// </summary>
        [pbr::OriginalName("CAST_IOS_PRIMES")] CastIosPrimes = 344,
        /// <summary>
        /// Logs for AppStreaming Client Framework Side (go/piccard)
        /// </summary>
        [pbr::OriginalName("APPSTREAMING")] Appstreaming = 289,
        /// <summary>
        /// Logs for GMB Android app (go/gmb-android).
        /// </summary>
        [pbr::OriginalName("GMB_ANDROID")] GmbAndroid = 290,
        /// <summary>
        /// Primes for iOS Google Voice (go/googlevoice).
        /// </summary>
        [pbr::OriginalName("VOICE_IOS_PRIMES")] VoiceIosPrimes = 292,
        /// <summary>
        /// Primes for Android Google Voice (go/googlevoice).
        /// </summary>
        [pbr::OriginalName("VOICE_ANDROID_PRIMES")] VoiceAndroidPrimes = 293,
        /// <summary>
        /// NBU Paisa Experimental apps (go/paisa)
        /// </summary>
        [pbr::OriginalName("PAISA")] Paisa = 294,
        /// <summary>
        /// Primes for Nazdeek User (go/nazdeek).
        /// </summary>
        [pbr::OriginalName("NAZDEEK_USER_ANDROID_PRIMES")] NazdeekUserAndroidPrimes = 315,
        /// <summary>
        /// Primes for Nazdeek Cab (go/nazdeek).
        /// </summary>
        [pbr::OriginalName("NAZDEEK_CAB_ANDROID_PRIMES")] NazdeekCabAndroidPrimes = 316,
        /// <summary>
        /// Primes for Nazdeek Cafe (go/nazdeek).
        /// </summary>
        [pbr::OriginalName("NAZDEEK_CAFE_ANDROID_PRIMES")] NazdeekCafeAndroidPrimes = 317,
        /// <summary>
        /// Logs for GMB iOS App (go/gmb-ios).
        /// </summary>
        [pbr::OriginalName("GMB_IOS")] GmbIos = 295,
        /// <summary>
        /// Primes for GMB iOS App (go/gmb-ios).
        /// </summary>
        [pbr::OriginalName("GMB_IOS_PRIMES")] GmbIosPrimes = 325,
        /// <summary>
        /// Call logs events by scooby clients. (go/scooby)
        /// </summary>
        [pbr::OriginalName("SCOOBY_EVENTS")] ScoobyEvents = 296,
        /// <summary>
        /// Primes for Snapseed IOS (go/Snapseed)
        /// </summary>
        [pbr::OriginalName("SNAPSEED_IOS_PRIMES")] SnapseedIosPrimes = 297,
        /// <summary>
        /// YouTube Director App (go/youtube-director)
        /// </summary>
        [pbr::OriginalName("YOUTUBE_DIRECTOR_IOS_PRIMES")] YoutubeDirectorIosPrimes = 298,
        /// <summary>
        /// Event logs for Android wallpaper picker (go/magic-wallpapers)
        /// </summary>
        [pbr::OriginalName("WALLPAPER_PICKER")] WallpaperPicker = 299,
        /// <summary>
        /// Primes for Wallpapers (go/magic-wallpapers)
        /// </summary>
        [pbr::OriginalName("WALLPAPER_PICKER_ANDROID_PRIMES")] WallpaperPickerAndroidPrimes = 466,
        /// <summary>
        /// Chime (go/chime)
        /// </summary>
        [pbr::OriginalName("CHIME")] Chime = 300,
        /// <summary>
        /// Logs for debugging beacon module (go/beacons)
        /// </summary>
        [pbr::OriginalName("BEACON_GCORE")] BeaconGcore = 301,
        /// <summary>
        /// Android Studio (go/android-studio)
        /// </summary>
        [pbr::OriginalName("ANDROID_STUDIO")] AndroidStudio = 302,
        /// <summary>
        /// Logs for Docs Offline on Desktop  (go/jetpax)
        /// </summary>
        [pbr::OriginalName("DOCS_OFFLINE")] DocsOffline = 306,
        /// <summary>
        /// Logs for Freighter (http://go/freighter)
        /// </summary>
        [pbr::OriginalName("FREIGHTER")] Freighter = 307,
        /// <summary>
        /// Logs for the Google Docs iOS application
        /// </summary>
        [pbr::OriginalName("DOCS_IOS_PRIMES")] DocsIosPrimes = 308,
        /// <summary>
        /// Logs for the Google Docs iOS application
        /// </summary>
        [pbr::OriginalName("SLIDES_IOS_PRIMES")] SlidesIosPrimes = 309,
        /// <summary>
        /// Logs for the Google Docs iOS application
        /// </summary>
        [pbr::OriginalName("SHEETS_IOS_PRIMES")] SheetsIosPrimes = 310,
        /// <summary>
        /// Logs for Networking (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("IPCONNECTIVITY")] Ipconnectivity = 311,
        /// <summary>
        /// Logs for curator app (go/curator)
        /// </summary>
        [pbr::OriginalName("CURATOR")] Curator = 312,
        /// <summary>
        /// Logs for system health metric for Curator (go/primes, go/curator)
        /// </summary>
        [pbr::OriginalName("CURATOR_ANDROID_PRIMES")] CuratorAndroidPrimes = 318,
        /// <summary>
        /// System health metric for Google Fit Wear App (go/heart, go/primes)
        /// </summary>
        [pbr::OriginalName("FITNESS_ANDROID_WEAR_PRIMES")] FitnessAndroidWearPrimes = 319,
        /// <summary>
        /// Logs for Android Device Migration (go/android-migration).
        /// </summary>
        [pbr::OriginalName("ANDROID_MIGRATE")] AndroidMigrate = 320,
        /// <summary>
        /// PRIMES logs for Paisa User App (go/paisa-user, go/primes).
        /// </summary>
        [pbr::OriginalName("PAISA_USER_ANDROID_PRIMES")] PaisaUserAndroidPrimes = 321,
        /// <summary>
        /// PRIMES logs for Paisa Merchant App (go/paisa-merchant, go/primes).
        /// </summary>
        [pbr::OriginalName("PAISA_MERCHANT_ANDROID_PRIMES")] PaisaMerchantAndroidPrimes = 322,
        /// <summary>
        /// go/client-logging-wg
        /// </summary>
        [pbr::OriginalName("CLIENT_LOGGING_PROD")] ClientLoggingProd = 327,
        /// <summary>
        /// alias for CLIENT_LOGGING_PROD, for the clients in the wild.
        /// </summary>
        [pbr::OriginalName("CLIENT_LOGGING_DEMO", PreferredAlias = false)] ClientLoggingDemo = 327,
        /// <summary>
        /// PRIMES logs for Live Channels App (go/live-channels, go/primes).
        /// </summary>
        [pbr::OriginalName("LIVE_CHANNELS_ANDROID_PRIMES")] LiveChannelsAndroidPrimes = 328,
        /// <summary>
        /// PRIMES logs for Paisa User iOS App (go/paisa-user, go/primes, go/paisa-ios).
        /// </summary>
        [pbr::OriginalName("PAISA_USER_IOS_PRIMES")] PaisaUserIosPrimes = 329,
        /// <summary>
        /// PRIMES logs for Vespa iOS App (go/vespa)
        /// </summary>
        [pbr::OriginalName("VESPA_IOS_PRIMES")] VespaIosPrimes = 331,
        /// <summary>
        /// PRIMES logs for Play Games (go/gg-eng)
        /// </summary>
        [pbr::OriginalName("PLAY_GAMES_PRIMES")] PlayGamesPrimes = 332,
        /// <summary>
        /// GmsCore API counters (gmscore-framework@)
        /// </summary>
        [pbr::OriginalName("GMSCORE_API_COUNTERS")] GmscoreApiCounters = 333,
        /// <summary>
        /// Logs for Google Earth (go/earthdev)
        /// </summary>
        [pbr::OriginalName("EARTH")] Earth = 334,
        /// <summary>
        /// The counters for Google Earth (go/earthdev, earth-dev@).
        /// </summary>
        [pbr::OriginalName("EARTH_COUNTERS")] EarthCounters = 405,
        /// <summary>
        /// Logs for Calendar client events
        /// </summary>
        [pbr::OriginalName("CALENDAR_CLIENT")] CalendarClient = 335,
        /// <summary>
        /// Primes for Street View android app (go/svapp, go/primes).
        /// </summary>
        [pbr::OriginalName("SV_ANDROID_PRIMES")] SvAndroidPrimes = 336,
        /// <summary>
        /// Logs for Photos iOS App (go/photosios, go/primes)
        /// </summary>
        [pbr::OriginalName("PHOTOS_IOS_PRIMES")] PhotosIosPrimes = 337,
        /// <summary>
        /// Logs for Garage Android App (go/garage, go/primes)
        /// </summary>
        [pbr::OriginalName("GARAGE_ANDROID_PRIMES")] GarageAndroidPrimes = 338,
        /// <summary>
        /// Logs for Garage iOS App (go/garage, go/primes)
        /// </summary>
        [pbr::OriginalName("GARAGE_IOS_PRIMES")] GarageIosPrimes = 339,
        /// <summary>
        /// Logs for Social Good donation widget (go/onetoday)
        /// </summary>
        [pbr::OriginalName("SOCIAL_GOOD_DONATION_WIDGET")] SocialGoodDonationWidget = 340,
        /// <summary>
        /// Logs for SandClock app (go/sandclock).
        /// </summary>
        [pbr::OriginalName("SANDCLOCK")] Sandclock = 341,
        /// <summary>
        /// Logs for Imagery Viewer (go/imagery-viewer)
        /// </summary>
        [pbr::OriginalName("IMAGERY_VIEWER")] ImageryViewer = 342,
        /// <summary>
        /// PRIMES logs for Adwords Express Android app.
        /// </summary>
        [pbr::OriginalName("ADWORDS_EXPRESS_ANDROID_PRIMES")] AdwordsExpressAndroidPrimes = 343,
        /// <summary>
        /// Logs for Improv Postit (go/improvlogging)
        /// </summary>
        [pbr::OriginalName("IMPROV_POSTIT")] ImprovPostit = 345,
        /// <summary>
        /// Logs for Improv Sharpie (go/improvlogging)
        /// </summary>
        [pbr::OriginalName("IMPROV_SHARPIE")] ImprovSharpie = 346,
        /// <summary>
        /// Logs for Draper iOS App (go/draper-ios, go/primes)
        /// </summary>
        [pbr::OriginalName("DRAPER_IOS_PRIMES")] DraperIosPrimes = 347,
        /// <summary>
        /// SmartCam app event (go/smartcam)
        /// </summary>
        [pbr::OriginalName("SMARTCAM")] Smartcam = 348,
        /// <summary>
        /// Client side logs for Dasher Userhub (go/userhub-on-boq).
        /// </summary>
        [pbr::OriginalName("DASHER_USERHUB")] DasherUserhub = 349,
        /// <summary>
        /// PRIMES Logs for Android Contacts (go/android-contacts)
        /// </summary>
        [pbr::OriginalName("ANDROID_CONTACTS_PRIMES")] AndroidContactsPrimes = 350,
        /// <summary>
        /// Logs for Zagat Burgundy iOS App (go/zagat-ios)
        /// </summary>
        [pbr::OriginalName("ZAGAT_BURGUNDY_IOS_PRIMES")] ZagatBurgundyIosPrimes = 351,
        /// <summary>
        /// Logs for Zagat Burgundy Android App (go/zagat-android)
        /// </summary>
        [pbr::OriginalName("ZAGAT_BURGUNDY_ANDROID_PRIMES")] ZagatBurgundyAndroidPrimes = 352,
        /// <summary>
        /// Logs for system health metric for Calendar iOS (go/primes-ios)
        /// </summary>
        [pbr::OriginalName("CALENDAR_IOS_PRIMES")] CalendarIosPrimes = 353,
        /// <summary>
        /// Primes for Street View android app (go/svapp, go/primes).
        /// </summary>
        [pbr::OriginalName("SV_IOS_PRIMES")] SvIosPrimes = 354,
        /// <summary>
        /// Logs for smart setup (go/smart-setup).
        /// </summary>
        [pbr::OriginalName("SMART_SETUP")] SmartSetup = 355,
        /// <summary>
        /// Logs for boond mobile app (go/village-mobile)
        /// </summary>
        [pbr::OriginalName("BOOND_ANDROID_PRIMES")] BoondAndroidPrimes = 356,
        /// <summary>
        /// PRIMES logs for Kong Android app (go/kong).
        /// </summary>
        [pbr::OriginalName("KONG_ANDROID_PRIMES")] KongAndroidPrimes = 358,
        /// <summary>
        /// Primes for Classroom iOS app (go/classroom-ios, go/primes).
        /// </summary>
        [pbr::OriginalName("CLASSROOM_IOS_PRIMES")] ClassroomIosPrimes = 359,
        /// <summary>
        /// Counters for Westinghouse (go/westinghouse)
        /// </summary>
        [pbr::OriginalName("WESTINGHOUSE_COUNTERS")] WestinghouseCounters = 360,
        /// <summary>
        /// Primes for GMSCore Wallet SDK (go/api-g3doc).
        /// </summary>
        [pbr::OriginalName("WALLET_SDK_GCORE")] WalletSdkGcore = 361,
        /// <summary>
        /// Primes for Android IME app (go/android-ime, go/primes).
        /// </summary>
        [pbr::OriginalName("ANDROID_IME_ANDROID_PRIMES")] AndroidImeAndroidPrimes = 362,
        /// <summary>
        /// Primes for Google Meet Android (go/thor-android).
        /// </summary>
        [pbr::OriginalName("MEETINGS_ANDROID_PRIMES")] MeetingsAndroidPrimes = 363,
        /// <summary>
        /// Primes for Google Meet iOS (go/thor-ios).
        /// </summary>
        [pbr::OriginalName("MEETINGS_IOS_PRIMES")] MeetingsIosPrimes = 364,
        /// <summary>
        /// Logs for Web Contacts (go/webcontacts-logging).
        /// </summary>
        [pbr::OriginalName("WEB_CONTACTS")] WebContacts = 365,
        /// <summary>
        /// Logs for Ads Integrity Ops Tools (go/hidoc).
        /// </summary>
        [pbr::OriginalName("ADS_INTEGRITY_OPS")] AdsIntegrityOps = 366,
        /// <summary>
        /// Logs for Topaz (go/topaz).
        /// </summary>
        [pbr::OriginalName("TOPAZ")] Topaz = 367,
        /// <summary>
        /// Primes for Classroom Android app (go/classroom-android, go/primes).
        /// </summary>
        [pbr::OriginalName("CLASSROOM_ANDROID_PRIMES")] ClassroomAndroidPrimes = 369,
        /// <summary>
        /// Logs for Thunderbird (go/thunderbird).
        /// </summary>
        [pbr::OriginalName("THUNDERBIRD")] Thunderbird = 370,
        /// <summary>
        /// Logs for Pulpfiction Toys (go/pulpfiction).
        /// </summary>
        [pbr::OriginalName("PULPFICTION")] Pulpfiction = 371,
        /// <summary>
        /// Logs for OneGoogle UI event (go/ogs-clearcut).
        /// </summary>
        [pbr::OriginalName("ONEGOOGLE")] Onegoogle = 373,
        /// <summary>
        /// Logs for Google Translate (go/translate).
        /// </summary>
        [pbr::OriginalName("TRANSLATE")] Translate = 375,
        /// <summary>
        /// Logs for Lifescience Frontends (go/csp-eng).
        /// </summary>
        [pbr::OriginalName("LIFESCIENCE_FRONTENDS")] LifescienceFrontends = 376,
        /// <summary>
        /// Counters/histograms for Android wallpaper picker (go/magic-wallpapers)
        /// </summary>
        [pbr::OriginalName("WALLPAPER_PICKER_COUNTERS")] WallpaperPickerCounters = 377,
        /// <summary>
        /// Counters for Magic Tether (go/magic-tether).
        /// </summary>
        [pbr::OriginalName("MAGICTETHER_COUNTERS")] MagictetherCounters = 378,
        /// <summary>
        /// NBU Society app (go/society).
        /// </summary>
        [pbr::OriginalName("SOCIETY_COUNTERS")] SocietyCounters = 379,
        /// <summary>
        /// Logs for phone calls metadata (Unicorn project; see go/unicomm-sms-calls-dd)
        /// </summary>
        [pbr::OriginalName("UNICOMM_P")] UnicommP = 380,
        /// <summary>
        /// Logs for SMS metadata (Unicorn project; see go/unicomm-sms-calls-dd)
        /// </summary>
        [pbr::OriginalName("UNICOMM_S")] UnicommS = 381,
        /// <summary>
        /// Logs for Who's Down (go/hallway).
        /// </summary>
        [pbr::OriginalName("HALLWAY")] Hallway = 382,
        /// <summary>
        /// Logs for Spaces (go/spaces).
        /// </summary>
        [pbr::OriginalName("SPACES")] Spaces = 383,
        /// <summary>
        /// Logs for Toolkit (go/toolkit).
        /// </summary>
        [pbr::OriginalName("TOOLKIT_QUICKSTART")] ToolkitQuickstart = 384,
        /// <summary>
        /// Primes for Chauffeur CarApp for Android (go/chauffeur)
        /// </summary>
        [pbr::OriginalName("CHAUFFEUR_ANDROID_PRIMES")] ChauffeurAndroidPrimes = 385,
        /// <summary>
        /// Primes for Chauffeur CarApp for iOS (go/chauffeur)
        /// </summary>
        [pbr::OriginalName("CHAUFFEUR_IOS_PRIMES")] ChauffeurIosPrimes = 386,
        /// <summary>
        /// Logs for FIDO client events (go/fido-logging).
        /// </summary>
        [pbr::OriginalName("FIDO")] Fido = 387,
        /// <summary>
        /// Logs for system health metric for MobDog Android (go/primes)
        /// </summary>
        [pbr::OriginalName("MOBDOG_ANDROID_PRIMES")] MobdogAndroidPrimes = 388,
        /// <summary>
        /// Logs for system health metric for MobDog iOS (go/primes)
        /// </summary>
        [pbr::OriginalName("MOBDOG_IOS_PRIMES")] MobdogIosPrimes = 389,
        /// <summary>
        /// Primes for Google AdWords Express ios app (go/primes-ios, go/awx-ios-design-doc)
        /// </summary>
        [pbr::OriginalName("AWX_IOS_PRIMES")] AwxIosPrimes = 391,
        /// <summary>
        /// Primes for Google Home Services ios app (go/primes-ios, go/has-ios-design)
        /// </summary>
        [pbr::OriginalName("GHS_IOS_PRIMES")] GhsIosPrimes = 392,
        /// <summary>
        /// Primes for Play Books for iOS (go/ios-play-books)
        /// </summary>
        [pbr::OriginalName("BOOKS_IOS_PRIMES")] BooksIosPrimes = 393,
        /// <summary>
        /// Logs for Links (go/links).
        /// </summary>
        [pbr::OriginalName("LINKS")] Links = 394,
        /// <summary>
        /// Primes for YouTube Creator Studio iOS (go/katnip)
        /// </summary>
        [pbr::OriginalName("KATNIP_IOS_PRIMES")] KatnipIosPrimes = 395,
        /// <summary>
        /// Primes for Android Play Books (go/android-books)
        /// </summary>
        [pbr::OriginalName("BOOKS_ANDROID_PRIMES")] BooksAndroidPrimes = 397,
        /// <summary>
        /// Primes for Dynamite Android app (go/dynamite)
        /// </summary>
        [pbr::OriginalName("DYNAMITE_ANDROID_PRIMES")] DynamiteAndroidPrimes = 398,
        /// <summary>
        /// Primes for Dynamite iOS app (go/dynamite)
        /// </summary>
        [pbr::OriginalName("DYNAMITE_IOS_PRIMES")] DynamiteIosPrimes = 399,
        /// <summary>
        /// Sideloaded music on Android devices (go/sideloaded-assistant-sketch)
        /// </summary>
        [pbr::OriginalName("SIDELOADED_MUSIC")] SideloadedMusic = 400,
        /// <summary>
        /// Logs for the internal Dory app (go/dory)
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_DORY")] CorpAndroidDory = 401,
        /// <summary>
        /// Logs for the internal Jetset app (go/jetset-project)
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_JETSET")] CorpAndroidJetset = 402,
        /// <summary>
        /// Logs for the cardboard ios sdk app (https://developers.google.com/vr/ios/)
        /// </summary>
        [pbr::OriginalName("VR_SDK_IOS_PRIMES")] VrSdkIosPrimes = 403,
        /// <summary>
        /// Logs for the cardboard android sdk app (https://developers.google.com/vr/android/)
        /// </summary>
        [pbr::OriginalName("VR_SDK_ANDROID_PRIMES")] VrSdkAndroidPrimes = 404,
        /// <summary>
        /// Photos Scanner project (go/photos-draper)
        /// </summary>
        [pbr::OriginalName("PHOTOS_SCANNER")] PhotosScanner = 406,
        /// <summary>
        /// Logs for Botguard in OGB (go/botguard-in-ogb-dd)
        /// </summary>
        [pbr::OriginalName("BG_IN_OGB")] BgInOgb = 407,
        /// <summary>
        /// Logs for Blogger Boq UX (go/blogger-boq)
        /// </summary>
        [pbr::OriginalName("BLOGGER")] Blogger = 408,
        /// <summary>
        /// Logs for the internal iOS Food app (go/food-ios)
        /// </summary>
        [pbr::OriginalName("CORP_IOS_FOOD")] CorpIosFood = 409,
        /// <summary>
        /// Logs for 909010 devices (go/909010)
        /// </summary>
        [pbr::OriginalName("BEACON_GCORE_TEST")] BeaconGcoreTest = 410,
        /// <summary>
        /// Logs for the Links iOS app (go/links)
        /// </summary>
        [pbr::OriginalName("LINKS_IOS_PRIMES")] LinksIosPrimes = 411,
        /// <summary>
        /// Clearcut logs for Chauffeur (go/chauffeur)
        /// </summary>
        [pbr::OriginalName("CHAUFFEUR")] Chauffeur = 412,
        /// <summary>
        /// Logs for Snapseed (go/snapseed).
        /// </summary>
        [pbr::OriginalName("SNAPSEED")] Snapseed = 413,
        /// <summary>
        /// Logs for system health metric for Google Earth Android app (go/earthdev, go/primes)
        /// </summary>
        [pbr::OriginalName("EARTH_ANDROID_PRIMES")] EarthAndroidPrimes = 414,
        /// <summary>
        /// Logs for the internal Fixit app (go/aiuto).
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_AIUTO")] CorpAndroidAiuto = 415,
        /// <summary>
        /// Logs for Google Fiber TV Mobile App (go/gfiber-mobile)
        /// </summary>
        [pbr::OriginalName("GFTV_MOBILE_PRIMES")] GftvMobilePrimes = 416,
        /// <summary>
        /// Logs for Gmail iOS (go/superduperpudu).
        /// </summary>
        [pbr::OriginalName("GMAIL_IOS")] GmailIos = 417,
        /// <summary>
        /// Primes for Topaz Android (go/topaz)
        /// </summary>
        [pbr::OriginalName("TOPAZ_ANDROID_PRIMES")] TopazAndroidPrimes = 418,
        /// <summary>
        /// Counters for social clients: gplus-log-quality@
        /// </summary>
        [pbr::OriginalName("SOCIAL_COUNTERS")] SocialCounters = 420,
        /// <summary>
        /// Logs for the internal Moma app (go/moma-mobile)
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_MOMA")] CorpAndroidMoma = 421,
        /// <summary>
        /// Logs for Google Meet Android and iOS (go/thor-android and go/thor-ios)
        /// </summary>
        [pbr::OriginalName("MEETINGS_LOG_REQUEST")] MeetingsLogRequest = 422,
        /// <summary>
        /// Logs for the gDeal app (https://g3doc.corp.google.com/java/com/google/corp/xanadu/g3doc/index.md?cl=head)
        /// </summary>
        [pbr::OriginalName("GDEAL")] Gdeal = 423,
        /// <summary>
        /// Logs for the Text-to-Speech Android app (go/tts)
        /// </summary>
        [pbr::OriginalName("GOOGLETTS")] Googletts = 424,
        /// <summary>
        /// Logs for Android GoogleLite app (go/googlelite)
        /// </summary>
        [pbr::OriginalName("SEARCHLITE_ANDROID_PRIMES")] SearchliteAndroidPrimes = 425,
        /// <summary>
        /// Logs for Nearby Auth (go/nearby-auth)
        /// </summary>
        [pbr::OriginalName("NEARBY_AUTH")] NearbyAuth = 426,
        /// <summary>
        /// Logs for the internal Assistant app (go/assistant-app).
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_ASSISTANT")] CorpAndroidAssistant = 427,
        /// <summary>
        /// Primes for Device Policy android app (go/devices-site)
        /// </summary>
        [pbr::OriginalName("DMAGENT_ANDROID_PRIMES")] DmagentAndroidPrimes = 428,
        /// <summary>
        /// Logs for the internal GBus app (go/gbus).
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_GBUS")] CorpAndroidGbus = 429,
        /// <summary>
        /// YouTube Unplugged iOS (go/yt-unplugged)
        /// </summary>
        [pbr::OriginalName("YOUTUBE_UNPLUGGED_IOS_PRIMES")] YoutubeUnpluggedIosPrimes = 430,
        /// <summary>
        /// Primes for Leanback Launcher on Android TV (go/atv-eng)
        /// </summary>
        [pbr::OriginalName("LEANBACK_LAUNCHER_PRIMES")] LeanbackLauncherPrimes = 431,
        [pbr::OriginalName("DROIDGUARD")] Droidguard = 432,
        /// <summary>
        /// Logs for the internal Dory app (go/dory)
        /// </summary>
        [pbr::OriginalName("CORP_IOS_DORY")] CorpIosDory = 433,
        /// <summary>
        /// Google Play Music Android (go/musicapp, go/gpm-primes)
        /// </summary>
        [pbr::OriginalName("PLAY_MUSIC_ANDROID_APP_PRIMES")] PlayMusicAndroidAppPrimes = 434,
        /// <summary>
        /// GPost Android App PRIMES (go/gpost-android-analytics)
        /// </summary>
        [pbr::OriginalName("GPOST_ANDROID_PRIMES")] GpostAndroidPrimes = 436,
        /// <summary>
        /// GPost Client App Events (go/gpost-android-analytics)
        /// </summary>
        [pbr::OriginalName("GPOST_CLIENT_LOGS")] GpostClientLogs = 437,
        /// <summary>
        /// Logs for DPanel (go/dpanel-eng)
        /// </summary>
        [pbr::OriginalName("DPANEL")] Dpanel = 438,
        /// <summary>
        /// Google AdSense Android app (go/adsense-android-app)
        /// </summary>
        [pbr::OriginalName("ADSENSE_ANDROID_PRIMES")] AdsenseAndroidPrimes = 439,
        /// <summary>
        /// Counters for Peer Download Manager (go/peer-download-manager)
        /// </summary>
        [pbr::OriginalName("PDM_COUNTERS")] PdmCounters = 440,
        /// <summary>
        /// Primes for Pomeroy (go/pomeroy).
        /// </summary>
        [pbr::OriginalName("EMERGENCY_ASSIST_PRIMES")] EmergencyAssistPrimes = 441,
        /// <summary>
        /// Logs for Telepath (http://go/telepath-project)
        /// </summary>
        [pbr::OriginalName("APPS_TELEPATH")] AppsTelepath = 442,
        /// <summary>
        /// Metalogs for Clearcut
        /// </summary>
        [pbr::OriginalName("METALOG")] Metalog = 443,
        /// <summary>
        /// Logs for Telecom -- through PlatformStats (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("TELECOM_PLATFORM_STATS")] TelecomPlatformStats = 444,
        /// <summary>
        /// Logs for WiFi -- through PlatformStats (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("WIFI_PLATFORM_STATS")] WifiPlatformStats = 445,
        /// <summary>
        /// Logs for Google Mobile Ads SDK (go/gma-sdk)
        /// </summary>
        [pbr::OriginalName("GMA_SDK")] GmaSdk = 446,
        /// <summary>
        /// Counters for Google Mobile Ads SDK (go/gma-sdk)
        /// </summary>
        [pbr::OriginalName("GMA_SDK_COUNTERS")] GmaSdkCounters = 447,
        /// <summary>
        /// Logs for Creative Preview (go/audition)
        /// </summary>
        [pbr::OriginalName("ANDROID_CREATIVE_PREVIEW_PRIMES")] AndroidCreativePreviewPrimes = 448,
        /// <summary>
        /// Logs for Telephony -- through PlatformStats (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("TELEPHONY_PLATFORM_STATS")] TelephonyPlatformStats = 449,
        /// <summary>
        /// Logs for TestDrive (go/testdrive)
        /// </summary>
        [pbr::OriginalName("TESTDRIVE_PRIMES")] TestdrivePrimes = 450,
        /// <summary>
        /// Logs for cs.apk
        /// </summary>
        [pbr::OriginalName("CARRIER_SERVICES")] CarrierServices = 451,
        /// <summary>
        /// Primes for Google Cloud Console app (go/vespa)
        /// </summary>
        [pbr::OriginalName("CLOUD_CONSOLE_ANDROID_PRIMES")] CloudConsoleAndroidPrimes = 452,
        /// <summary>
        /// Street View app (go/svapp)
        /// </summary>
        [pbr::OriginalName("STREET_VIEW")] StreetView = 453,
        /// <summary>
        /// Logs for Stax (go/stax-eng)
        /// </summary>
        [pbr::OriginalName("STAX")] Stax = 454,
        /// <summary>
        /// Google Play Newsstand Android PRIMES (go/dots)
        /// </summary>
        [pbr::OriginalName("NEWSSTAND_ANDROID_PRIMES")] NewsstandAndroidPrimes = 455,
        /// <summary>
        /// Google Play Newsstand iOS PRIMES (go/dots)
        /// </summary>
        [pbr::OriginalName("NEWSSTAND_IOS_PRIMES")] NewsstandIosPrimes = 651,
        /// <summary>
        /// NBU Paisa User app (go/paisa)
        /// </summary>
        [pbr::OriginalName("PAISA_USER")] PaisaUser = 456,
        /// <summary>
        /// Primes logs for cs.apk
        /// </summary>
        [pbr::OriginalName("CARRIER_SERVICES_ANDROID_PRIMES")] CarrierServicesAndroidPrimes = 457,
        /// <summary>
        /// Logs for Networking -- through PlatformStats (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("IPCONNECTIVITY_PLATFORM_STATS")] IpconnectivityPlatformStats = 460,
        /// <summary>
        /// Firebase Performance (go/fireperf-backend) autopush instance
        /// </summary>
        [pbr::OriginalName("FIREPERF_AUTOPUSH")] FireperfAutopush = 461,
        /// <summary>
        /// Firebase Performance (go/fireperf-backend) prod instance
        /// </summary>
        [pbr::OriginalName("FIREPERF")] Fireperf = 462,
        /// <summary>
        /// Logs for the Zagat iOS app (go/burgundy)
        /// </summary>
        [pbr::OriginalName("ZAGAT_IOS_AUTHENTICATED")] ZagatIosAuthenticated = 463,
        /// <summary>
        /// Logs for ULR (go/gcore-ulr)
        /// </summary>
        [pbr::OriginalName("ULR")] Ulr = 464,
        /// <summary>
        /// Logs for system health metric for Play Movies Android (go/play-movies-android)
        /// </summary>
        [pbr::OriginalName("PLAY_MOVIES_ANDROID_PRIMES")] PlayMoviesAndroidPrimes = 467,
        /// <summary>
        /// Logs for the Smart Lock iOS app go/smartlock-ios-design
        /// </summary>
        [pbr::OriginalName("SMART_LOCK_IOS")] SmartLockIos = 468,
        /// <summary>
        /// Logs for the Zagat iOS app (go/burgundy)
        /// </summary>
        [pbr::OriginalName("ZAGAT_IOS_PSEUDONYMOUS")] ZagatIosPseudonymous = 469,
        /// <summary>
        /// Logs for travel-booking (go/travel-booking)
        /// </summary>
        [pbr::OriginalName("TRAVEL_BOOKING")] TravelBooking = 470,
        /// <summary>
        /// Odyssey logs for Westinghouse (go/westinghouse)
        /// </summary>
        [pbr::OriginalName("WESTINGHOUSE_ODYSSEY")] WestinghouseOdyssey = 471,
        /// <summary>
        /// Logs for system health metric for GMM wearable (go/weargo)
        /// </summary>
        [pbr::OriginalName("GMM_WEARABLE_PRIMES")] GmmWearablePrimes = 472,
        /// <summary>
        /// (go/huddle-team)
        /// </summary>
        [pbr::OriginalName("HUDDLE_ANDROID")] HuddleAndroid = 473,
        /// <summary>
        /// Logs for downloadable fonts (go/O-downloadable-fonts)
        /// </summary>
        [pbr::OriginalName("DL_FONTS")] DlFonts = 474,
        /// <summary>
        /// Logs for system health metric for Google Keep (go/keep)
        /// </summary>
        [pbr::OriginalName("KEEP_ANDROID_PRIMES")] KeepAndroidPrimes = 475,
        /// <summary>
        /// Logs for the Campus v2 Android app
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_CAMPUS")] CorpAndroidCampus = 476,
        /// <summary>
        /// Logs for the Tango Core APK
        /// </summary>
        [pbr::OriginalName("TANGO_CORE")] TangoCore = 477,
        /// <summary>
        /// Logs for the Romanesco GMSCore Module (go/romanesco)
        /// </summary>
        [pbr::OriginalName("ROMANESCO_GCORE")] RomanescoGcore = 478,
        /// <summary>
        /// Primes for Telepath (go/telepath-project)
        /// </summary>
        [pbr::OriginalName("APPS_TELEPATH_ANDROID_PRIMES")] AppsTelepathAndroidPrimes = 479,
        /// <summary>
        /// (go/speakeasy)
        /// </summary>
        [pbr::OriginalName("SPEAKEASY_BARKEEP_CLIENT")] SpeakeasyBarkeepClient = 481,
        /// <summary>
        /// Logs for the Baseline Android app (go/csp-eng)
        /// </summary>
        [pbr::OriginalName("BASELINE_ANDROID_PRIMES")] BaselineAndroidPrimes = 482,
        /// <summary>
        /// Counters for Tango Core APK
        /// </summary>
        [pbr::OriginalName("TANGO_CORE_COUNTERS")] TangoCoreCounters = 483,
        /// <summary>
        /// Logs for Phenotype Demo app (go/phenotypedemo)
        /// </summary>
        [pbr::OriginalName("PHENOTYPE_DEMO")] PhenotypeDemo = 484,
        /// <summary>
        /// Logging for Yeti services (go/yeti-deck)
        /// </summary>
        [pbr::OriginalName("YETI")] Yeti = 485,
        /// <summary>
        /// Streamz for Yeti services (go/yeti-deck)
        /// </summary>
        [pbr::OriginalName("YETI_STREAMZ")] YetiStreamz = 642,
        /// <summary>
        /// AMT Fiber TV Presence app (go/amt-tv-presence)
        /// </summary>
        [pbr::OriginalName("TVPRESENCE_ANDROID_PRIMES")] TvpresenceAndroidPrimes = 486,
        /// <summary>
        /// Primes for the Links Android app (go/links)
        /// </summary>
        [pbr::OriginalName("LINKS_ANDROID_PRIMES")] LinksAndroidPrimes = 487,
        /// <summary>
        /// Project Albert (go/project-albert-fe-dd)
        /// </summary>
        [pbr::OriginalName("ALBERT")] Albert = 488,
        /// <summary>
        /// Enterprise Search App (go/topaz).
        /// </summary>
        [pbr::OriginalName("TOPAZ_APP")] TopazApp = 489,
        /// <summary>
        /// Logs for Icentral (go/icdocs)
        /// </summary>
        [pbr::OriginalName("ICENTRAL_ANDROID_PRIMES")] IcentralAndroidPrimes = 490,
        /// <summary>
        /// Logs for Icentral (go/icdocs)
        /// </summary>
        [pbr::OriginalName("BISTO_ANDROID_PRIMES")] BistoAndroidPrimes = 491,
        /// <summary>
        /// Logs for the gDeal QA app (https://g3doc.corp.google.com/java/com/google/corp/xanadu/g3doc/index.md?cl=head)
        /// </summary>
        [pbr::OriginalName("GDEAL_QA")] GdealQa = 492,
        /// <summary>
        /// Logs for the Android TV Remote Control app (go/atv-eng)
        /// </summary>
        [pbr::OriginalName("ATV_REMOTE_PRIMES")] AtvRemotePrimes = 495,
        /// <summary>
        /// Logs for the Android TV Remote Service app (go/atv-eng)
        /// </summary>
        [pbr::OriginalName("ATV_REMOTE_SERVICE_PRIMES")] AtvRemoteServicePrimes = 496,
        /// <summary>
        /// Logs for Brella module in GMSCore. (go/brella)
        /// </summary>
        [pbr::OriginalName("BRELLA")] Brella = 497,
        /// <summary>
        /// go/growthkit-metrics
        /// </summary>
        [pbr::OriginalName("ANDROID_GROWTH")] AndroidGrowth = 498,
        /// <summary>
        /// Logs for GHS client apps (go/doraemon,
        /// </summary>
        [pbr::OriginalName("GHS_CLIENT_LOGS")] GhsClientLogs = 499,
        /// <summary>
        /// go/ghs-clearcut-integration)
        /// </summary>
        [pbr::OriginalName("GOR_ANDROID_PRIMES")] GorAndroidPrimes = 500,
        /// <summary>
        /// Logs for Network recommendations (go/experio)
        /// </summary>
        [pbr::OriginalName("NETREC")] Netrec = 501,
        /// <summary>
        /// Counters for Network recommendations (go/experio)
        /// </summary>
        [pbr::OriginalName("NETREC_COUNTERS")] NetrecCounters = 502,
        /// <summary>
        /// Client logs for admin console (go/novitas)
        /// </summary>
        [pbr::OriginalName("DASHER_ADMINCONSOLE")] DasherAdminconsole = 503,
        /// <summary>
        /// Logs for Sesame Camera Launch Gesture test
        /// </summary>
        [pbr::OriginalName("SESAME_CAMERA_LAUNCH")] SesameCameraLaunch = 504,
        /// <summary>
        /// app (go/camera_launch_gesture_logging)
        /// </summary>
        [pbr::OriginalName("GOOGLE_RED_ANDROID_PRIMES")] GoogleRedAndroidPrimes = 505,
        /// <summary>
        /// Logs for SearchLite, a.k.a., Google It (go/google-it).
        /// </summary>
        [pbr::OriginalName("SEARCHLITE")] Searchlite = 506,
        /// <summary>
        /// Logs for Contacts Assistants (go/contact-assistants)
        /// </summary>
        [pbr::OriginalName("CONTACTS_ASSISTANTS")] ContactsAssistants = 508,
        /// <summary>
        /// Logs for Concord aka cloud-analytics (go/concord)
        /// </summary>
        [pbr::OriginalName("CONCORD")] Concord = 509,
        /// <summary>
        /// Calendar iOS counters (go/cal-ios-metrics-to-clearcut).
        /// </summary>
        [pbr::OriginalName("CALENDAR_IOS_COUNTERS")] CalendarIosCounters = 510,
        /// <summary>
        /// System health metric for Google Clock Android Wear App (go/pocketwatch)
        /// </summary>
        [pbr::OriginalName("POCKETWATCH_ANDROID_WEAR_PRIMES")] PocketwatchAndroidWearPrimes = 511,
        /// <summary>
        /// Logs for system health metric for Myalo (go/myalo)
        /// </summary>
        [pbr::OriginalName("MYALO_ANDROID_PRIMES")] MyaloAndroidPrimes = 512,
        /// <summary>
        /// Activity Recognition (go/arccstats)
        /// </summary>
        [pbr::OriginalName("ACTIVITY_RECOGNITION")] ActivityRecognition = 513,
        /// <summary>
        /// VR streaming counters (go/vr-streaming).
        /// </summary>
        [pbr::OriginalName("VR_STREAMING_COUNTERS")] VrStreamingCounters = 514,
        /// <summary>
        /// Logs for topaz ios app primes (go/topaz)
        /// </summary>
        [pbr::OriginalName("TOPAZ_IOS_PRIMES")] TopazIosPrimes = 517,
        /// <summary>
        /// News Clearcut logs (http://g3doc/logs/proto/news).
        /// </summary>
        [pbr::OriginalName("NEWS_EVENT")] NewsEvent = 518,
        /// <summary>
        /// Logs for Chromoting (go/chromoting)
        /// </summary>
        [pbr::OriginalName("CHROMOTING")] Chromoting = 519,
        /// <summary>
        /// Counters for Chromoting (go/chromoting)
        /// </summary>
        [pbr::OriginalName("CHROMOTING_COUNTERS")] ChromotingCounters = 520,
        /// <summary>
        /// Counters for GMM wearable (go/weargo)
        /// </summary>
        [pbr::OriginalName("GMM_WEARABLE_COUNTERS")] GmmWearableCounters = 521,
        /// <summary>
        /// VR streaming primes (go/vr-streaming).
        /// </summary>
        [pbr::OriginalName("VR_STREAMING_ANDROID_PRIMES")] VrStreamingAndroidPrimes = 522,
        /// <summary>
        /// Logs for WPS Reachability GCore module (go/inapp-r10y-gmscore-pipeline).
        /// </summary>
        [pbr::OriginalName("REACHABILITY_GCORE")] ReachabilityGcore = 523,
        /// <summary>
        /// Logs for iOS DMAgent client (go/mdm-ios-clearcut)
        /// </summary>
        [pbr::OriginalName("DMAGENT_IOS")] DmagentIos = 524,
        /// <summary>
        /// Logs for iOS DMAgent primes (go/ios-emm-design), (go/primes-ios)
        /// </summary>
        [pbr::OriginalName("DMAGENT_IOS_PRIMES")] DmagentIosPrimes = 525,
        /// <summary>
        /// Logs for MiPhone Unlock service (go/sesame-logging)
        /// </summary>
        [pbr::OriginalName("SESAME_UNLOCK_PRIMES")] SesameUnlockPrimes = 526,
        /// <summary>
        /// Logs for Sesame TrustAPI (go/sesame-logging)
        /// </summary>
        [pbr::OriginalName("SESAME_TRUST_API_PRIMES")] SesameTrustApiPrimes = 527,
        /// <summary>
        /// The event logs for Google Store (http://go/google-store-analytics)
        /// </summary>
        [pbr::OriginalName("GSTORE")] Gstore = 528,
        /// <summary>
        /// The event logs for Google Assistant iOS app (http://go/opa-ios)
        /// </summary>
        [pbr::OriginalName("OPA_IOS")] OpaIos = 529,
        /// <summary>
        /// Primes for VrCore (http://go/vrcore)
        /// </summary>
        [pbr::OriginalName("VRCORE_ANDROID_PRIMES")] VrcoreAndroidPrimes = 530,
        /// <summary>
        /// Moma frontend (go/moma-site).
        /// </summary>
        [pbr::OriginalName("MOMA")] Moma = 531,
        /// <summary>
        /// Counters for Sesame Unlock (go/sesame-logging)
        /// </summary>
        [pbr::OriginalName("SESAME_UNLOCK_COUNTERS")] SesameUnlockCounters = 532,
        [pbr::OriginalName("LB_COUNTERS")] LbCounters = 533,
        /// <summary>
        /// The event logs for Daydream home in Odyssey (go/vr-home).
        /// </summary>
        [pbr::OriginalName("DAYDREAM_HOME")] DaydreamHome = 534,
        /// <summary>
        /// Logs for Ink Android primes (go/ink)
        /// </summary>
        [pbr::OriginalName("INK_ANDROID_PRIMES")] InkAndroidPrimes = 535,
        /// <summary>
        /// Logs for Ink iOS primes (go/ink)
        /// </summary>
        [pbr::OriginalName("INK_IOS_PRIMES")] InkIosPrimes = 536,
        /// <summary>
        /// Logs for iOS AssistantKit (go/assistantkit)
        /// </summary>
        [pbr::OriginalName("ASSISTANTKIT_IOS")] AssistantkitIos = 537,
        /// <summary>
        /// Primes logs for the internal Googler app (go/latios)
        /// </summary>
        [pbr::OriginalName("CORP_IOS_LATIOS_PRIMES")] CorpIosLatiosPrimes = 540,
        /// <summary>
        /// For collecting media analytics data from Android clients. (go/android-mediastats)
        /// </summary>
        [pbr::OriginalName("MEDIA_STATS")] MediaStats = 541,
        /// <summary>
        /// Cronet UMA logs from Android Photos (go/cronet-uma)
        /// </summary>
        [pbr::OriginalName("CRONET_ANDROID_PHOTOS")] CronetAndroidPhotos = 543,
        /// <summary>
        /// Logs for GWS JS client (http://go/gws-js-clearcut)
        /// </summary>
        [pbr::OriginalName("GWS_JS")] GwsJs = 544,
        /// <summary>
        /// Same as GWS_JS but triggers experimental
        /// </summary>
        [pbr::OriginalName("GWS_JS_AUTH_EXPERIMENT")] GwsJsAuthExperiment = 619,
        /// <summary>
        /// handling of GAIA failures
        /// (go/clearcut-consistent-identity)
        /// </summary>
        [pbr::OriginalName("CALCULATOR_ANDROID_PRIMES")] CalculatorAndroidPrimes = 545,
        /// <summary>
        /// Log for Google Meets Chrome extension (go/huddle-team, go/gm-chrome-ext)
        /// </summary>
        [pbr::OriginalName("GOOGLE_MEETS")] GoogleMeets = 547,
        /// <summary>
        /// Logs for Chrome OS Enterprise Enrollment app (http://go/eeapp)
        /// </summary>
        [pbr::OriginalName("ENTERPRISE_ENROLLMENT_COUNTERS")] EnterpriseEnrollmentCounters = 548,
        /// <summary>
        /// GNSS logs
        /// </summary>
        [pbr::OriginalName("GNSS")] Gnss = 549,
        /// <summary>
        /// Logs for Vimes (go/vimes-doc)
        /// </summary>
        [pbr::OriginalName("VIMES")] Vimes = 550,
        /// <summary>
        /// Logs for Google Camera App (go/google-camera)
        /// </summary>
        [pbr::OriginalName("CAMERA_ANDROID_PRIMES")] CameraAndroidPrimes = 551,
        [pbr::OriginalName("ANDROID_WEBVIEW")] AndroidWebview = 552,
        /// <summary>
        /// Logs for Nearby in GmsCore (go/nearby)
        /// </summary>
        [pbr::OriginalName("NEARBY")] Nearby = 553,
        /// <summary>
        /// Logs for Predict-on-Device in Gmscore (http://go/pod-in-gmscore)
        /// </summary>
        [pbr::OriginalName("PREDICT_ON_DEVICE")] PredictOnDevice = 554,
        /// <summary>
        /// Logs for GDI (go/gdi-csi)
        /// </summary>
        [pbr::OriginalName("OAUTH_INTEGRATIONS")] OauthIntegrations = 555,
        /// <summary>
        /// Primes for Improv [Material Gallery] (go/primes)
        /// </summary>
        [pbr::OriginalName("IMPROV_ANDROID_PRIMES")] ImprovAndroidPrimes = 556,
        /// <summary>
        /// Logs for Google Text-to-Speech app (go/tts)
        /// </summary>
        [pbr::OriginalName("GOOGLETTS_ANDROID_PRIMES")] GooglettsAndroidPrimes = 557,
        /// <summary>
        /// Logs for GNSS via PlatformStats
        /// </summary>
        [pbr::OriginalName("GNSS_PLATFORM_STATS")] GnssPlatformStats = 559,
        /// <summary>
        /// Logs for Actions on Google console (go/actionsongoogle)
        /// </summary>
        [pbr::OriginalName("ACTIONS_ON_GOOGLE")] ActionsOnGoogle = 560,
        /// <summary>
        /// Logs for Google Keyboard App (go/gboard)
        /// </summary>
        [pbr::OriginalName("GBOARD_ANDROID_PRIMES")] GboardAndroidPrimes = 561,
        /// <summary>
        /// Logs for Naksha Android app (go/naksha)
        /// </summary>
        [pbr::OriginalName("NAKSHA_ANDROID_PRIMES")] NakshaAndroidPrimes = 562,
        /// <summary>
        /// NBU Paisa app (go/paisa).
        /// </summary>
        [pbr::OriginalName("PAISA_COUNTERS")] PaisaCounters = 563,
        /// <summary>
        /// Logs for constellation gmscore module. (go/constellation-site)
        /// </summary>
        [pbr::OriginalName("CONSTELLATION")] Constellation = 564,
        /// <summary>
        /// Logs for Zandria (go/zandria)
        /// </summary>
        [pbr::OriginalName("ZANDRIA")] Zandria = 565,
        /// <summary>
        /// Logs for the internal Googler app (go/latios)
        /// </summary>
        [pbr::OriginalName("CORP_IOS_LATIOS")] CorpIosLatios = 566,
        /// <summary>
        /// Primes for Daydream Home (go/vr-home)
        /// </summary>
        [pbr::OriginalName("DAYDREAM_HOME_ANDROID_PRIMES")] DaydreamHomeAndroidPrimes = 567,
        /// <summary>
        /// Logs for Visual Semantic Lift (go/vsl)
        /// </summary>
        [pbr::OriginalName("VISUAL_SEMANTIC_LIFT")] VisualSemanticLift = 568,
        /// <summary>
        /// Flights + Hotel Packages (go/travel-packages)
        /// </summary>
        [pbr::OriginalName("TRAVEL_VACATIONS")] TravelVacations = 569,
        /// <summary>
        /// Logs for Daydream Keyboard app (go/vr-keyboard)
        /// </summary>
        [pbr::OriginalName("DAYDREAM_KEYBOARD_ANDROID_PRIMES")] DaydreamKeyboardAndroidPrimes = 570,
        /// <summary>
        /// Counters/histograms for SMS Sync (go/sms-sync)
        /// </summary>
        [pbr::OriginalName("SMS_SYNC_COUNTERS")] SmsSyncCounters = 571,
        /// <summary>
        /// Primes for the internal iOS Food app (go/food-ios)
        /// </summary>
        [pbr::OriginalName("CORP_IOS_FOOD_PRIMES")] CorpIosFoodPrimes = 572,
        /// <summary>
        /// Counters/histograms for Moma frontend (go/moma-site).
        /// </summary>
        [pbr::OriginalName("MOMA_COUNTERS")] MomaCounters = 573,
        /// <summary>
        /// Logs for the Baseline iOS app (go/csp-eng)
        /// </summary>
        [pbr::OriginalName("BASELINE_IOS_PRIMES")] BaselineIosPrimes = 575,
        /// <summary>
        /// Like METALOG_COUNTERS, but never sampled. Used for keeping track of Clearcut log loss rate. (go/clearcut-log-loss-tracking, romandudko@, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("CLEARCUT_LOG_LOSS")] ClearcutLogLoss = 576,
        /// <summary>
        /// Logs for Birdsong (go/multi-device-ott-voip)
        /// </summary>
        [pbr::OriginalName("BIRDSONG")] Birdsong = 577,
        /// <summary>
        /// Primes logs for the Google Assistant iOS app (http://go/opa-ios)
        /// </summary>
        [pbr::OriginalName("OPA_IOS_PRIMES")] OpaIosPrimes = 578,
        /// <summary>
        /// Counters for pseudonymous id. (go/pseudonymousid, clearcut-eng@)
        /// </summary>
        [pbr::OriginalName("PSEUDONYMOUS_ID_COUNTERS")] PseudonymousIdCounters = 579,
        /// <summary>
        /// Logs for Proxy Companion
        /// </summary>
        [pbr::OriginalName("PROXY_COMPANION_ANDROID_PRIMES")] ProxyCompanionAndroidPrimes = 580,
        /// <summary>
        /// Logs for Image Search (go/images)
        /// </summary>
        [pbr::OriginalName("IMAGES")] Images = 581,
        /// <summary>
        /// Logs for Greentea Flutter app (iOS and Android) (go/what-is-greentea-mobile)
        /// </summary>
        [pbr::OriginalName("GREENTEA")] Greentea = 582,
        /// <summary>
        /// Autofill with Google (go/gms-autofill)
        /// </summary>
        [pbr::OriginalName("AUTOFILL_WITH_GOOGLE")] AutofillWithGoogle = 583,
        /// <summary>
        /// Primes for Zebedee (go/zebedee)
        /// </summary>
        [pbr::OriginalName("ZEBEDEE_ANDROID_PRIMES")] ZebedeeAndroidPrimes = 584,
        /// <summary>
        /// Primes for Gboard iOS. (go/gboard)
        /// </summary>
        [pbr::OriginalName("GBOARD_IOS_PRIMES")] GboardIosPrimes = 585,
        /// <summary>
        /// Primes for Keep iOS (go/keep)
        /// </summary>
        [pbr::OriginalName("KEEP_IOS_PRIMES")] KeepIosPrimes = 586,
        /// <summary>
        /// Royalmint Android (go/royalmint-info) App metric logging (go/primes)
        /// </summary>
        [pbr::OriginalName("ROYALMINT_ANDROID_PRIMES")] RoyalmintAndroidPrimes = 587,
        /// <summary>
        /// Logs for Drive iOS App (go/drive-ios)
        /// </summary>
        [pbr::OriginalName("DRIVE_IOS_PRIMES")] DriveIosPrimes = 588,
        /// <summary>
        /// Reveal (go/reveal)
        /// </summary>
        [pbr::OriginalName("REVEAL")] Reveal = 590,
        /// <summary>
        /// Logs for Trends client (http://go/trends)
        /// </summary>
        [pbr::OriginalName("TRENDS_CLIENT")] TrendsClient = 591,
        /// <summary>
        /// Logs for system health metric for FilesGo
        /// </summary>
        [pbr::OriginalName("FILESGO_ANDROID_PRIMES")] FilesgoAndroidPrimes = 593,
        /// <summary>
        /// (go/primes, go/curator)
        /// </summary>
        [pbr::OriginalName("PIXEL_HW_INFO")] PixelHwInfo = 594,
        /// <summary>
        /// Counters for Health app (go/wear-health)
        /// </summary>
        [pbr::OriginalName("HEALTH_COUNTERS")] HealthCounters = 595,
        /// <summary>
        /// Logs from Web Search Clients. (go/web-logging)
        /// </summary>
        [pbr::OriginalName("WEB_SEARCH")] WebSearch = 596,
        /// <summary>
        /// Logs from LittleHug in People GMS Core module (go/littlehug)
        /// </summary>
        [pbr::OriginalName("LITTLEHUG_PEOPLE")] LittlehugPeople = 597,
        /// <summary>
        /// MyGlass companion application
        /// </summary>
        [pbr::OriginalName("MYGLASS_ANDROID_PRIMES")] MyglassAndroidPrimes = 598,
        /// <summary>
        /// Logs for Turbo App (go/o-charge-nudges-1p)
        /// </summary>
        [pbr::OriginalName("TURBO")] Turbo = 599,
        /// <summary>
        /// Logs for the Android OTA GMSCore Module (go/android-ota-metrics)
        /// </summary>
        [pbr::OriginalName("ANDROID_OTA")] AndroidOta = 600,
        [pbr::OriginalName("SENSE_AMBIENTMUSIC")] SenseAmbientmusic = 601,
        [pbr::OriginalName("SENSE_DND")] SenseDnd = 602,
        /// <summary>
        /// Logs for Libassistant, Google Assistant's C++ client library. (go/libassistant)
        /// </summary>
        [pbr::OriginalName("LIBASSISTANT")] Libassistant = 603,
        /// <summary>
        /// For Client Streamz project go/mobile-client-streamz, huili@
        /// </summary>
        [pbr::OriginalName("STREAMZ")] Streamz = 604,
        /// <summary>
        /// Logs from eUICC APK (go/esim)
        /// </summary>
        [pbr::OriginalName("EUICC")] Euicc = 605,
        /// <summary>
        /// For Medical Scribe project, go/medical-scribe
        /// </summary>
        [pbr::OriginalName("MEDICAL_SCRIBE")] MedicalScribe = 606,
        /// <summary>
        /// The Calendar iOS events extension
        /// </summary>
        [pbr::OriginalName("CALENDAR_IOS")] CalendarIos = 607,
        /// <summary>
        /// (go/cal-ios-metrics-to-clearcut)
        /// </summary>
        [pbr::OriginalName("AUDIT")] Audit = 608,
        /// <summary>
        /// Primes for Easel Service (go/paintbox).
        /// </summary>
        [pbr::OriginalName("EASEL_SERVICE_ANDROID_PRIMES")] EaselServiceAndroidPrimes = 609,
        /// <summary>
        /// Primes for Science Journal Android (go/sciencejournal)
        /// </summary>
        [pbr::OriginalName("WHISTLEPUNK_ANDROID_PRIMES")] WhistlepunkAndroidPrimes = 610,
        /// <summary>
        /// Primes for Science Journal iOS (go/sciencejournal)
        /// </summary>
        [pbr::OriginalName("WHISTLEPUNK_IOS_PRIMES")] WhistlepunkIosPrimes = 611,
        /// <summary>
        /// Edge pcaps logged by network surveyor (go/network_surveyor)
        /// </summary>
        [pbr::OriginalName("EDGE_PCAP")] EdgePcap = 612,
        /// <summary>
        /// Counters for Icing (go/icing)
        /// </summary>
        [pbr::OriginalName("ICING_COUNTERS")] IcingCounters = 613,
        /// <summary>
        /// Primes for Beacon Tools Android (go/beacontools)
        /// </summary>
        [pbr::OriginalName("BEACON_TOOLS_ANDROID_PRIMES")] BeaconToolsAndroidPrimes = 614,
        /// <summary>
        /// Primes for Beacon Tools iOS (go/beacontools)
        /// </summary>
        [pbr::OriginalName("BEACON_TOOLS_IOS_PRIMES")] BeaconToolsIosPrimes = 615,
        /// <summary>
        /// Logs for Scooby Gmscore events. (go/scooby)
        /// </summary>
        [pbr::OriginalName("SCOOBY_EVENT_LOG")] ScoobyEventLog = 616,
        /// <summary>
        /// Logs for system health metric for Google Earth iOS app (go/earthdev, go/primes)
        /// </summary>
        [pbr::OriginalName("EARTH_IOS_PRIMES")] EarthIosPrimes = 617,
        /// <summary>
        /// Logging for Yeti clients (go/yeti-deck)
        /// </summary>
        [pbr::OriginalName("YETI_CLIENT")] YetiClient = 618,
        /// <summary>
        /// Primes for Growth Catalog iOS (go/growthkit)
        /// </summary>
        [pbr::OriginalName("GROWTH_CATALOG_IOS_PRIMES")] GrowthCatalogIosPrimes = 621,
        /// <summary>
        /// Android Google Speech Services stats (go/gss-distinguish-logs)
        /// </summary>
        [pbr::OriginalName("ANDROID_SPEECH_SERVICES")] AndroidSpeechServices = 622,
        /// <summary>
        /// Logs for kids supervision (go/familylink-dd)
        /// </summary>
        [pbr::OriginalName("KIDS_SUPERVISION")] KidsSupervision = 623,
        /// <summary>
        /// Primes for Flutter-based AdWords Mobile app for Android (go/awm-eng &amp; go/flutterprimes)
        /// </summary>
        [pbr::OriginalName("ADWORDS_FLUTTER_ANDROID_PRIMES")] AdwordsFlutterAndroidPrimes = 626,
        /// <summary>
        /// Primes for Flutter-based AdWords Mobile app for iOS (go/awm-eng &amp; go/flutterprimes)
        /// </summary>
        [pbr::OriginalName("ADWORDS_FLUTTER_IOS_PRIMES")] AdwordsFlutterIosPrimes = 627,
        /// <summary>
        /// Primes for Hire mobile app for iOS
        /// </summary>
        [pbr::OriginalName("HIRE_IOS_PRIMES")] HireIosPrimes = 628,
        /// <summary>
        /// Logging for Project Runway client app (go/runway).
        /// </summary>
        [pbr::OriginalName("RUNWAY")] Runway = 629,
        /// <summary>
        /// Logging for Daydream social. (go/dd-social)
        /// </summary>
        [pbr::OriginalName("VR_SOCIAL")] VrSocial = 630,
        /// <summary>
        /// Logging for Google Tasks client app (go/tasks-team).
        /// </summary>
        [pbr::OriginalName("TASKS_ANDROID_PRIMES")] TasksAndroidPrimes = 631,
        /// <summary>
        /// Logging for wear-chameleon (go/wear-chameleon).
        /// </summary>
        [pbr::OriginalName("WEAR_CHAMELEON")] WearChameleon = 632,
        /// <summary>
        /// Clearcut counters for Zebedee (go/zebedee).
        /// </summary>
        [pbr::OriginalName("ZEBEDEE_COUNTERS")] ZebedeeCounters = 633,
        /// <summary>
        /// Logs for Carrier settings usage (go/connectivity-site)
        /// </summary>
        [pbr::OriginalName("CARRIER_SETTINGS")] CarrierSettings = 634,
        /// <summary>
        /// Logs for OneGoogle Mobile primitives (go/onegoogle-mobile).
        /// </summary>
        [pbr::OriginalName("ONEGOOGLE_MOBILE")] OnegoogleMobile = 635,
        /// <summary>
        /// Logging for Smart-Sharing (go/smartshare-engspec).
        /// </summary>
        [pbr::OriginalName("ANDROID_SMART_SHARE")] AndroidSmartShare = 636,
        /// <summary>
        /// Primes for Hire mobile app for Android
        /// </summary>
        [pbr::OriginalName("HIRE_ANDROID_PRIMES")] HireAndroidPrimes = 637,
        /// <summary>
        /// Logging for Daydream comms. (go/daydream-comms-eng)
        /// </summary>
        [pbr::OriginalName("VR_COMMS")] VrComms = 638,
        /// <summary>
        /// Logging for Companion (go/gcompanion-eng)
        /// </summary>
        [pbr::OriginalName("G_SUITE_COMPANION")] GSuiteCompanion = 639,
        /// <summary>
        /// Logs for Backend requests from GMSCore (go/gmscore-backend-counters).
        /// </summary>
        [pbr::OriginalName("GMSCORE_BACKEND_COUNTERS")] GmscoreBackendCounters = 640,
        /// <summary>
        /// PRIMES logs for Mustard App (go/mustard).
        /// </summary>
        [pbr::OriginalName("MUSTARD_ANDROID_PRIMES")] MustardAndroidPrimes = 641,
        /// <summary>
        /// Primes for TvLauncher on Android TV (go/atv-eng)
        /// </summary>
        [pbr::OriginalName("TV_LAUNCHER_ANDROID_PRIMES")] TvLauncherAndroidPrimes = 643,
        /// <summary>
        /// Primes for TvRecommendations on Android TV (go/atv-eng)
        /// </summary>
        [pbr::OriginalName("TV_RECOMMENDATIONS_ANDROID_PRIMES")] TvRecommendationsAndroidPrimes = 644,
        /// <summary>
        /// Clearcut logs for Apps Assistant (go/gsuite-assistant)
        /// </summary>
        [pbr::OriginalName("APPS_ASSISTANT")] AppsAssistant = 646,
        /// <summary>
        /// Logs for Chrome Web Store
        /// </summary>
        [pbr::OriginalName("CHROME_WEB_STORE")] ChromeWebStore = 647,
        /// <summary>
        /// Logging for Search Console FE logging. (go/wmx)
        /// </summary>
        [pbr::OriginalName("SEARCH_CONSOLE")] SearchConsole = 648,
        /// <summary>
        /// Clearcut logs for Zebedee (go/zebedee)
        /// </summary>
        [pbr::OriginalName("ZEBEDEE")] Zebedee = 649,
        /// <summary>
        /// Logs for Assistant on Android TV (go/opa-tv)
        /// </summary>
        [pbr::OriginalName("OPA_TV")] OpaTv = 650,
        /// <summary>
        /// Clearcut logging for Google Tasks (go/tasks-web)
        /// </summary>
        [pbr::OriginalName("TASKS")] Tasks = 652,
        /// <summary>
        /// Clearcut logging for Apps Search Frontend (go/asfe-boq)
        /// </summary>
        [pbr::OriginalName("APPS_SEARCH")] AppsSearch = 653,
        /// <summary>
        /// Test log source for Clearcut testing purpose.
        /// </summary>
        [pbr::OriginalName("CLEARCUT_TEST")] ClearcutTest = 654,
        /// <summary>
        /// Logging for Assistant Lite (go/assistant-lite-1pager)
        /// </summary>
        [pbr::OriginalName("ASSISTANTLITE")] Assistantlite = 655,
        /// <summary>
        /// PRIMES logs for Assistant Lite App (go/assistant-lite-1pager)
        /// </summary>
        [pbr::OriginalName("ASSISTANTLITE_ANDROID_PRIMES")] AssistantliteAndroidPrimes = 656,
        /// <summary>
        /// Clearcut logging for Maps Unity SDK (go/musk)
        /// </summary>
        [pbr::OriginalName("MUSK")] Musk = 657,
        /// <summary>
        /// Clearcut logging for TvLauncher (go/atv-eng)
        /// </summary>
        [pbr::OriginalName("TV_LAUNCHER")] TvLauncher = 658,
        /// <summary>
        /// Clearcut logging for Food ordering Client App (go/fopa)
        /// </summary>
        [pbr::OriginalName("FOOD_ORDERING")] FoodOrdering = 659,
        /// <summary>
        /// Clearcut logging for TalkBack (go/talkback-logging)
        /// </summary>
        [pbr::OriginalName("TALKBACK")] Talkback = 660,
        /// <summary>
        /// Primes for Longfei Android app
        /// </summary>
        [pbr::OriginalName("LONGFEI_ANDROID_PRIMES")] LongfeiAndroidPrimes = 661,
        /// <summary>
        /// Counter logs for tracking module's use of Notifications.
        /// </summary>
        [pbr::OriginalName("GMSCORE_NOTIFICATION_COUNTERS")] GmscoreNotificationCounters = 662,
        /// <summary>
        /// Clearcut logging for Saves (go/saves)
        /// </summary>
        [pbr::OriginalName("SAVE")] Save = 663,
        /// <summary>
        /// Primes for MechaHamster iOS app
        /// </summary>
        [pbr::OriginalName("MECHAHAMSTER_IOS_PRIMES")] MechahamsterIosPrimes = 664,
        /// <summary>
        /// Primes for gRPC Android interop test app
        /// </summary>
        [pbr::OriginalName("GRPC_INTEROP_ANDROID_PRIMES")] GrpcInteropAndroidPrimes = 665,
        /// <summary>
        /// Clearcut logging for KlopfKlopf apps (go/klopfklopf-logging)
        /// </summary>
        [pbr::OriginalName("KLOPFKLOPF")] Klopfklopf = 666,
        /// <summary>
        /// Primes for gRPC iOS interop test app
        /// </summary>
        [pbr::OriginalName("GRPC_INTEROP_IOS_PRIMES")] GrpcInteropIosPrimes = 667,
        /// <summary>
        /// Westinghouse Cronet (go/westinghouse)
        /// </summary>
        [pbr::OriginalName("CRONET_WESTINGHOUSE")] CronetWestinghouse = 668,
        /// <summary>
        /// Clearcut logging for GmsCore ChromeSync module
        /// </summary>
        [pbr::OriginalName("CHROMESYNC")] Chromesync = 669,
        /// <summary>
        /// Collection of Network Statistics for GMSCore V13- (go/n-s).
        /// </summary>
        [pbr::OriginalName("NETSTATS_GMS_PREV14")] NetstatsGmsPrev14 = 670,
        /// <summary>
        /// Clearcut logging for Moma Android app.
        /// </summary>
        [pbr::OriginalName("CORP_ANDROID_MOMA_CLEARCUT")] CorpAndroidMomaClearcut = 672,
        /// <summary>
        /// Primes for Pixel Ambient Services.
        /// </summary>
        [pbr::OriginalName("PIXEL_AMBIENT_SERVICES_PRIMES")] PixelAmbientServicesPrimes = 673,
        /// <summary>
        /// Clearcut logging for SettingsIntelligence (go/unbundle-settings)
        /// </summary>
        [pbr::OriginalName("SETTINGS_INTELLIGENCE")] SettingsIntelligence = 674,
        /// <summary>
        /// Fireperf internal metrics low priority (go/fireperf-internal-metrics)
        /// </summary>
        [pbr::OriginalName("FIREPERF_INTERNAL_LOW")] FireperfInternalLow = 675,
        /// <summary>
        /// Fireperf internal metrics high priority (go/fireperf-internal-metrics)
        /// </summary>
        [pbr::OriginalName("FIREPERF_INTERNAL_HIGH")] FireperfInternalHigh = 676,
        /// <summary>
        /// Primes for Expeditions Android app (go/expeditions-eng).
        /// </summary>
        [pbr::OriginalName("EXPEDITIONS_ANDROID_PRIMES")] ExpeditionsAndroidPrimes = 677,
        /// <summary>
        /// For collecting launcher log from Android clients (go/androidplatformstats)
        /// </summary>
        [pbr::OriginalName("LAUNCHER_STATS")] LauncherStats = 678,
        /// <summary>
        /// Clearcut logging for Yeti Guest Orc (go/yeti-deck)
        /// </summary>
        [pbr::OriginalName("YETI_GUESTORC")] YetiGuestorc = 679,
        /// <summary>
        /// Logs for Motion Stills iOS client (go/motion-stills-ios-logging)
        /// </summary>
        [pbr::OriginalName("MOTION_STILLS")] MotionStills = 680,
        /// <summary>
        /// Assistant client monitoring (go/assistant-client-counters)
        /// </summary>
        [pbr::OriginalName("ASSISTANT_CLIENT_COUNTERS")] AssistantClientCounters = 681,
        /// <summary>
        /// Primes for Expeditions iOS app (go/expeditions-eng)
        /// </summary>
        [pbr::OriginalName("EXPEDITIONS_IOS_PRIMES")] ExpeditionsIosPrimes = 682,
        /// <summary>
        /// PRIMES logs for Google Assistant App (go/opa-shell-app-prd-v2)
        /// </summary>
        [pbr::OriginalName("GOOGLEASSISTANT_ANDROID_PRIMES")] GoogleassistantAndroidPrimes = 683,
        /// <summary>
        /// Logs for CameraKit iOS library (go/camerakit)
        /// </summary>
        [pbr::OriginalName("CAMERAKIT")] Camerakit = 684,
        /// <summary>
        /// Logs for Mweb - Android onboard web site (go/android-mweb-dd)
        /// </summary>
        [pbr::OriginalName("ANDROID_ONBOARD_WEB")] AndroidOnboardWeb = 685,
        /// <summary>
        /// Clearcut logging for Turnout (go/gconnect-turnout-clearcut)
        /// </summary>
        [pbr::OriginalName("GCONNECT_TURNOUT")] GconnectTurnout = 686,
        /// <summary>
        /// Primes for VR180 Android (go/wally-camera)
        /// </summary>
        [pbr::OriginalName("VR180_ANDROID_PRIMES")] Vr180AndroidPrimes = 687,
        /// <summary>
        /// Primes for VR180 iOS (go/wally-camera)
        /// </summary>
        [pbr::OriginalName("VR180_IOS_PRIMES")] Vr180IosPrimes = 688,
        /// <summary>
        /// Clearcut counters for Longfei (go/longfei-clearcut-design)
        /// </summary>
        [pbr::OriginalName("LONGFEI_COUNTERS")] LongfeiCounters = 689,
        /// <summary>
        /// Primes for Nexus ConnectivityMonitor.
        /// </summary>
        [pbr::OriginalName("CONNECTIVITY_MONITOR_ANDROID_PRIMES")] ConnectivityMonitorAndroidPrimes = 690,
        /// <summary>
        /// Logs for Google Play Protect UI (go/gpp-ui-analytics)
        /// </summary>
        [pbr::OriginalName("GPP_UI")] GppUi = 691,
        /// <summary>
        /// Logs for internal primes metrics.
        /// </summary>
        [pbr::OriginalName("PRIMES_INTERNAL_ANDROID_PRIMES")] PrimesInternalAndroidPrimes = 692,
        /// <summary>
        /// Clearcut logging for Yeti Playability Test Service (go/yeti-deck)
        /// </summary>
        [pbr::OriginalName("YETI_PTS")] YetiPts = 693,
        [pbr::OriginalName("FACT_CHECK_EXPLORER")] FactCheckExplorer = 694,
        /// <summary>
        /// Logs for assistant explore web directory (go/opa-web-directory)
        /// </summary>
        [pbr::OriginalName("ASSISTANT_HQ_WEB")] AssistantHqWeb = 695,
        /// <summary>
        /// Clearcut logging for Yeti TLS Proxy (go/yeti-deck)
        /// </summary>
        [pbr::OriginalName("YETI_TLS_PROXY")] YetiTlsProxy = 696,
        /// <summary>
        /// Logs for IOS Gmail notifications (go/deer-droppings)
        /// </summary>
        [pbr::OriginalName("GMAIL_DD")] GmailDd = 697,
        /// <summary>
        /// PRIMES logs for Khazana Aoo (go/khazana).
        /// </summary>
        [pbr::OriginalName("KHAZANA_ANDROID_PRIMES")] KhazanaAndroidPrimes = 698,
        /// <summary>
        /// Logs for ARCore.
        /// </summary>
        [pbr::OriginalName("ARCORE")] Arcore = 700,
        /// <summary>
        /// Primes for Google Wifi Android app
        /// </summary>
        [pbr::OriginalName("GOOGLE_WIFI_ANDROID_PRIMES")] GoogleWifiAndroidPrimes = 701,
        /// <summary>
        /// Logs for ProximityAuth API (go/proximity-auth)
        /// </summary>
        [pbr::OriginalName("PROXIMITY_AUTH_COUNTERS")] ProximityAuthCounters = 702,
        /// <summary>
        /// Primes for the keyboard on wear (go/wear-keyboard)
        /// </summary>
        [pbr::OriginalName("WEAR_KEYBOARD_ANDROID_PRIMES")] WearKeyboardAndroidPrimes = 703,
        [pbr::OriginalName("SEARCH_ON_BOQ")] SearchOnBoq = 704,
        /// <summary>
        /// Primes for Android SCONE app
        /// </summary>
        [pbr::OriginalName("SCONE_ANDROID_PRIMES")] SconeAndroidPrimes = 705,
        /// <summary>
        /// Mobile data plan API
        /// </summary>
        [pbr::OriginalName("MOBILE_DATA_PLAN")] MobileDataPlan = 706,
        /// <summary>
        /// Logs for Venus (go/venus)
        /// </summary>
        [pbr::OriginalName("VENUS")] Venus = 708,
        /// <summary>
        /// Logs for IPA in GMscore (go/ipa-search)
        /// </summary>
        [pbr::OriginalName("IPA_GCORE")] IpaGcore = 710,
        /// <summary>
        /// Logs for Tethering Entitlement Check on Pixel (go/hubble-eng)
        /// </summary>
        [pbr::OriginalName("TETHERING_ENTITLEMENT")] TetheringEntitlement = 711,
        /// <summary>
        /// Counters for WHAM (go/wham)
        /// </summary>
        [pbr::OriginalName("SEMANTIC_LOCATION_COUNTERS")] SemanticLocationCounters = 712,
        [pbr::OriginalName("TURBO_ANDROID_PRIMES")] TurboAndroidPrimes = 713,
        /// <summary>
        /// Logs for ULR (ideally for both Android and iOS eventually, but only iOS for now) (go/ios-ulr)
        /// </summary>
        [pbr::OriginalName("USER_LOCATION_REPORTING")] UserLocationReporting = 714,
        /// <summary>
        /// Logs for Firebase ML SDK. (go/firebase-ml-log)
        /// </summary>
        [pbr::OriginalName("FIREBASE_ML_SDK")] FirebaseMlSdk = 715,
        /// <summary>
        /// Logs for Google Opinion Rewards app (go/402)
        /// </summary>
        [pbr::OriginalName("GOR_CLEARCUT")] GorClearcut = 716,
        /// <summary>
        /// Logs for WFC activation app on Pixel (go/project-hubble)
        /// </summary>
        [pbr::OriginalName("WFC_ACTIVATION")] WfcActivation = 717,
        /// <summary>
        /// Logging for Google Tasks iOS app (go/tasks-team).
        /// </summary>
        [pbr::OriginalName("TASKS_IOS_PRIMES")] TasksIosPrimes = 718,
        /// <summary>
        /// Primes for Wing OpenSky Android app (go/wing-opensky)
        /// </summary>
        [pbr::OriginalName("WING_OPENSKY_ANDROID_PRIMES")] WingOpenskyAndroidPrimes = 719,
        /// <summary>
        /// Logs for Pixel CarrierSetup app (go/project-hubble)
        /// </summary>
        [pbr::OriginalName("CARRIER_SETUP")] CarrierSetup = 720,
        /// <summary>
        /// Logging for Assistant shell app (go/opa-shell-app-design).
        /// </summary>
        [pbr::OriginalName("ASSISTANT_SHELL")] AssistantShell = 721,
        /// <summary>
        /// ARCore SDK for Unity.
        /// </summary>
        [pbr::OriginalName("ARCORE_SDK")] ArcoreSdk = 1034,
      }

    }
    #endregion

  }

  /// <summary>
  /// Next tag: 6
  /// </summary>
  public sealed partial class LogResponse : pb::IMessage<LogResponse> {
    private static readonly pb::MessageParser<LogResponse> _parser = new pb::MessageParser<LogResponse>(() => new LogResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GoogleARCoreInternal.Proto.ArcoreClearcutReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogResponse(LogResponse other) : this() {
      switch (other.NextRequestWaitMillisCase) {
        case NextRequestWaitMillisOneofCase.NextRequestWaitMillisVal:
          NextRequestWaitMillisVal = other.NextRequestWaitMillisVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogResponse Clone() {
      return new LogResponse(this);
    }

    /// <summary>Field number for the "next_request_wait_millis_val" field.</summary>
    public const int NextRequestWaitMillisValFieldNumber = 1;
    /// <summary>
    /// [default = -1];
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NextRequestWaitMillisVal {
      get { return nextRequestWaitMillisCase_ == NextRequestWaitMillisOneofCase.NextRequestWaitMillisVal ? (long) nextRequestWaitMillis_ : 0L; }
      set {
        nextRequestWaitMillis_ = value;
        nextRequestWaitMillisCase_ = NextRequestWaitMillisOneofCase.NextRequestWaitMillisVal;
      }
    }

    private object nextRequestWaitMillis_;
    /// <summary>Enum of possible cases for the "next_request_wait_millis" oneof.</summary>
    public enum NextRequestWaitMillisOneofCase {
      None = 0,
      NextRequestWaitMillisVal = 1,
    }
    private NextRequestWaitMillisOneofCase nextRequestWaitMillisCase_ = NextRequestWaitMillisOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NextRequestWaitMillisOneofCase NextRequestWaitMillisCase {
      get { return nextRequestWaitMillisCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearNextRequestWaitMillis() {
      nextRequestWaitMillisCase_ = NextRequestWaitMillisOneofCase.None;
      nextRequestWaitMillis_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NextRequestWaitMillisVal != other.NextRequestWaitMillisVal) return false;
      if (NextRequestWaitMillisCase != other.NextRequestWaitMillisCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (nextRequestWaitMillisCase_ == NextRequestWaitMillisOneofCase.NextRequestWaitMillisVal) hash ^= NextRequestWaitMillisVal.GetHashCode();
      hash ^= (int) nextRequestWaitMillisCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (nextRequestWaitMillisCase_ == NextRequestWaitMillisOneofCase.NextRequestWaitMillisVal) {
        output.WriteRawTag(8);
        output.WriteInt64(NextRequestWaitMillisVal);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (nextRequestWaitMillisCase_ == NextRequestWaitMillisOneofCase.NextRequestWaitMillisVal) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextRequestWaitMillisVal);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogResponse other) {
      if (other == null) {
        return;
      }
      switch (other.NextRequestWaitMillisCase) {
        case NextRequestWaitMillisOneofCase.NextRequestWaitMillisVal:
          NextRequestWaitMillisVal = other.NextRequestWaitMillisVal;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NextRequestWaitMillisVal = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
